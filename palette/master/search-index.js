var searchIndex={};
searchIndex["approx"] = {"doc":"A crate that provides facilities for testing the…","i":[[3,"AbsDiff","approx","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",0,null],[3,"Relative","","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",1,null],[12,"max_relative","","The relative tolerance for testing values that are…",1,null],[3,"Ulps","","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",2,null],[12,"max_ulps","","The ULPs to tolerate when testing values that are far-apart.",2,null],[8,"AbsDiffEq","","Equality that is defined using the absolute difference of…",null,null],[16,"Epsilon","","Used for specifying relative comparisons.",3,null],[10,"default_epsilon","","The default tolerance to use when testing values that are…",3,[[]]],[10,"abs_diff_eq","","A test for equality that uses the absolute difference to…",3,[[["rhs"],["self"]],["bool"]]],[11,"abs_diff_ne","","The inverse of `ApproxEq::abs_diff_eq`.",3,[[["rhs"],["self"]],["bool"]]],[8,"RelativeEq","","Equality comparisons between two numbers using both the…",null,null],[10,"default_max_relative","","The default relative tolerance for testing values that are…",4,[[]]],[10,"relative_eq","","A test for equality that uses a relative comparison if the…",4,[[["rhs"],["self"]],["bool"]]],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",4,[[["rhs"],["self"]],["bool"]]],[8,"UlpsEq","","Equality comparisons between two numbers using both the…",null,null],[10,"default_max_ulps","","The default ULPs to tolerate when testing values that are…",5,[[],["u32"]]],[10,"ulps_eq","","A test for equality that uses units in the last place…",5,[[["u32"],["rhs"],["self"]],["bool"]]],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",5,[[["u32"],["rhs"],["self"]],["bool"]]],[11,"epsilon","","Replace the epsilon value with the one specified.",0,[[],["absdiff"]]],[11,"eq","","Peform the equality comparison",0,[[["b"],["a"]],["bool"]]],[11,"ne","","Peform the inequality comparison",0,[[["b"],["a"]],["bool"]]],[11,"epsilon","","Replace the epsilon value with the one specified.",1,[[],["relative"]]],[11,"max_relative","","Replace the maximum relative value with the one specified.",1,[[],["relative"]]],[11,"eq","","Peform the equality comparison",1,[[["b"],["a"]],["bool"]]],[11,"ne","","Peform the inequality comparison",1,[[["b"],["a"]],["bool"]]],[11,"epsilon","","Replace the epsilon value with the one specified.",2,[[],["ulps"]]],[11,"max_ulps","","Replace the max ulps value with the one specified.",2,[[["u32"]],["ulps"]]],[11,"eq","","Peform the equality comparison",2,[[["b"],["a"]],["bool"]]],[11,"ne","","Peform the inequality comparison",2,[[["b"],["a"]],["bool"]]],[14,"abs_diff_eq","","Approximate equality of using the absolute difference.",null,null],[14,"abs_diff_ne","","Approximate inequality of using the absolute difference.",null,null],[14,"relative_eq","","Approximate equality using both the absolute difference…",null,null],[14,"relative_ne","","Approximate inequality using both the absolute difference…",null,null],[14,"ulps_eq","","Approximate equality using both the absolute difference…",null,null],[14,"ulps_ne","","Approximate inequality using both the absolute difference…",null,null],[14,"assert_abs_diff_eq","","An assertion that delegates to `abs_diff_eq!`, and panics…",null,null],[14,"assert_abs_diff_ne","","An assertion that delegates to `abs_diff_ne!`, and panics…",null,null],[14,"assert_relative_eq","","An assertion that delegates to `relative_eq!`, and panics…",null,null],[14,"assert_relative_ne","","An assertion that delegates to `relative_ne!`, and panics…",null,null],[14,"assert_ulps_eq","","An assertion that delegates to `ulps_eq!`, and panics with…",null,null],[14,"assert_ulps_ne","","An assertion that delegates to `ulps_ne!`, and panics with…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["absdiff"]]],[11,"default","","",1,[[],["relative"]]],[11,"default","","",2,[[],["ulps"]]],[11,"abs_diff_ne","","The inverse of `ApproxEq::abs_diff_eq`.",3,[[["rhs"],["self"]],["bool"]]],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",4,[[["rhs"],["self"]],["bool"]]],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",5,[[["u32"],["rhs"],["self"]],["bool"]]]],"p":[[3,"AbsDiff"],[3,"Relative"],[3,"Ulps"],[8,"AbsDiffEq"],[8,"RelativeEq"],[8,"UlpsEq"]]};
searchIndex["find_crate"] = {"doc":"Find the crate name from the current `Cargo.toml`.","i":[[3,"Package","find_crate","The package data. This has information on the current…",null,null],[12,"name","","The current name of the package. This is always a valid…",0,null],[12,"version","","The version requirement of the package. Returns `*` if no…",0,null],[3,"Manifest","","The manifest of cargo.",null,null],[12,"dependencies","","The kind of dependencies to be searched.",1,null],[4,"Error","","An error that occurred when getting manifest.",null,null],[13,"NotFoundManifestDir","","`CARGO_MANIFEST_DIR` environment variable not found.",2,null],[13,"NotFound","","The crate with the specified name not found. This error…",2,null],[13,"Io","","An error occurred while to open or to read the manifest…",2,null],[13,"Toml","","An error occurred while to parse the manifest file.",2,null],[4,"Dependencies","","The kind of dependencies to be searched.",null,null],[13,"Default","","Search from `dependencies` and `dev-dependencies`.",3,null],[13,"Release","","Search from `dependencies`.",3,null],[13,"Dev","","Search from `dev-dependencies`.",3,null],[13,"Build","","Search from `build-dependencies`.",3,null],[13,"All","","Search from `dependencies`, `dev-dependencies` and…",3,null],[5,"find_crate","","Find the crate name from the current `Cargo.toml`.",null,[[["p"]],[["error"],["result",["package","error"]],["package"]]]],[11,"original_name","","Returns the original package name.",0,[[["self"]],["str"]]],[11,"is_original","","Returns `true` if the value returned by…",0,[[["self"]],["bool"]]],[11,"new","","Constructs a new `Manifest` from the current `Cargo.toml`.",1,[[],[["result",["error"]],["error"]]]],[11,"from_toml","","Constructs a new `Manifest` from a toml table.",1,[[["table"]],["self"]]],[11,"find","","Find the crate.",1,[[["self"],["p"]],[["package"],["option",["package"]]]]],[11,"find2","","Find the crate.",1,[[["self"],["p"]],[["package"],["option",["package"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",2,[[["error"]],["self"]]],[11,"from","","",2,[[["error"]],["self"]]],[11,"clone","","",3,[[["self"]],["dependencies"]]],[11,"clone","","",0,[[["self"]],["package"]]],[11,"clone","","",1,[[["self"]],["manifest"]]],[11,"default","","",3,[[],["self"]]],[11,"eq","","",3,[[["dependencies"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["package"]],["bool"]]],[11,"ne","","",0,[[["self"],["package"]],["bool"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"source","","",2,[[["self"]],[["option",["error"]],["error"]]]]],"p":[[3,"Package"],[3,"Manifest"],[4,"Error"],[4,"Dependencies"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord"]],["partialord"]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord"]],["partialord"]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord"]],["partialord"]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast"]],[["option"],["numcast"]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[["self"]],[["i32"],["option",["i32"]]]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[["self"]],[["u32"],["option",["u32"]]]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[["self"]],[["option",["f32"]],["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[["self"]],[["option",["f64"]],["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[["i16"]],["option"]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[["i32"]],["option"]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[["i64"]],["option"]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[["u16"]],["option"]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[["u32"]],["option"]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[["u64"]],["option"]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[],["t"]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",8,[[],["self"]]],[10,"infinity","","Returns the infinite value.",8,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",8,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",8,[[],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",8,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",8,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",8,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",8,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",8,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",8,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",8,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",8,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",8,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",8,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",8,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",8,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[],["self"]]],[11,"to_degrees","","Converts radians to degrees.",8,[[],["self"]]],[11,"to_radians","","Converts degrees to radians.",8,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",8,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",8,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",8,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",8,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",8,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",8,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",8,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",8,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",8,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",8,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",8,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",8,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",8,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",8,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",9,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[],["self"]]],[10,"PI","","Return Archimedes’ constant `π`.",9,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[],["self"]]],[11,"TAU","","Return the full circle constant `τ`.",9,[[],["self"]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero"]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one"]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",10,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",10,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[["self"]],["bool"]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",12,[[],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",12,[[],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",12,[[],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",12,[[],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[["u32"]],["self"]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",14,[[["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",15,[[["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",16,[[["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",17,[[["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",18,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",19,[[["u32"],["self"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",20,[[["u32"],["self"]],["option"]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",21,null],[10,"inv","","Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",22,null],[10,"mul_add","","Performs the fused multiply-add operation.",22,[[["a"],["b"]]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[["a"],["self"],["b"]]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",24,[[],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",24,[[],["self"]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",25,[[["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",26,[[["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",27,[[["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",28,[[["u32"],["self"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",29,[[["u32"],["self"]],["self"]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["one"],["usize"],["clone"],["mul"]],[["one"],["clone"],["mul"]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["one"],["usize"],["clone"],["checkedmul"]],[["one"],["clone"],["checkedmul"],["option"]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",30,null],[10,"pow","","Returns `self` to the power `rhs`.",30,[[["rhs"]]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",31,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",31,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",31,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",31,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",31,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",31,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",31,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",31,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",31,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",31,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",31,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",31,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",31,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",31,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",31,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",31,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",31,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",31,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",31,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",31,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",31,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",31,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",31,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",31,[[],["self"]]],[10,"to_degrees","","Converts radians to degrees.",31,[[],["self"]]],[10,"to_radians","","Converts degrees to radians.",31,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",31,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",31,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",31,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",31,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",31,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",31,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",31,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",31,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",31,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",31,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",31,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",31,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",31,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",31,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",31,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",31,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",31,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",31,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",31,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",31,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",31,[[],["self"]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed"]],["signed"]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed"]],["signed"]]],[5,"signum","","Returns the sign of the number.",null,[[["signed"]],["signed"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",32,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",32,[[["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",32,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",32,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",32,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",33,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",33,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["palette"] = {"doc":"A library that makes linear color calculations and…","i":[[24,"WithAlpha","palette","",null,null],[24,"Pixel","","",null,null],[3,"Alpha","","An alpha component wrapper for colors.",null,null],[12,"color","","The color.",0,null],[12,"alpha","","The transparency component. 0.0 is fully transparent and…",0,null],[3,"Hsl","","HSL color space.",null,null],[12,"hue","","The hue of the color, in degrees. Decides if it's red,…",1,null],[12,"saturation","","The colorfulness of the color. 0.0 gives gray scale colors…",1,null],[12,"lightness","","Decides how light the color will look. 0.0 will be black,…",1,null],[12,"standard","","The white point and RGB primaries this color is adapted…",1,null],[3,"Hsv","","HSV color space.",null,null],[12,"hue","","The hue of the color, in degrees. Decides if it's red,…",2,null],[12,"saturation","","The colorfulness of the color. 0.0 gives gray scale colors…",2,null],[12,"value","","Decides how bright the color will look. 0.0 will be black,…",2,null],[12,"standard","","The white point and RGB primaries this color is adapted…",2,null],[3,"Hwb","","HWB color space.",null,null],[12,"hue","","The hue of the color, in degrees. Decides if it's red,…",3,null],[12,"whiteness","","The whiteness of the color. It specifies the amount white…",3,null],[12,"blackness","","The blackness of the color. It specifies the amount black…",3,null],[12,"standard","","The white point and RGB primaries this color is adapted…",3,null],[3,"Lab","","The CIE L*a*b* (CIELAB) color space.",null,null],[12,"l","","L* is the lightness of the color. 0.0 gives absolute black…",4,null],[12,"a","","a* goes from red at -128 to green at 127.",4,null],[12,"b","","b* goes from yellow at -128 to blue at 127.",4,null],[12,"white_point","","The white point associated with the color's illuminant and…",4,null],[3,"Lch","","CIE L*C*h°, a polar version of CIE L*a*b*.",null,null],[12,"l","","L* is the lightness of the color. 0.0 gives absolute black…",5,null],[12,"chroma","","C* is the colorfulness of the color. It's similar to…",5,null],[12,"hue","","The hue of the color, in degrees. Decides if it's red,…",5,null],[12,"white_point","","The white point associated with the color's illuminant and…",5,null],[3,"Packed","","RGBA color packed into a 32-bit unsigned integer. Defaults…",null,null],[12,"color","","The sRGB color packed into a `u32`.",6,null],[12,"channel_order","","The channel ordering for red, green, blue, and alpha…",6,null],[3,"Xyz","","The CIE 1931 XYZ color space.",null,null],[12,"x","","X is the scale of what can be seen as a response curve for…",7,null],[12,"y","","Y is the luminance of the color, where 0.0 is black and…",7,null],[12,"z","","Z is the scale of what can be seen as the blue…",7,null],[12,"white_point","","The white point associated with the color's illuminant and…",7,null],[3,"Yxy","","The CIE 1931 Yxy (xyY)  color space.",null,null],[12,"x","","x chromacity co-ordinate derived from XYZ color space as…",8,null],[12,"y","","y chromacity co-ordinate derived from XYZ color space as…",8,null],[12,"luma","","luma (Y) was a measure of the brightness or luminance of a…",8,null],[12,"white_point","","The white point associated with the color's illuminant and…",8,null],[3,"LabHue","","A hue type for the CIE L*a*b* family of color spaces.",null,null],[3,"RgbHue","","A hue type for the RGB family of color spaces.",null,null],[5,"contrast_ratio","","Calculate a ratio between two `luma` values.",null,[[["t"]],["t"]]],[0,"blend","","Color blending and blending equations.",null,null],[3,"Equations","palette::blend","A pair of blending equations and corresponding parameters.",null,null],[12,"color_equation","","The equation for the color components.",9,null],[12,"alpha_equation","","The equation for the alpha component.",9,null],[12,"color_parameters","","The parameters for the color components.",9,null],[12,"alpha_parameters","","The parameters for the alpha component.",9,null],[3,"Parameters","","A pair of source and destination parameters.",null,null],[12,"source","","The source parameter.",10,null],[12,"destination","","The destination parameter.",10,null],[3,"PreAlpha","","Premultiplied alpha wrapper.",null,null],[12,"color","","The premultiplied color components (`original.color *…",11,null],[12,"alpha","","The transparency component. 0.0 is fully transparent and…",11,null],[4,"Equation","","A blending equation.",null,null],[13,"Add","","Add the source and destination, according to `sp * S + dp…",12,null],[13,"Subtract","","Subtract the destination from the source, according to `sp…",12,null],[13,"ReverseSubtract","","Subtract the source from the destination, according to `dp…",12,null],[13,"Min","","Create a color where each component is the smallest of…",12,null],[13,"Max","","Create a color where each component is the largest of each…",12,null],[4,"Parameter","","A blending parameter.",null,null],[13,"One","","A simple 1.",13,null],[13,"Zero","","A simple 0.",13,null],[13,"SourceColor","","The source color, or alpha.",13,null],[13,"OneMinusSourceColor","","One minus the source color, or alpha.",13,null],[13,"DestinationColor","","The destination color, or alpha.",13,null],[13,"OneMinusDestinationColor","","One minus the destination color, or alpha.",13,null],[13,"SourceAlpha","","The source alpha.",13,null],[13,"OneMinusSourceAlpha","","One minus the source alpha.",13,null],[13,"DestinationAlpha","","The destination alpha.",13,null],[13,"OneMinusDestinationAlpha","","One minus the destination alpha.",13,null],[11,"from_equations","","Create a pair of blending equations, where all the…",9,[[["equation"]],["equations"]]],[11,"from_parameters","","Create a pair of additive blending equations with the…",9,[[["parameter"]],["equations"]]],[8,"Blend","","A trait for colors that can be blended together.",null,null],[16,"Color","","The core color type. Typically `Self` for color types…",14,null],[10,"into_premultiplied","","Convert the color to premultiplied alpha.",14,[[],["prealpha"]]],[10,"from_premultiplied","","Convert the color from premultiplied alpha.",14,[[["prealpha"]],["self"]]],[11,"blend","","Blend self, as the source color, with `destination`, using…",14,[[["f"]],["self"]]],[11,"over","","Place `self` over `other`. This is the good old common…",14,[[],["self"]]],[11,"inside","","Results in the parts of `self` that overlaps the visible…",14,[[],["self"]]],[11,"outside","","Results in the parts of `self` that lies outside the…",14,[[],["self"]]],[11,"atop","","Place `self` over only the visible parts of `other`.",14,[[],["self"]]],[11,"xor","","Results in either `self` or `other`, where they do not…",14,[[],["self"]]],[11,"plus","","Add `self` and `other`. This uses the alpha component to…",14,[[],["self"]]],[11,"multiply","","Multiply `self` with `other`. This uses the alpha…",14,[[],["self"]]],[11,"screen","","Make a color which is at least as light as `self` or…",14,[[],["self"]]],[11,"overlay","","Multiply `self` or `other` if other is dark, or screen…",14,[[],["self"]]],[11,"darken","","Return the darkest parts of `self` and `other`.",14,[[],["self"]]],[11,"lighten","","Return the lightest parts of `self` and `other`.",14,[[],["self"]]],[11,"dodge","","Lighten `other` to reflect `self`. Results in `other` if…",14,[[],["self"]]],[11,"burn","","Darken `other` to reflect `self`. Results in `other` if…",14,[[],["self"]]],[11,"hard_light","","Multiply `self` or `other` if other is dark, or screen…",14,[[],["self"]]],[11,"soft_light","","Lighten `other` if `self` is light, or darken `other` as…",14,[[],["self"]]],[11,"difference","","Return the absolute difference between `self` and `other`.…",14,[[],["self"]]],[11,"exclusion","","Similar to `difference`, but appears to result in a lower…",14,[[],["self"]]],[8,"BlendFunction","","A trait for custom blend functions.",null,null],[10,"apply_to","","Apply this blend function to a pair of colors.",15,[[["prealpha"]],["prealpha"]]],[0,"gradient","palette","Types for interpolation between multiple colors.",null,null],[3,"Gradient","palette::gradient","A linear interpolation between colors.",null,null],[3,"Take","","An iterator over interpolated colors.",null,null],[3,"Slice","","A slice of a Gradient that limits its domain.",null,null],[3,"Range","","A domain range for gradient slices.",null,null],[11,"new","","Create a gradient of evenly spaced colors with the domain…",16,[[["intoiterator"]],["gradient"]]],[11,"with_domain","","Create a gradient of colors with custom spacing and…",16,[[["vec"]],["gradient"]]],[11,"get","","Get a color from the gradient. The color of the closest…",16,[[["self"]],["c"]]],[11,"take","","Take `n` evenly spaced colors from the gradient, as an…",16,[[["self"],["usize"]],["take"]]],[11,"slice","","Slice this gradient to limit its domain.",16,[[["into",["range"]],["self"],["range"]],["slice"]]],[11,"domain","","Get the limits of this gradient's domain.",16,[[["self"]]]],[11,"get","","Get a color from the gradient slice. The color of the…",17,[[["self"]],["c"]]],[11,"take","","Take `n` evenly spaced colors from the gradient slice, as…",17,[[["self"],["usize"]],["take"]]],[11,"slice","","Slice this gradient slice to further limit its domain.…",17,[[["into",["range"]],["self"],["range"]],["slice"]]],[11,"domain","","Get the limits of this gradient slice's domain.",17,[[["self"]]]],[0,"named","palette","A collection of named color constants. Can be toggled with…",null,null],[5,"from_str","palette::named","Get a SVG/CSS3 color by name. Can be toggled with the…",null,[[["str"]],[["option",["srgb"]],["srgb",["u8"]]]]],[17,"ALICEBLUE","","",null,null],[17,"ANTIQUEWHITE","","",null,null],[17,"AQUA","","",null,null],[17,"AQUAMARINE","","",null,null],[17,"AZURE","","",null,null],[17,"BEIGE","","",null,null],[17,"BISQUE","","",null,null],[17,"BLACK","","",null,null],[17,"BLANCHEDALMOND","","",null,null],[17,"BLUE","","",null,null],[17,"BLUEVIOLET","","",null,null],[17,"BROWN","","",null,null],[17,"BURLYWOOD","","",null,null],[17,"CADETBLUE","","",null,null],[17,"CHARTREUSE","","",null,null],[17,"CHOCOLATE","","",null,null],[17,"CORAL","","",null,null],[17,"CORNFLOWERBLUE","","",null,null],[17,"CORNSILK","","",null,null],[17,"CRIMSON","","",null,null],[17,"CYAN","","",null,null],[17,"DARKBLUE","","",null,null],[17,"DARKCYAN","","",null,null],[17,"DARKGOLDENROD","","",null,null],[17,"DARKGRAY","","",null,null],[17,"DARKGREEN","","",null,null],[17,"DARKGREY","","",null,null],[17,"DARKKHAKI","","",null,null],[17,"DARKMAGENTA","","",null,null],[17,"DARKOLIVEGREEN","","",null,null],[17,"DARKORANGE","","",null,null],[17,"DARKORCHID","","",null,null],[17,"DARKRED","","",null,null],[17,"DARKSALMON","","",null,null],[17,"DARKSEAGREEN","","",null,null],[17,"DARKSLATEBLUE","","",null,null],[17,"DARKSLATEGRAY","","",null,null],[17,"DARKSLATEGREY","","",null,null],[17,"DARKTURQUOISE","","",null,null],[17,"DARKVIOLET","","",null,null],[17,"DEEPPINK","","",null,null],[17,"DEEPSKYBLUE","","",null,null],[17,"DIMGRAY","","",null,null],[17,"DIMGREY","","",null,null],[17,"DODGERBLUE","","",null,null],[17,"FIREBRICK","","",null,null],[17,"FLORALWHITE","","",null,null],[17,"FORESTGREEN","","",null,null],[17,"FUCHSIA","","",null,null],[17,"GAINSBORO","","",null,null],[17,"GHOSTWHITE","","",null,null],[17,"GOLD","","",null,null],[17,"GOLDENROD","","",null,null],[17,"GRAY","","",null,null],[17,"GREY","","",null,null],[17,"GREEN","","",null,null],[17,"GREENYELLOW","","",null,null],[17,"HONEYDEW","","",null,null],[17,"HOTPINK","","",null,null],[17,"INDIANRED","","",null,null],[17,"INDIGO","","",null,null],[17,"IVORY","","",null,null],[17,"KHAKI","","",null,null],[17,"LAVENDER","","",null,null],[17,"LAVENDERBLUSH","","",null,null],[17,"LAWNGREEN","","",null,null],[17,"LEMONCHIFFON","","",null,null],[17,"LIGHTBLUE","","",null,null],[17,"LIGHTCORAL","","",null,null],[17,"LIGHTCYAN","","",null,null],[17,"LIGHTGOLDENRODYELLOW","","",null,null],[17,"LIGHTGRAY","","",null,null],[17,"LIGHTGREEN","","",null,null],[17,"LIGHTGREY","","",null,null],[17,"LIGHTPINK","","",null,null],[17,"LIGHTSALMON","","",null,null],[17,"LIGHTSEAGREEN","","",null,null],[17,"LIGHTSKYBLUE","","",null,null],[17,"LIGHTSLATEGRAY","","",null,null],[17,"LIGHTSLATEGREY","","",null,null],[17,"LIGHTSTEELBLUE","","",null,null],[17,"LIGHTYELLOW","","",null,null],[17,"LIME","","",null,null],[17,"LIMEGREEN","","",null,null],[17,"LINEN","","",null,null],[17,"MAGENTA","","",null,null],[17,"MAROON","","",null,null],[17,"MEDIUMAQUAMARINE","","",null,null],[17,"MEDIUMBLUE","","",null,null],[17,"MEDIUMORCHID","","",null,null],[17,"MEDIUMPURPLE","","",null,null],[17,"MEDIUMSEAGREEN","","",null,null],[17,"MEDIUMSLATEBLUE","","",null,null],[17,"MEDIUMSPRINGGREEN","","",null,null],[17,"MEDIUMTURQUOISE","","",null,null],[17,"MEDIUMVIOLETRED","","",null,null],[17,"MIDNIGHTBLUE","","",null,null],[17,"MINTCREAM","","",null,null],[17,"MISTYROSE","","",null,null],[17,"MOCCASIN","","",null,null],[17,"NAVAJOWHITE","","",null,null],[17,"NAVY","","",null,null],[17,"OLDLACE","","",null,null],[17,"OLIVE","","",null,null],[17,"OLIVEDRAB","","",null,null],[17,"ORANGE","","",null,null],[17,"ORANGERED","","",null,null],[17,"ORCHID","","",null,null],[17,"PALEGOLDENROD","","",null,null],[17,"PALEGREEN","","",null,null],[17,"PALETURQUOISE","","",null,null],[17,"PALEVIOLETRED","","",null,null],[17,"PAPAYAWHIP","","",null,null],[17,"PEACHPUFF","","",null,null],[17,"PERU","","",null,null],[17,"PINK","","",null,null],[17,"PLUM","","",null,null],[17,"POWDERBLUE","","",null,null],[17,"PURPLE","","",null,null],[17,"REBECCAPURPLE","","",null,null],[17,"RED","","",null,null],[17,"ROSYBROWN","","",null,null],[17,"ROYALBLUE","","",null,null],[17,"SADDLEBROWN","","",null,null],[17,"SALMON","","",null,null],[17,"SANDYBROWN","","",null,null],[17,"SEAGREEN","","",null,null],[17,"SEASHELL","","",null,null],[17,"SIENNA","","",null,null],[17,"SILVER","","",null,null],[17,"SKYBLUE","","",null,null],[17,"SLATEBLUE","","",null,null],[17,"SLATEGRAY","","",null,null],[17,"SLATEGREY","","",null,null],[17,"SNOW","","",null,null],[17,"SPRINGGREEN","","",null,null],[17,"STEELBLUE","","",null,null],[17,"TAN","","",null,null],[17,"TEAL","","",null,null],[17,"THISTLE","","",null,null],[17,"TOMATO","","",null,null],[17,"TURQUOISE","","",null,null],[17,"VIOLET","","",null,null],[17,"WHEAT","","",null,null],[17,"WHITE","","",null,null],[17,"WHITESMOKE","","",null,null],[17,"YELLOW","","",null,null],[17,"YELLOWGREEN","","",null,null],[11,"min_alpha","palette","Return the `alpha` value minimum.",0,[[],["t"]]],[11,"max_alpha","","Return the `alpha` value maximum.",0,[[],["t"]]],[11,"new","","HSL for linear sRGB.",1,[[["rgbhue"],["t"],["into",["rgbhue"]]],[["hsl",["srgb"]],["srgb"]]]],[11,"with_wp","","Linear HSL.",1,[[["rgbhue"],["t"],["into",["rgbhue"]]],["hsl"]]],[11,"into_components","","Convert to a `(hue, saturation, lightness)` tuple.",1,[[]]],[11,"from_components","","Convert from a `(hue, saturation, lightness)` tuple.",1,[[],["self"]]],[11,"min_saturation","","Return the `saturation` value minimum.",1,[[],["t"]]],[11,"max_saturation","","Return the `saturation` value maximum.",1,[[],["t"]]],[11,"min_lightness","","Return the `lightness` value minimum.",1,[[],["t"]]],[11,"max_lightness","","Return the `lightness` value maximum.",1,[[],["t"]]],[11,"new","","HSL and transparency for linear sRGB.",0,[[["rgbhue"],["a"],["into",["rgbhue"]],["t"]],["self"]]],[11,"with_wp","","Linear HSL and transparency.",0,[[["rgbhue"],["a"],["into",["rgbhue"]],["t"]],["self"]]],[11,"into_components","","Convert to a `(hue, saturation, lightness, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(hue, saturation, lightness, alpha)` tuple.",0,[[],["self"]]],[11,"new","","HSV for linear sRGB.",2,[[["rgbhue"],["t"],["into",["rgbhue"]]],[["hsv",["srgb"]],["srgb"]]]],[11,"with_wp","","Linear HSV.",2,[[["rgbhue"],["t"],["into",["rgbhue"]]],["hsv"]]],[11,"into_components","","Convert to a `(hue, saturation, value)` tuple.",2,[[]]],[11,"from_components","","Convert from a `(hue, saturation, value)` tuple.",2,[[],["self"]]],[11,"min_saturation","","Return the `saturation` value minimum.",2,[[],["t"]]],[11,"max_saturation","","Return the `saturation` value maximum.",2,[[],["t"]]],[11,"min_value","","Return the `value` value minimum.",2,[[],["t"]]],[11,"max_value","","Return the `value` value maximum.",2,[[],["t"]]],[11,"new","","HSV and transparency for linear sRGB.",0,[[["rgbhue"],["a"],["into",["rgbhue"]],["t"]],["self"]]],[11,"with_wp","","Linear HSV and transparency.",0,[[["rgbhue"],["a"],["into",["rgbhue"]],["t"]],["self"]]],[11,"into_components","","Convert to a `(hue, saturation, value, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(hue, saturation, value, alpha)` tuple.",0,[[],["self"]]],[11,"new","","HWB for linear sRGB.",3,[[["rgbhue"],["t"],["into",["rgbhue"]]],[["hwb",["srgb"]],["srgb"]]]],[11,"with_wp","","Linear HWB.",3,[[["rgbhue"],["t"],["into",["rgbhue"]]],["hwb"]]],[11,"into_components","","Convert to a `(hue, whiteness, blackness)` tuple.",3,[[]]],[11,"from_components","","Convert from a `(hue, whiteness, blackness)` tuple.",3,[[],["self"]]],[11,"min_whiteness","","Return the `whiteness` value minimum.",3,[[],["t"]]],[11,"max_whiteness","","Return the `whiteness` value maximum.",3,[[],["t"]]],[11,"min_blackness","","Return the `blackness` value minimum.",3,[[],["t"]]],[11,"max_blackness","","Return the `blackness` value maximum.",3,[[],["t"]]],[11,"new","","HWB and transparency for linear sRGB.",0,[[["rgbhue"],["a"],["into",["rgbhue"]],["t"]],["self"]]],[11,"with_wp","","Linear HWB and transparency.",0,[[["rgbhue"],["a"],["into",["rgbhue"]],["t"]],["self"]]],[11,"into_components","","Convert to a `(hue, whiteness, blackness, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(hue, whiteness, blackness, alpha)` tuple.",0,[[],["self"]]],[11,"new","","CIE L*a*b* with white point D65.",4,[[["t"]],[["lab",["d65"]],["d65"]]]],[11,"with_wp","","CIE L*a*b*.",4,[[["t"]],["lab"]]],[11,"into_components","","Convert to a `(L\\*, a\\*, b\\*)` tuple.",4,[[]]],[11,"from_components","","Convert from a `(L\\*, a\\*, b\\*)` tuple.",4,[[],["self"]]],[11,"min_l","","Return the `l` value minimum.",4,[[],["t"]]],[11,"max_l","","Return the `l` value maximum.",4,[[],["t"]]],[11,"min_a","","Return the `a` value minimum.",4,[[],["t"]]],[11,"max_a","","Return the `a` value maximum.",4,[[],["t"]]],[11,"min_b","","Return the `b` value minimum.",4,[[],["t"]]],[11,"max_b","","Return the `b` value maximum.",4,[[],["t"]]],[11,"new","","CIE L*a*b* and transparency and white point D65.",0,[[["a"],["t"]],["self"]]],[11,"with_wp","","CIE L*a*b* and transparency.",0,[[["a"],["t"]],["self"]]],[11,"into_components","","Convert to a `(L\\*, a\\*, b\\*, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(L\\*, a\\*, b\\*, alpha)` tuple.",0,[[],["self"]]],[11,"new","","CIE L*C*h° with white point D65.",5,[[["into",["labhue"]],["labhue"],["t"]],[["lch",["d65"]],["d65"]]]],[11,"with_wp","","CIE L*C*h°.",5,[[["into",["labhue"]],["labhue"],["t"]],["lch"]]],[11,"into_components","","Convert to a `(L\\*, C\\*, h°)` tuple.",5,[[]]],[11,"from_components","","Convert from a `(L\\*, C\\*, h°)` tuple.",5,[[],["self"]]],[11,"min_l","","Return the `l` value minimum.",5,[[],["t"]]],[11,"max_l","","Return the `l` value maximum.",5,[[],["t"]]],[11,"min_chroma","","Return the `chroma` value minimum.",5,[[],["t"]]],[11,"max_chroma","","Return the `chroma` value maximum. This value does not…",5,[[],["t"]]],[11,"max_extended_chroma","","Return the `chroma` extended maximum value. This value…",5,[[],["t"]]],[11,"new","","CIE L*C*h° and transparency with white point D65.",0,[[["a"],["labhue"],["into",["labhue"]],["t"]],["self"]]],[11,"with_wp","","CIE L*C*h° and transparency.",0,[[["a"],["labhue"],["into",["labhue"]],["t"]],["self"]]],[11,"into_components","","Convert to a `(L\\*, C\\*, h°, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(L\\*, C\\*, h°, alpha)` tuple.",0,[[],["self"]]],[0,"luma","","Luminance types.",null,null],[3,"Luma","palette::luma","Luminance.",null,null],[12,"luma","","The lightness of the color. 0.0 is black and 1.0 is white.",18,null],[12,"standard","","The kind of RGB standard. sRGB is the default.",18,null],[11,"new","","Create a luminance color.",18,[[["t"]],["luma"]]],[11,"into_format","","Convert into another component type.",18,[[],["luma"]]],[11,"from_format","","Convert from another component type.",18,[[["luma"]],["self"]]],[11,"into_components","","Convert to a `(luma,)` tuple.",18,[[]]],[11,"from_components","","Convert from a `(luma,)` tuple.",18,[[],["self"]]],[11,"min_luma","","Return the `luma` value minimum.",18,[[],["t"]]],[11,"max_luma","","Return the `luma` value maximum.",18,[[],["t"]]],[11,"into_linear","","Convert the color to linear luminance.",18,[[],[["linear"],["luma",["linear"]]]]],[11,"from_linear","","Convert linear luminance to nonlinear luminance.",18,[[["linear"],["luma",["linear"]]],["luma"]]],[11,"into_encoding","","Convert the color to a different encoding.",18,[[],[["luma"],["lumastandard"]]]],[11,"from_encoding","","Convert luminance from a different encoding.",18,[[["luma"],["lumastandard"]],["luma"]]],[11,"new","palette","Create a luminance color with transparency.",0,[[["a"],["t"]],["self"]]],[11,"into_format","","Convert into another component type.",0,[[],[["alpha",["luma"]],["luma"]]]],[11,"from_format","","Convert from another component type.",0,[[["alpha",["luma"]],["luma"]],["self"]]],[11,"into_components","","Convert to a `(luma, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(luma, alpha)` tuple.",0,[[],["self"]]],[11,"into_linear","","Convert the color to linear luminance with transparency.",0,[[],[["luma",["linear"]],["alpha",["luma"]]]]],[11,"from_linear","","Convert linear luminance to nonlinear luminance with…",0,[[["luma",["linear"]],["alpha",["luma"]]],[["alpha",["luma"]],["luma"]]]],[11,"into_encoding","","Convert the color to a different encoding with transparency.",0,[[],[["alpha",["luma"]],["luma"]]]],[11,"from_encoding","","Convert luminance from a different encoding with…",0,[[["alpha",["luma"]],["luma"]],[["alpha",["luma"]],["luma"]]]],[6,"Lumaa","palette::luma","Luminance with an alpha component. See the `Lumaa`…",null,null],[6,"SrgbLuma","","sRGB encoded luminance.",null,null],[6,"SrgbLumaa","","sRGB encoded luminance with an alpha component.",null,null],[6,"LinLuma","","Linear luminance.",null,null],[6,"LinLumaa","","Linear luminance with an alpha component.",null,null],[6,"GammaLuma","","Gamma 2.2 encoded luminance.",null,null],[6,"GammaLumaa","","Gamma 2.2 encoded luminance with an alpha component.",null,null],[8,"LumaStandard","","A white point and a transfer function.",null,null],[16,"WhitePoint","","The white point of the color space.",19,null],[16,"TransferFn","","The transfer function for the luminance component.",19,null],[0,"rgb","palette","RGB types, spaces and standards.",null,null],[3,"Packed","palette::rgb","RGBA color packed into a 32-bit unsigned integer. Defaults…",null,null],[12,"color","","The sRGB color packed into a `u32`.",6,null],[12,"channel_order","","The channel ordering for red, green, blue, and alpha…",6,null],[3,"Rgb","","Generic RGB.",null,null],[12,"red","","The amount of red light, where 0.0 is no red light and…",20,null],[12,"green","","The amount of green light, where 0.0 is no green light and…",20,null],[12,"blue","","The amount of blue light, where 0.0 is no blue light and…",20,null],[12,"standard","","The kind of RGB standard. sRGB is the default.",20,null],[0,"channels","","Channel orderings for packed RGBA types.",null,null],[3,"Abgr","palette::rgb::channels","RGBA color packed in ABGR order.",null,null],[3,"Argb","","RGBA color packed in ARGB order.",null,null],[3,"Bgra","","RGBA color packed in BGRA order.",null,null],[3,"Rgba","","RGBA color packed in RGBA order.",null,null],[11,"new","palette::rgb","Create an RGB color.",20,[[["t"]],["rgb"]]],[11,"into_format","","Convert into another component type.",20,[[],["rgb"]]],[11,"from_format","","Convert from another component type.",20,[[["rgb"]],["self"]]],[11,"into_components","","Convert to a `(red, green, blue)` tuple.",20,[[]]],[11,"from_components","","Convert from a `(red, green, blue)` tuple.",20,[[],["self"]]],[11,"min_red","","Return the `red` value minimum.",20,[[],["t"]]],[11,"max_red","","Return the `red` value maximum.",20,[[],["t"]]],[11,"min_green","","Return the `green` value minimum.",20,[[],["t"]]],[11,"max_green","","Return the `green` value maximum.",20,[[],["t"]]],[11,"min_blue","","Return the `blue` value minimum.",20,[[],["t"]]],[11,"max_blue","","Return the `blue` value maximum.",20,[[],["t"]]],[11,"into_u32","","Convert to a packed `u32` with with specifiable component…",20,[[],["u32"]]],[11,"from_u32","","Convert from a packed `u32` with specifiable component…",20,[[["u32"]],["self"]]],[11,"into_linear","","Convert the color to linear RGB.",20,[[],[["rgb",["linear"]],["linear"]]]],[11,"from_linear","","Convert linear RGB to nonlinear RGB.",20,[[["rgb",["linear"]],["linear"]],["rgb"]]],[11,"into_encoding","","Convert the color to a different encoding.",20,[[],[["rgb"],["rgbstandard"]]]],[11,"from_encoding","","Convert RGB from a different encoding.",20,[[["rgb"],["rgbstandard"]],["rgb"]]],[11,"new","palette","Nonlinear RGB.",0,[[["a"],["t"]],["self"]]],[11,"into_format","","Convert into another component type.",0,[[],[["alpha",["rgb"]],["rgb"]]]],[11,"from_format","","Convert from another component type.",0,[[["alpha",["rgb"]],["rgb"]],["self"]]],[11,"into_components","","Convert to a `(red, green, blue, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(red, green, blue, alpha)` tuple.",0,[[],["self"]]],[11,"into_u32","","Convert to a packed `u32` with with specifiable component…",0,[[],["u32"]]],[11,"from_u32","","Convert from a packed `u32` with specifiable component…",0,[[["u32"]],["self"]]],[11,"into_linear","","Convert the color to linear RGB with transparency.",0,[[],[["alpha",["rgb"]],["rgb",["linear"]]]]],[11,"from_linear","","Convert linear RGB to nonlinear RGB with transparency.",0,[[["alpha",["rgb"]],["rgb",["linear"]]],["self"]]],[11,"into_encoding","","Convert the color to a different encoding with transparency.",0,[[],[["rgb"],["alpha",["rgb"]]]]],[11,"from_encoding","","Convert RGB from a different encoding with transparency.",0,[[["rgb"],["alpha",["rgb"]]],["self"]]],[6,"Rgba","palette::rgb","Generic RGB with an alpha component. See the `Rgba`…",null,null],[6,"Srgb","","Nonlinear sRGB.",null,null],[6,"Srgba","","Nonlinear sRGB with an alpha component.",null,null],[6,"LinSrgb","","Linear sRGB.",null,null],[6,"LinSrgba","","Linear sRGB with an alpha component.",null,null],[6,"GammaSrgb","","Gamma 2.2 encoded sRGB.",null,null],[6,"GammaSrgba","","Gamma 2.2 encoded sRGB with an alpha component.",null,null],[8,"RgbChannels","","Splits and combines RGB(A) types with some channel…",null,null],[10,"split_rgb","","Split RGBA components into a `(u8, u8, u8, u8)` tuple.",21,[[["rgba",["u8"]],["rgbstandard"],["u8"]]]],[10,"combine_rgb","","Create an RGBA color from a `(u8, u8, u8, u8)` tuple.",21,[[],[["rgba",["u8"]],["rgbstandard"],["u8"]]]],[8,"RgbStandard","","An RGB space and a transfer function.",null,null],[16,"Space","","The RGB color space.",22,null],[16,"TransferFn","","The transfer function for the color components.",22,null],[8,"RgbSpace","","A set of primaries and a white point.",null,null],[16,"Primaries","","The primaries of the RGB color space.",23,null],[16,"WhitePoint","","The white point of the RGB color space.",23,null],[8,"Primaries","","Represents the red, green and blue primaries of an RGB…",null,null],[10,"red","","Primary red.",24,[[],[["whitepoint"],["floatcomponent"],["yxy"]]]],[10,"green","","Primary green.",24,[[],[["whitepoint"],["floatcomponent"],["yxy"]]]],[10,"blue","","Primary blue.",24,[[],[["whitepoint"],["floatcomponent"],["yxy"]]]],[11,"new","palette","CIE XYZ with whtie point D65.",7,[[["t"]],[["xyz",["d65"]],["d65"]]]],[11,"with_wp","","CIE XYZ.",7,[[["t"]],["xyz"]]],[11,"into_components","","Convert to a `(X, Y, Z)` tuple.",7,[[]]],[11,"from_components","","Convert from a `(X, Y, Z)` tuple.",7,[[],["self"]]],[11,"min_x","","Return the `x` value minimum.",7,[[],["t"]]],[11,"max_x","","Return the `x` value maximum.",7,[[],["t"]]],[11,"min_y","","Return the `y` value minimum.",7,[[],["t"]]],[11,"max_y","","Return the `y` value maximum.",7,[[],["t"]]],[11,"min_z","","Return the `z` value minimum.",7,[[],["t"]]],[11,"max_z","","Return the `z` value maximum.",7,[[],["t"]]],[11,"new","","CIE Yxy and transparency with white point D65.",0,[[["a"],["t"]],["self"]]],[11,"with_wp","","CIE XYZ and transparency.",0,[[["a"],["t"]],["self"]]],[11,"into_components","","Convert to a `(X, Y, Z, alpha)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(X, Y, Z, alpha)` tuple.",0,[[],["self"]]],[11,"new","","CIE Yxy with white point D65.",8,[[["t"]],[["d65"],["yxy",["d65"]]]]],[11,"with_wp","","CIE Yxy.",8,[[["t"]],["yxy"]]],[11,"into_components","","Convert to a `(x, y, luma)`, a.k.a. `(x, y, Y)` tuple.",8,[[]]],[11,"from_components","","Convert from a `(x, y, luma)`, a.k.a. `(x, y, Y)` tuple.",8,[[],["self"]]],[11,"min_x","","Return the `x` value minimum.",8,[[],["t"]]],[11,"max_x","","Return the `x` value maximum.",8,[[],["t"]]],[11,"min_y","","Return the `y` value minimum.",8,[[],["t"]]],[11,"max_y","","Return the `y` value maximum.",8,[[],["t"]]],[11,"min_luma","","Return the `luma` value minimum.",8,[[],["t"]]],[11,"max_luma","","Return the `luma` value maximum.",8,[[],["t"]]],[11,"new","","CIE Yxy and transparency with white point D65.",0,[[["a"],["t"]],["self"]]],[11,"with_wp","","CIE Yxy and transparency.",0,[[["a"],["t"]],["self"]]],[11,"into_components","","Convert to a `(x, y, luma)`, a.k.a. `(x, y, Y)` tuple.",0,[[]]],[11,"from_components","","Convert from a `(x, y, luma)`, a.k.a. `(x, y, Y)` tuple.",0,[[],["self"]]],[11,"from_degrees","","Create a new hue from degrees.",25,[[["t"]],["labhue"]]],[11,"from_radians","","Create a new hue from radians, instead of degrees.",25,[[["t"]],["labhue"]]],[11,"to_degrees","","Get the hue as degrees, in the range `(-180, 180]`.",25,[[],["t"]]],[11,"to_radians","","Convert the hue to radians, in the range `(-π, π]`.",25,[[],["t"]]],[11,"to_positive_degrees","","Convert the hue to positive degrees, in the range `[0,…",25,[[],["t"]]],[11,"to_positive_radians","","Convert the hue to positive radians, in the range `[0, 2π)`.",25,[[],["t"]]],[11,"to_raw_degrees","","Get the internal representation, without normalizing it.",25,[[],["t"]]],[11,"to_raw_radians","","Get the internal representation as radians, without…",25,[[],["t"]]],[11,"from_degrees","","Create a new hue from degrees.",26,[[["t"]],["rgbhue"]]],[11,"from_radians","","Create a new hue from radians, instead of degrees.",26,[[["t"]],["rgbhue"]]],[11,"to_degrees","","Get the hue as degrees, in the range `(-180, 180]`.",26,[[],["t"]]],[11,"to_radians","","Convert the hue to radians, in the range `(-π, π]`.",26,[[],["t"]]],[11,"to_positive_degrees","","Convert the hue to positive degrees, in the range `[0,…",26,[[],["t"]]],[11,"to_positive_radians","","Convert the hue to positive radians, in the range `[0, 2π)`.",26,[[],["t"]]],[11,"to_raw_degrees","","Get the internal representation, without normalizing it.",26,[[],["t"]]],[11,"to_raw_radians","","Get the internal representation as radians, without…",26,[[],["t"]]],[0,"chromatic_adaptation","","Convert colors from one reference white point to another",null,null],[3,"ConeResponseMatrices","palette::chromatic_adaptation","Holds the matrix coeffecients for the chromatic adaptation…",null,null],[12,"ma","","3x3 matrix for the cone response domains",27,null],[12,"inv_ma","","3x3 matrix for the inverse of the cone response domains",27,null],[4,"Method","","Chromatic adaptation methods implemented in the library",null,null],[13,"Bradford","","Bradford chromatic adaptation method",28,null],[13,"VonKries","","VonKries chromatic adaptation method",28,null],[13,"XyzScaling","","XyzScaling chromatic adaptation method",28,null],[8,"TransformMatrix","","Generates a conversion matrix to convert the Xyz…",null,null],[10,"get_cone_response","","Get the cone response functions for the chromatic…",29,[[["self"]],["coneresponsematrices"]]],[11,"generate_transform_matrix","","Generates a 3x3 transformation matrix to convert color…",29,[[["self"]],["mat3"]]],[8,"AdaptFrom","","Trait to convert color from one reference white point to…",null,null],[11,"adapt_from","","Convert the source color to the destination color using…",30,[[["s"]],["self"]]],[10,"adapt_from_using","","Convert the source color to the destination color using…",30,[[["s"],["transformmatrix"]],["self"]]],[8,"AdaptInto","","Trait to convert color with one reference white point into…",null,null],[11,"adapt_into","","Convert the source color to the destination color using…",31,[[],["d"]]],[10,"adapt_into_using","","Convert the source color to the destination color using…",31,[[["transformmatrix"]],["d"]]],[0,"convert","palette","Traits for converting between color spaces.",null,null],[3,"OutOfBounds","palette::convert","The error type for a color conversion that converted a…",null,null],[8,"IntoColor","","A trait for converting a color into another, in a possibly…",null,null],[10,"into_color","","Convert into T with values clamped to the color defined…",32,[[],["t"]]],[8,"IntoColorUnclamped","","A trait for unchecked conversion of a color into another.",null,null],[10,"into_color_unclamped","","Convert into T. The resulting color might be invalid in…",33,[[],["t"]]],[8,"TryIntoColor","","A trait for fallible conversion of a color into another.",null,null],[10,"try_into_color","","Convert into T, returning ok if the color is inside of its…",34,[[],[["outofbounds"],["result",["outofbounds"]]]]],[8,"FromColor","","A trait for converting one color from another, in a…",null,null],[10,"from_color","","Convert from T with values clamped to the color defined…",35,[[["t"]],["self"]]],[8,"FromColorUnclamped","","A trait for unchecked conversion of one color from another.",null,null],[10,"from_color_unclamped","","Convert from T. The resulting color might be invalid in…",36,[[["t"]],["self"]]],[8,"TryFromColor","","A trait for fallible conversion of one color from another.",null,null],[10,"try_from_color","","Convert from T, returning ok if the color is inside of its…",37,[[["t"]],[["result",["outofbounds"]],["outofbounds"]]]],[11,"color","","Consume this error and return the wrapped color",38,[[],["t"]]],[0,"encoding","palette","Various encoding traits, types and standards.",null,null],[0,"gamma","palette::encoding","Gamma encoding.",null,null],[3,"Gamma","palette::encoding::gamma","Gamma encoding.",null,null],[3,"GammaFn","","The transfer function for gamma encoded colors.",null,null],[3,"F2p2","","Represents `2.2f64`.",null,null],[8,"Number","","A type level float constant.",null,null],[18,"VALUE","","The represented number.",39,null],[0,"linear","palette::encoding","Linear encoding",null,null],[3,"Linear","palette::encoding::linear","A generic standard with linear components.",null,null],[3,"LinearFn","","Linear color component encoding.",null,null],[0,"pixel","palette::encoding","Pixel encodings and pixel format conversion.",null,null],[8,"RawPixelSized","palette::encoding::pixel","A contiguous sequence of pixel channels with a known length.",null,null],[18,"CHANNELS","","The guaranteed number of channels in the sequence.",40,null],[8,"RawPixel","","A contiguous sequence of pixel channels.",null,null],[10,"channels","","The length of the sequence.",41,[[["self"]],["usize"]]],[10,"from_raw_parts","","Convert from a pointer and a length.",41,[[["usize"]],["self"]]],[10,"from_raw_parts_mut","","Convert from a mutable pointer and a length.",41,[[["usize"]],["self"]]],[10,"as_ptr","","Convert to a pointer.",41,[[["self"]]]],[10,"as_mut_ptr","","Convert to a mutable pointer.",41,[[["self"]]]],[8,"Pixel","","Represents colors that can be serialized and deserialized…",null,null],[18,"CHANNELS","","The number of color channels.",42,null],[11,"as_raw","","Cast as a reference to raw color components.",42,[[["self"]],["p"]]],[11,"as_raw_mut","","Cast as a mutable reference to raw color components.",42,[[["self"]],["p"]]],[11,"into_raw","","Convert into raw color components.",42,[[],["rawpixelsized"]]],[11,"from_raw","","Cast from a reference to raw color components.",42,[[["p"]],["self"]]],[11,"from_raw_mut","","Cast from a mutable reference to raw color components.",42,[[["p"]],["self"]]],[11,"from_raw_slice","","Cast a slice of raw color components to a slice of colors.",42,[[]]],[11,"from_raw_slice_mut","","Cast a mutable slice of raw color components to a mutable…",42,[[]]],[11,"into_raw_slice","","Cast a slice of colors to a slice of raw color components.",42,[[]]],[11,"into_raw_slice_mut","","Cast a mutable slice of colors to a mutable slice of raw…",42,[[]]],[0,"srgb","palette::encoding","The sRGB standard.",null,null],[3,"Srgb","palette::encoding::srgb","The sRGB color space.",null,null],[8,"TransferFn","palette::encoding","A transfer function to and from linear space.",null,null],[10,"from_linear","","Convert the color component `x` from linear space.",43,[[["float"],["fromf64"]],[["float"],["fromf64"]]]],[10,"into_linear","","Convert the color component `x` into linear space.",43,[[["float"],["fromf64"]],[["float"],["fromf64"]]]],[0,"white_point","palette","Defines the tristimulus values of the CIE Illuminants.",null,null],[3,"A","palette::white_point","CIE standard illuminant A",null,null],[3,"B","","CIE standard illuminant B",null,null],[3,"C","","CIE standard illuminant C",null,null],[3,"D50","","CIE D series standard illuminant - D50",null,null],[3,"D55","","CIE D series standard illuminant - D55",null,null],[3,"D65","","CIE D series standard illuminant - D65",null,null],[3,"D75","","CIE D series standard illuminant - D75",null,null],[3,"E","","CIE standard illuminant E",null,null],[3,"F2","","CIE fluorescent illuminant series - F2",null,null],[3,"F7","","CIE fluorescent illuminant series - F7",null,null],[3,"F11","","CIE fluorescent illuminant series - F11",null,null],[3,"D50Degree10","","CIE D series standard illuminant - D50",null,null],[3,"D55Degree10","","CIE D series standard illuminant - D55",null,null],[3,"D65Degree10","","CIE D series standard illuminant - D65",null,null],[3,"D75Degree10","","CIE D series standard illuminant - D75",null,null],[8,"WhitePoint","","WhitePoint defines the Xyz color co-ordinates for a given…",null,null],[10,"get_xyz","","Get the Xyz chromacity co-ordinates for the white point.",44,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[0,"float","palette","Floating point trait",null,null],[8,"Float","palette::float","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",45,[[],["self"]]],[10,"infinity","","Returns the infinite value.",45,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",45,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",45,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",45,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",45,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",45,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",45,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",45,[[],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",45,[[],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",45,[[],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",45,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",45,[[],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",45,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",45,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",45,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",45,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",45,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",45,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",45,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",45,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",45,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",45,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",45,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",45,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",45,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",45,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",45,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",45,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",45,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",45,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",45,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",45,[[],["self"]]],[11,"to_degrees","","Converts radians to degrees.",45,[[],["self"]]],[11,"to_radians","","Converts degrees to radians.",45,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",45,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",45,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",45,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",45,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",45,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",45,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",45,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",45,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",45,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",45,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",45,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",45,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",45,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",45,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",45,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",45,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",45,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",45,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",45,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",45,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",45,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",45,[[]]],[6,"Hsla","palette","Linear HSL with an alpha component. See the `Hsla`…",null,null],[6,"Hsva","","Linear HSV with an alpha component. See the `Hsva`…",null,null],[6,"Hwba","","Linear HWB with an alpha component. See the `Hwba`…",null,null],[6,"Laba","","CIE L*a*b* (CIELAB) with an alpha component. See the…",null,null],[6,"Lcha","","CIE L*C*h° with an alpha component. See the `Lcha`…",null,null],[6,"Xyza","","CIE 1931 XYZ with an alpha component. See the `Xyza`…",null,null],[6,"Yxya","","CIE 1931 Yxy (xyY) with an alpha component. See the `Yxya`…",null,null],[6,"Mat3","","A 9 element array representing a 3x3 matrix.",null,null],[8,"WithAlpha","","A trait for color types that can have or be given…",null,null],[16,"Color","","The opaque color type, without any transparency.",46,null],[16,"WithAlpha","","The color type with transparency applied.",46,null],[10,"with_alpha","","Transforms the color into a transparent color with the…",46,[[["a"]]]],[10,"without_alpha","","Removes the transparency from the color. If `Self::Color`…",46,[[]]],[10,"split","","Splits the color into separate color and transparency…",46,[[]]],[11,"opaque","","Transforms the color into a fully opaque color with a…",46,[[]]],[11,"transparent","","Transforms the color into a fully transparent color. If…",46,[[]]],[8,"Blend","","A trait for colors that can be blended together.",null,null],[16,"Color","","The core color type. Typically `Self` for color types…",14,null],[10,"into_premultiplied","","Convert the color to premultiplied alpha.",14,[[],["prealpha"]]],[10,"from_premultiplied","","Convert the color from premultiplied alpha.",14,[[["prealpha"]],["self"]]],[11,"blend","palette::blend","Blend self, as the source color, with `destination`, using…",14,[[["f"]],["self"]]],[11,"over","","Place `self` over `other`. This is the good old common…",14,[[],["self"]]],[11,"inside","","Results in the parts of `self` that overlaps the visible…",14,[[],["self"]]],[11,"outside","","Results in the parts of `self` that lies outside the…",14,[[],["self"]]],[11,"atop","","Place `self` over only the visible parts of `other`.",14,[[],["self"]]],[11,"xor","","Results in either `self` or `other`, where they do not…",14,[[],["self"]]],[11,"plus","","Add `self` and `other`. This uses the alpha component to…",14,[[],["self"]]],[11,"multiply","","Multiply `self` with `other`. This uses the alpha…",14,[[],["self"]]],[11,"screen","","Make a color which is at least as light as `self` or…",14,[[],["self"]]],[11,"overlay","","Multiply `self` or `other` if other is dark, or screen…",14,[[],["self"]]],[11,"darken","","Return the darkest parts of `self` and `other`.",14,[[],["self"]]],[11,"lighten","","Return the lightest parts of `self` and `other`.",14,[[],["self"]]],[11,"dodge","","Lighten `other` to reflect `self`. Results in `other` if…",14,[[],["self"]]],[11,"burn","","Darken `other` to reflect `self`. Results in `other` if…",14,[[],["self"]]],[11,"hard_light","","Multiply `self` or `other` if other is dark, or screen…",14,[[],["self"]]],[11,"soft_light","","Lighten `other` if `self` is light, or darken `other` as…",14,[[],["self"]]],[11,"difference","","Return the absolute difference between `self` and `other`.…",14,[[],["self"]]],[11,"exclusion","","Similar to `difference`, but appears to result in a lower…",14,[[],["self"]]],[8,"RgbChannels","palette","Splits and combines RGB(A) types with some channel…",null,null],[10,"split_rgb","","Split RGBA components into a `(u8, u8, u8, u8)` tuple.",21,[[["rgba",["u8"]],["rgbstandard"],["u8"]]]],[10,"combine_rgb","","Create an RGBA color from a `(u8, u8, u8, u8)` tuple.",21,[[],[["rgba",["u8"]],["rgbstandard"],["u8"]]]],[8,"ColorDifference","","A trait for calculating the color difference between two…",null,null],[16,"Scalar","","The type of the calculated color difference",47,null],[10,"get_color_difference","","Return the difference or distance between two colors",47,[[["self"]]]],[8,"Component","","Common trait for color components.",null,null],[10,"max_intensity","","The highest displayable value this component type can…",48,[[],["self"]]],[8,"FloatComponent","","Common trait for floating point color components.",null,null],[8,"FromComponent","","Converts from a color component type, while performing the…",null,null],[10,"from_component","","Converts `other` into `Self`, while performing the…",49,[[["t"]],["self"]]],[8,"IntoComponent","","Converts into a color component type, while performing the…",null,null],[10,"into_component","","Converts `self` into `T`, while performing the appropriate…",50,[[],["t"]]],[8,"RelativeContrast","","A trait for calculating relative contrast between two…",null,null],[16,"Scalar","","The type of the contrast ratio.",51,null],[10,"get_contrast_ratio","","Calculate contrast ratio between two colors.",51,[[["self"]]]],[11,"has_min_contrast_text","","Verify the contrast between two colors satisfies SC 1.4.3.…",51,[[["self"]],["bool"]]],[11,"has_min_contrast_large_text","","Verify the contrast between two colors satisfies SC 1.4.3…",51,[[["self"]],["bool"]]],[11,"has_enhanced_contrast_text","","Verify the contrast between two colors satisfies SC 1.4.6.…",51,[[["self"]],["bool"]]],[11,"has_enhanced_contrast_large_text","","Verify the contrast between two colors satisfies SC 1.4.6…",51,[[["self"]],["bool"]]],[11,"has_min_contrast_graphics","","Verify the contrast between two colors satisfies SC 1.4.11…",51,[[["self"]],["bool"]]],[8,"Limited","","A trait for clamping and checking if colors are within…",null,null],[10,"is_valid","","Check if the color's components are within the expected…",52,[[["self"]],["bool"]]],[10,"clamp","","Return a new color where the components has been clamped…",52,[[["self"]],["self"]]],[10,"clamp_self","","Clamp the color's components to the nearest valid values.",52,[[["self"]]]],[8,"Mix","","A trait for linear color interpolation.",null,null],[16,"Scalar","","The type of the mixing factor.",53,null],[10,"mix","","Mix the color with an other color, by `factor`.",53,[[["self"]],["self"]]],[8,"Shade","","The `Shade` trait allows a color to be lightened or…",null,null],[16,"Scalar","","The type of the lighten/darken amount.",54,null],[10,"lighten","","Lighten the color by `amount`.",54,[[["self"]],["self"]]],[11,"darken","","Darken the color by `amount`.",54,[[["self"]],["self"]]],[8,"GetHue","","A trait for colors where a hue may be calculated.",null,null],[16,"Hue","","The kind of hue unit this color space uses.",55,null],[10,"get_hue","","Calculate a hue if possible.",55,[[["self"]],["option"]]],[8,"Hue","","A trait for colors where the hue can be manipulated…",null,null],[10,"with_hue","","Return a new copy of `self`, but with a specific hue.",56,[[["into"],["self"]],["self"]]],[10,"shift_hue","","Return a new copy of `self`, but with the hue shifted by…",56,[[["into"],["self"]],["self"]]],[8,"Saturate","","A trait for colors where the saturation (or chroma) can be…",null,null],[16,"Scalar","","The type of the (de)saturation factor.",57,null],[10,"saturate","","Increase the saturation by `factor`.",57,[[["self"]],["self"]]],[11,"desaturate","","Decrease the saturation by `factor`.",57,[[["self"]],["self"]]],[8,"ComponentWise","","Perform a unary or binary operation on each component of a…",null,null],[16,"Scalar","","The scalar type for color components.",58,null],[10,"component_wise","","Perform a binary operation on this and an other color.",58,[[["self"],["fnmut"]],["self"]]],[10,"component_wise_self","","Perform a unary operation on this color.",58,[[["fnmut"],["self"]],["self"]]],[8,"FromF64","","A trait for infallible conversion from `f64`. The…",null,null],[10,"from_f64","","Creates a value from an `f64` constant.",59,[[["f64"]],["self"]]],[11,"adapt_from_using","","",0,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",0,[[["m"]],["d"]]],[11,"into_color","","",0,[[],["u"]]],[11,"into_color_unclamped","","",0,[[],["u"]]],[11,"try_into_color","","",0,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from_color","","",0,[[["t"]],["u"]]],[11,"try_from_color","","",0,[[["t"]],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",0,[[],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"adapt_from_using","","",1,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",1,[[["m"]],["d"]]],[11,"into_color","","",1,[[],["u"]]],[11,"into_color_unclamped","","",1,[[],["u"]]],[11,"try_into_color","","",1,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from_color","","",1,[[["t"]],["u"]]],[11,"try_from_color","","",1,[[["t"]],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"adapt_from_using","","",2,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",2,[[["m"]],["d"]]],[11,"into_color","","",2,[[],["u"]]],[11,"into_color_unclamped","","",2,[[],["u"]]],[11,"try_into_color","","",2,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from_color","","",2,[[["t"]],["u"]]],[11,"try_from_color","","",2,[[["t"]],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"adapt_from_using","","",3,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",3,[[["m"]],["d"]]],[11,"into_color","","",3,[[],["u"]]],[11,"into_color_unclamped","","",3,[[],["u"]]],[11,"try_into_color","","",3,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from_color","","",3,[[["t"]],["u"]]],[11,"try_from_color","","",3,[[["t"]],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"adapt_from_using","","",4,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",4,[[["m"]],["d"]]],[11,"into_color","","",4,[[],["u"]]],[11,"into_color_unclamped","","",4,[[],["u"]]],[11,"try_into_color","","",4,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from_color","","",4,[[["t"]],["u"]]],[11,"try_from_color","","",4,[[["t"]],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"adapt_from_using","","",5,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",5,[[["m"]],["d"]]],[11,"into_color","","",5,[[],["u"]]],[11,"into_color_unclamped","","",5,[[],["u"]]],[11,"try_into_color","","",5,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from_color","","",5,[[["t"]],["u"]]],[11,"try_from_color","","",5,[[["t"]],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",6,[[["m"]],["d"]]],[11,"into_color","","",6,[[],["u"]]],[11,"into_color_unclamped","","",6,[[],["u"]]],[11,"try_into_color","","",6,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"adapt_from_using","","",7,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",7,[[["m"]],["d"]]],[11,"into_color","","",7,[[],["u"]]],[11,"into_color_unclamped","","",7,[[],["u"]]],[11,"try_into_color","","",7,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from_color","","",7,[[["t"]],["u"]]],[11,"try_from_color","","",7,[[["t"]],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"adapt_from_using","","",8,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",8,[[["m"]],["d"]]],[11,"into_color","","",8,[[],["u"]]],[11,"into_color_unclamped","","",8,[[],["u"]]],[11,"try_into_color","","",8,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from_color","","",8,[[["t"]],["u"]]],[11,"try_from_color","","",8,[[["t"]],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",25,[[["m"]],["d"]]],[11,"into_color","","",25,[[],["u"]]],[11,"into_color_unclamped","","",25,[[],["u"]]],[11,"try_into_color","","",25,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",25,[[],["t"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",26,[[["m"]],["d"]]],[11,"into_color","","",26,[[],["u"]]],[11,"into_color_unclamped","","",26,[[],["u"]]],[11,"try_into_color","","",26,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",26,[[],["t"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"apply_to","palette::blend","",9,[[["prealpha"]],["prealpha"]]],[11,"adapt_into_using","","",9,[[["m"]],["d"]]],[11,"into_color","","",9,[[],["u"]]],[11,"into_color_unclamped","","",9,[[],["u"]]],[11,"try_into_color","","",9,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",10,[[["m"]],["d"]]],[11,"into_color","","",10,[[],["u"]]],[11,"into_color_unclamped","","",10,[[],["u"]]],[11,"try_into_color","","",10,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",11,[[["m"]],["d"]]],[11,"into_color","","",11,[[],["u"]]],[11,"into_color_unclamped","","",11,[[],["u"]]],[11,"try_into_color","","",11,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",12,[[["m"]],["d"]]],[11,"into_color","","",12,[[],["u"]]],[11,"into_color_unclamped","","",12,[[],["u"]]],[11,"try_into_color","","",12,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",13,[[["m"]],["d"]]],[11,"into_color","","",13,[[],["u"]]],[11,"into_color_unclamped","","",13,[[],["u"]]],[11,"try_into_color","","",13,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"adapt_into_using","palette::gradient","",16,[[["m"]],["d"]]],[11,"into_color","","",16,[[],["u"]]],[11,"into_color_unclamped","","",16,[[],["u"]]],[11,"try_into_color","","",16,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",60,[[["m"]],["d"]]],[11,"into_color","","",60,[[],["u"]]],[11,"into_color_unclamped","","",60,[[],["u"]]],[11,"try_into_color","","",60,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"into_iter","","",60,[[],["i"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",17,[[["m"]],["d"]]],[11,"into_color","","",17,[[],["u"]]],[11,"into_color_unclamped","","",17,[[],["u"]]],[11,"try_into_color","","",17,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",61,[[["m"]],["d"]]],[11,"into_color","","",61,[[],["u"]]],[11,"into_color_unclamped","","",61,[[],["u"]]],[11,"try_into_color","","",61,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"adapt_from_using","palette::luma","",18,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",18,[[["m"]],["d"]]],[11,"into_color","","",18,[[],["u"]]],[11,"into_color_unclamped","","",18,[[],["u"]]],[11,"try_into_color","","",18,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from_color","","",18,[[["t"]],["u"]]],[11,"try_from_color","","",18,[[["t"]],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"adapt_from_using","palette::rgb","",20,[[["s"],["m"]],["d"]]],[11,"adapt_into_using","","",20,[[["m"]],["d"]]],[11,"into_color","","",20,[[],["u"]]],[11,"into_color_unclamped","","",20,[[],["u"]]],[11,"try_into_color","","",20,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from_color","","",20,[[["t"]],["u"]]],[11,"try_from_color","","",20,[[["t"]],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"adapt_into_using","palette::rgb::channels","",62,[[["m"]],["d"]]],[11,"into_color","","",62,[[],["u"]]],[11,"into_color_unclamped","","",62,[[],["u"]]],[11,"try_into_color","","",62,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",63,[[["m"]],["d"]]],[11,"into_color","","",63,[[],["u"]]],[11,"into_color_unclamped","","",63,[[],["u"]]],[11,"try_into_color","","",63,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",64,[[["m"]],["d"]]],[11,"into_color","","",64,[[],["u"]]],[11,"into_color_unclamped","","",64,[[],["u"]]],[11,"try_into_color","","",64,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",65,[[["m"]],["d"]]],[11,"into_color","","",65,[[],["u"]]],[11,"into_color_unclamped","","",65,[[],["u"]]],[11,"try_into_color","","",65,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"adapt_into_using","palette::chromatic_adaptation","",27,[[["m"]],["d"]]],[11,"into_color","","",27,[[],["u"]]],[11,"into_color_unclamped","","",27,[[],["u"]]],[11,"try_into_color","","",27,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",28,[[["m"]],["d"]]],[11,"into_color","","",28,[[],["u"]]],[11,"into_color_unclamped","","",28,[[],["u"]]],[11,"try_into_color","","",28,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"adapt_into_using","palette::convert","",38,[[["m"]],["d"]]],[11,"into_color","","",38,[[],["u"]]],[11,"into_color_unclamped","","",38,[[],["u"]]],[11,"try_into_color","","",38,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"adapt_into_using","palette::encoding::gamma","",66,[[["m"]],["d"]]],[11,"into_color","","",66,[[],["u"]]],[11,"into_color_unclamped","","",66,[[],["u"]]],[11,"try_into_color","","",66,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",67,[[["m"]],["d"]]],[11,"into_color","","",67,[[],["u"]]],[11,"into_color_unclamped","","",67,[[],["u"]]],[11,"try_into_color","","",67,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",68,[[["m"]],["d"]]],[11,"into_color","","",68,[[],["u"]]],[11,"into_color_unclamped","","",68,[[],["u"]]],[11,"try_into_color","","",68,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"adapt_into_using","palette::encoding::linear","",69,[[["m"]],["d"]]],[11,"into_color","","",69,[[],["u"]]],[11,"into_color_unclamped","","",69,[[],["u"]]],[11,"try_into_color","","",69,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",70,[[["m"]],["d"]]],[11,"into_color","","",70,[[],["u"]]],[11,"into_color_unclamped","","",70,[[],["u"]]],[11,"try_into_color","","",70,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"adapt_into_using","palette::encoding::srgb","",71,[[["m"]],["d"]]],[11,"into_color","","",71,[[],["u"]]],[11,"into_color_unclamped","","",71,[[],["u"]]],[11,"try_into_color","","",71,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"adapt_into_using","palette::white_point","",72,[[["m"]],["d"]]],[11,"into_color","","",72,[[],["u"]]],[11,"into_color_unclamped","","",72,[[],["u"]]],[11,"try_into_color","","",72,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",73,[[["m"]],["d"]]],[11,"into_color","","",73,[[],["u"]]],[11,"into_color_unclamped","","",73,[[],["u"]]],[11,"try_into_color","","",73,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",74,[[["m"]],["d"]]],[11,"into_color","","",74,[[],["u"]]],[11,"into_color_unclamped","","",74,[[],["u"]]],[11,"try_into_color","","",74,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",75,[[["m"]],["d"]]],[11,"into_color","","",75,[[],["u"]]],[11,"into_color_unclamped","","",75,[[],["u"]]],[11,"try_into_color","","",75,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",76,[[["m"]],["d"]]],[11,"into_color","","",76,[[],["u"]]],[11,"into_color_unclamped","","",76,[[],["u"]]],[11,"try_into_color","","",76,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",77,[[["m"]],["d"]]],[11,"into_color","","",77,[[],["u"]]],[11,"into_color_unclamped","","",77,[[],["u"]]],[11,"try_into_color","","",77,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",78,[[["m"]],["d"]]],[11,"into_color","","",78,[[],["u"]]],[11,"into_color_unclamped","","",78,[[],["u"]]],[11,"try_into_color","","",78,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",79,[[["m"]],["d"]]],[11,"into_color","","",79,[[],["u"]]],[11,"into_color_unclamped","","",79,[[],["u"]]],[11,"try_into_color","","",79,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",80,[[["m"]],["d"]]],[11,"into_color","","",80,[[],["u"]]],[11,"into_color_unclamped","","",80,[[],["u"]]],[11,"try_into_color","","",80,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",81,[[["m"]],["d"]]],[11,"into_color","","",81,[[],["u"]]],[11,"into_color_unclamped","","",81,[[],["u"]]],[11,"try_into_color","","",81,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",82,[[["m"]],["d"]]],[11,"into_color","","",82,[[],["u"]]],[11,"into_color_unclamped","","",82,[[],["u"]]],[11,"try_into_color","","",82,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",83,[[["m"]],["d"]]],[11,"into_color","","",83,[[],["u"]]],[11,"into_color_unclamped","","",83,[[],["u"]]],[11,"try_into_color","","",83,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",84,[[["m"]],["d"]]],[11,"into_color","","",84,[[],["u"]]],[11,"into_color_unclamped","","",84,[[],["u"]]],[11,"try_into_color","","",84,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",85,[[["m"]],["d"]]],[11,"into_color","","",85,[[],["u"]]],[11,"into_color_unclamped","","",85,[[],["u"]]],[11,"try_into_color","","",85,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"adapt_into_using","","",86,[[["m"]],["d"]]],[11,"into_color","","",86,[[],["u"]]],[11,"into_color_unclamped","","",86,[[],["u"]]],[11,"try_into_color","","",86,[[],[["result",["outofbounds"]],["outofbounds"]]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"into_premultiplied","palette::blend","",11,[[],["prealpha"]]],[11,"from_premultiplied","","",11,[[["prealpha"]],["prealpha"]]],[11,"into_premultiplied","palette","",0,[[],["prealpha"]]],[11,"from_premultiplied","","",0,[[["prealpha"]],["alpha"]]],[11,"into_premultiplied","palette::luma","",18,[[],[["luma"],["prealpha",["luma"]]]]],[11,"from_premultiplied","","",18,[[["luma"],["prealpha",["luma"]]],["self"]]],[11,"into_premultiplied","palette::rgb","",20,[[],[["prealpha",["rgb"]],["rgb"]]]],[11,"from_premultiplied","","",20,[[["prealpha",["rgb"]],["rgb"]],["self"]]],[11,"apply_to","palette::blend","",9,[[["prealpha"]],["prealpha"]]],[11,"with_alpha","palette","",0,[[["a"]]]],[11,"without_alpha","","",0,[[]]],[11,"split","","",0,[[]]],[11,"with_alpha","","",1,[[["_a"]]]],[11,"without_alpha","","",1,[[]]],[11,"split","","",1,[[]]],[11,"with_alpha","","",2,[[["_a"]]]],[11,"without_alpha","","",2,[[]]],[11,"split","","",2,[[]]],[11,"with_alpha","","",3,[[["_a"]]]],[11,"without_alpha","","",3,[[]]],[11,"split","","",3,[[]]],[11,"with_alpha","","",4,[[["_a"]]]],[11,"without_alpha","","",4,[[]]],[11,"split","","",4,[[]]],[11,"with_alpha","","",5,[[["_a"]]]],[11,"without_alpha","","",5,[[]]],[11,"split","","",5,[[]]],[11,"with_alpha","palette::luma","",18,[[["_a"]]]],[11,"without_alpha","","",18,[[]]],[11,"split","","",18,[[]]],[11,"with_alpha","palette::rgb","",20,[[["_a"]]]],[11,"without_alpha","","",20,[[]]],[11,"split","","",20,[[]]],[11,"with_alpha","palette","",7,[[["_a"]]]],[11,"without_alpha","","",7,[[]]],[11,"split","","",7,[[]]],[11,"with_alpha","","",8,[[["_a"]]]],[11,"without_alpha","","",8,[[]]],[11,"split","","",8,[[]]],[11,"split_rgb","palette::rgb::channels","",62,[[["rgba",["u8"]],["rgbstandard"],["u8"]]]],[11,"combine_rgb","","",62,[[],[["rgba",["u8"]],["rgbstandard"],["u8"]]]],[11,"split_rgb","","",63,[[["rgba",["u8"]],["rgbstandard"],["u8"]]]],[11,"combine_rgb","","",63,[[],[["rgba",["u8"]],["rgbstandard"],["u8"]]]],[11,"split_rgb","","",64,[[["rgba",["u8"]],["rgbstandard"],["u8"]]]],[11,"combine_rgb","","",64,[[],[["rgba",["u8"]],["rgbstandard"],["u8"]]]],[11,"split_rgb","","",65,[[["rgba",["u8"]],["rgbstandard"],["u8"]]]],[11,"combine_rgb","","",65,[[],[["rgba",["u8"]],["rgbstandard"],["u8"]]]],[11,"red","palette::encoding::srgb","",71,[[],[["whitepoint"],["floatcomponent"],["yxy"]]]],[11,"green","","",71,[[],[["whitepoint"],["floatcomponent"],["yxy"]]]],[11,"blue","","",71,[[],[["whitepoint"],["floatcomponent"],["yxy"]]]],[11,"get_cone_response","palette::chromatic_adaptation","",28,[[["self"]],["coneresponsematrices"]]],[11,"get_color_difference","palette","",4,[[["self"],["lab"]]]],[11,"get_color_difference","","",5,[[["lch"],["self"]]]],[11,"from_color_unclamped","","",0,[[["c1"]],["self"]]],[11,"from_color_unclamped","","",1,[[["luma"]],["self"]]],[11,"from_color_unclamped","","",1,[[["hwb"]],["self"]]],[11,"from_color_unclamped","","",1,[[["lab"]],["self"]]],[11,"from_color_unclamped","","",1,[[["lch"]],["self"]]],[11,"from_color_unclamped","","",1,[[["xyz"]],["self"]]],[11,"from_color_unclamped","","",1,[[["yxy"]],["self"]]],[11,"from_color_unclamped","","",1,[[["alpha"]],["self"]]],[11,"from_color_unclamped","","",1,[[["hsl"]],["self"]]],[11,"from_color_unclamped","","",1,[[["rgb"]],["self"]]],[11,"from_color_unclamped","","",1,[[["hsv"]],["self"]]],[11,"from_color_unclamped","","",2,[[["luma"]],["self"]]],[11,"from_color_unclamped","","",2,[[["lab"]],["self"]]],[11,"from_color_unclamped","","",2,[[["lch"]],["self"]]],[11,"from_color_unclamped","","",2,[[["xyz"]],["self"]]],[11,"from_color_unclamped","","",2,[[["yxy"]],["self"]]],[11,"from_color_unclamped","","",2,[[["alpha"]],["self"]]],[11,"from_color_unclamped","","",2,[[["hsv"]],["self"]]],[11,"from_color_unclamped","","",2,[[["rgb"]],["self"]]],[11,"from_color_unclamped","","",2,[[["hsl"]],["self"]]],[11,"from_color_unclamped","","",2,[[["hwb"]],["self"]]],[11,"from_color_unclamped","","",3,[[["rgb"]],["self"]]],[11,"from_color_unclamped","","",3,[[["luma"]],["self"]]],[11,"from_color_unclamped","","",3,[[["hsl"]],["self"]]],[11,"from_color_unclamped","","",3,[[["lab"]],["self"]]],[11,"from_color_unclamped","","",3,[[["lch"]],["self"]]],[11,"from_color_unclamped","","",3,[[["xyz"]],["self"]]],[11,"from_color_unclamped","","",3,[[["yxy"]],["self"]]],[11,"from_color_unclamped","","",3,[[["alpha"]],["self"]]],[11,"from_color_unclamped","","",3,[[["hwb"]],["self"]]],[11,"from_color_unclamped","","",3,[[["hsv"]],["self"]]],[11,"from_color_unclamped","","",4,[[["rgb"]],["self"]]],[11,"from_color_unclamped","","",4,[[["luma"]],["self"]]],[11,"from_color_unclamped","","",4,[[["hsl"]],["self"]]],[11,"from_color_unclamped","","",4,[[["hsv"]],["self"]]],[11,"from_color_unclamped","","",4,[[["hwb"]],["self"]]],[11,"from_color_unclamped","","",4,[[["yxy"]],["self"]]],[11,"from_color_unclamped","","",4,[[["alpha"]],["self"]]],[11,"from_color_unclamped","","",4,[[["lab"]],["self"]]],[11,"from_color_unclamped","","",4,[[["xyz"]],["self"]]],[11,"from_color_unclamped","","",4,[[["lch"]],["self"]]],[11,"from_color_unclamped","","",5,[[["rgb"]],["self"]]],[11,"from_color_unclamped","","",5,[[["luma"]],["self"]]],[11,"from_color_unclamped","","",5,[[["hsl"]],["self"]]],[11,"from_color_unclamped","","",5,[[["hsv"]],["self"]]],[11,"from_color_unclamped","","",5,[[["hwb"]],["self"]]],[11,"from_color_unclamped","","",5,[[["yxy"]],["self"]]],[11,"from_color_unclamped","","",5,[[["alpha"]],["self"]]],[11,"from_color_unclamped","","",5,[[["lch"]],["self"]]],[11,"from_color_unclamped","","",5,[[["xyz"]],["self"]]],[11,"from_color_unclamped","","",5,[[["lab"]],["self"]]],[11,"from_color_unclamped","palette::luma","",18,[[["rgb"]],["self"]]],[11,"from_color_unclamped","","",18,[[["hsl"]],["self"]]],[11,"from_color_unclamped","","",18,[[["hsv"]],["self"]]],[11,"from_color_unclamped","","",18,[[["hwb"]],["self"]]],[11,"from_color_unclamped","","",18,[[["lab"]],["self"]]],[11,"from_color_unclamped","","",18,[[["lch"]],["self"]]],[11,"from_color_unclamped","","",18,[[["alpha"]],["self"]]],[11,"from_color_unclamped","","",18,[[["luma"]],["self"]]],[11,"from_color_unclamped","","",18,[[["xyz"]],["self"]]],[11,"from_color_unclamped","","",18,[[["yxy"]],["self"]]],[11,"from_color_unclamped","palette::rgb","",20,[[["hwb"]],["self"]]],[11,"from_color_unclamped","","",20,[[["lab"]],["self"]]],[11,"from_color_unclamped","","",20,[[["lch"]],["self"]]],[11,"from_color_unclamped","","",20,[[["yxy"]],["self"]]],[11,"from_color_unclamped","","",20,[[["alpha"]],["self"]]],[11,"from_color_unclamped","","",20,[[["rgb"]],["self"]]],[11,"from_color_unclamped","","",20,[[["xyz"]],["self"]]],[11,"from_color_unclamped","","",20,[[["hsl"]],["self"]]],[11,"from_color_unclamped","","",20,[[["hsv"]],["self"]]],[11,"from_color_unclamped","","",20,[[["luma"]],["self"]]],[11,"from_color_unclamped","palette","",7,[[["hsl"]],["self"]]],[11,"from_color_unclamped","","",7,[[["hsv"]],["self"]]],[11,"from_color_unclamped","","",7,[[["hwb"]],["self"]]],[11,"from_color_unclamped","","",7,[[["lch"]],["self"]]],[11,"from_color_unclamped","","",7,[[["alpha"]],["self"]]],[11,"from_color_unclamped","","",7,[[["xyz"]],["self"]]],[11,"from_color_unclamped","","",7,[[["rgb"]],["self"]]],[11,"from_color_unclamped","","",7,[[["yxy"]],["self"]]],[11,"from_color_unclamped","","",7,[[["lab"]],["self"]]],[11,"from_color_unclamped","","",7,[[["luma"]],["self"]]],[11,"from_color_unclamped","","",8,[[["rgb"]],["self"]]],[11,"from_color_unclamped","","",8,[[["hsl"]],["self"]]],[11,"from_color_unclamped","","",8,[[["hsv"]],["self"]]],[11,"from_color_unclamped","","",8,[[["hwb"]],["self"]]],[11,"from_color_unclamped","","",8,[[["lab"]],["self"]]],[11,"from_color_unclamped","","",8,[[["lch"]],["self"]]],[11,"from_color_unclamped","","",8,[[["alpha"]],["self"]]],[11,"from_color_unclamped","","",8,[[["yxy"]],["self"]]],[11,"from_color_unclamped","","",8,[[["xyz"]],["self"]]],[11,"from_color_unclamped","","",8,[[["luma"]],["self"]]],[11,"into_linear","palette::encoding::gamma","",67,[[["float"],["fromf64"]],[["float"],["fromf64"]]]],[11,"from_linear","","",67,[[["float"],["fromf64"]],[["float"],["fromf64"]]]],[11,"into_linear","palette::encoding::linear","",70,[[["float"]],["float"]]],[11,"from_linear","","",70,[[["float"]],["float"]]],[11,"into_linear","palette::encoding::srgb","",71,[[["float"],["fromf64"]],[["float"],["fromf64"]]]],[11,"from_linear","","",71,[[["float"],["fromf64"]],[["float"],["fromf64"]]]],[11,"get_contrast_ratio","palette","",1,[[["self"]],["t"]]],[11,"get_contrast_ratio","","",2,[[["self"]],["t"]]],[11,"get_contrast_ratio","","",3,[[["self"]],["t"]]],[11,"get_contrast_ratio","","",4,[[["self"]],["t"]]],[11,"get_contrast_ratio","","",5,[[["self"]],["t"]]],[11,"get_contrast_ratio","palette::luma","",18,[[["self"]],["t"]]],[11,"get_contrast_ratio","palette::rgb","",20,[[["self"]],["t"]]],[11,"get_contrast_ratio","palette","",7,[[["self"]],["t"]]],[11,"get_contrast_ratio","","",8,[[["self"]],["t"]]],[11,"get_xyz","palette::white_point","",72,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[11,"get_xyz","","",73,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[11,"get_xyz","","",74,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[11,"get_xyz","","",75,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[11,"get_xyz","","",76,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[11,"get_xyz","","",77,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[11,"get_xyz","","",78,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[11,"get_xyz","","",79,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[11,"get_xyz","","",80,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[11,"get_xyz","","",81,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[11,"get_xyz","","",82,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[11,"get_xyz","","",83,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[11,"get_xyz","","",84,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[11,"get_xyz","","",85,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[11,"get_xyz","","",86,[[],[["xyz"],["whitepoint"],["floatcomponent"]]]],[11,"is_valid","palette","",0,[[["self"]],["bool"]]],[11,"clamp","","",0,[[["self"]],["alpha"]]],[11,"clamp_self","","",0,[[["self"]]]],[11,"is_valid","","",1,[[["self"]],["bool"]]],[11,"clamp","","",1,[[["self"]],["hsl"]]],[11,"clamp_self","","",1,[[["self"]]]],[11,"is_valid","","",2,[[["self"]],["bool"]]],[11,"clamp","","",2,[[["self"]],["hsv"]]],[11,"clamp_self","","",2,[[["self"]]]],[11,"is_valid","","",3,[[["self"]],["bool"]]],[11,"clamp","","",3,[[["self"]],["hwb"]]],[11,"clamp_self","","",3,[[["self"]]]],[11,"is_valid","","",4,[[["self"]],["bool"]]],[11,"clamp","","",4,[[["self"]],["lab"]]],[11,"clamp_self","","",4,[[["self"]]]],[11,"is_valid","","",5,[[["self"]],["bool"]]],[11,"clamp","","",5,[[["self"]],["lch"]]],[11,"clamp_self","","",5,[[["self"]]]],[11,"is_valid","palette::luma","",18,[[["self"]],["bool"]]],[11,"clamp","","",18,[[["self"]],["luma"]]],[11,"clamp_self","","",18,[[["self"]]]],[11,"is_valid","palette::rgb","",20,[[["self"]],["bool"]]],[11,"clamp","","",20,[[["self"]],["rgb"]]],[11,"clamp_self","","",20,[[["self"]]]],[11,"is_valid","palette","",7,[[["self"]],["bool"]]],[11,"clamp","","",7,[[["self"]],["xyz"]]],[11,"clamp_self","","",7,[[["self"]]]],[11,"is_valid","","",8,[[["self"]],["bool"]]],[11,"clamp","","",8,[[["self"]],["yxy"]]],[11,"clamp_self","","",8,[[["self"]]]],[11,"mix","palette::blend","",11,[[["self"],["prealpha"]],["prealpha"]]],[11,"mix","palette","",0,[[["alpha"],["self"]],["alpha"]]],[11,"mix","","",1,[[["hsl"],["self"],["t"]],["hsl"]]],[11,"mix","","",2,[[["t"],["self"],["hsv"]],["hsv"]]],[11,"mix","","",3,[[["hwb"],["self"],["t"]],["hwb"]]],[11,"mix","","",4,[[["t"],["self"],["lab"]],["lab"]]],[11,"mix","","",5,[[["lch"],["self"],["t"]],["lch"]]],[11,"mix","palette::luma","",18,[[["t"],["self"],["luma"]],["luma"]]],[11,"mix","palette::rgb","",20,[[["rgb"],["self"],["t"]],["rgb"]]],[11,"mix","palette","",7,[[["xyz"],["self"],["t"]],["xyz"]]],[11,"mix","","",8,[[["t"],["self"],["yxy"]],["yxy"]]],[11,"lighten","","",0,[[["self"]],["alpha"]]],[11,"lighten","","",1,[[["self"],["t"]],["hsl"]]],[11,"lighten","","",2,[[["self"],["t"]],["hsv"]]],[11,"lighten","","",3,[[["self"],["t"]],["hwb"]]],[11,"lighten","","",4,[[["self"],["t"]],["lab"]]],[11,"lighten","","",5,[[["self"],["t"]],["lch"]]],[11,"lighten","palette::luma","",18,[[["self"],["t"]],["luma"]]],[11,"lighten","palette::rgb","",20,[[["self"],["t"]],["rgb"]]],[11,"lighten","palette","",7,[[["self"],["t"]],["xyz"]]],[11,"lighten","","",8,[[["self"],["t"]],["yxy"]]],[11,"get_hue","","",0,[[["self"]],["option"]]],[11,"get_hue","","",1,[[["self"]],[["option",["rgbhue"]],["rgbhue"]]]],[11,"get_hue","","",2,[[["self"]],[["option",["rgbhue"]],["rgbhue"]]]],[11,"get_hue","","",3,[[["self"]],[["option",["rgbhue"]],["rgbhue"]]]],[11,"get_hue","","",4,[[["self"]],[["labhue"],["option",["labhue"]]]]],[11,"get_hue","","",5,[[["self"]],[["labhue"],["option",["labhue"]]]]],[11,"get_hue","palette::rgb","",20,[[["self"]],[["option",["rgbhue"]],["rgbhue"]]]],[11,"with_hue","palette","",0,[[["into"],["self"]],["alpha"]]],[11,"shift_hue","","",0,[[["into"],["self"]],["alpha"]]],[11,"with_hue","","",1,[[["into"],["self"]],["hsl"]]],[11,"shift_hue","","",1,[[["into"],["self"]],["hsl"]]],[11,"with_hue","","",2,[[["into"],["self"]],["hsv"]]],[11,"shift_hue","","",2,[[["into"],["self"]],["hsv"]]],[11,"with_hue","","",3,[[["into"],["self"]],["hwb"]]],[11,"shift_hue","","",3,[[["into"],["self"]],["hwb"]]],[11,"with_hue","","",5,[[["into"],["self"]],["lch"]]],[11,"shift_hue","","",5,[[["into"],["self"]],["lch"]]],[11,"saturate","","",0,[[["self"]],["alpha"]]],[11,"saturate","","",1,[[["self"],["t"]],["hsl"]]],[11,"saturate","","",2,[[["self"],["t"]],["hsv"]]],[11,"saturate","","",5,[[["self"],["t"]],["lch"]]],[11,"component_wise","palette::blend","",11,[[["fnmut"],["self"],["prealpha"]],["prealpha"]]],[11,"component_wise_self","","",11,[[["fnmut"],["self"]],["prealpha"]]],[11,"component_wise","palette","",0,[[["alpha"],["fnmut"],["self"]],["alpha"]]],[11,"component_wise_self","","",0,[[["fnmut"],["self"]],["alpha"]]],[11,"component_wise","","",4,[[["fnmut"],["self"],["lab"]],["lab"]]],[11,"component_wise_self","","",4,[[["fnmut"],["self"]],["lab"]]],[11,"component_wise","palette::luma","",18,[[["fnmut"],["self"],["luma"]],["luma"]]],[11,"component_wise_self","","",18,[[["fnmut"],["self"]],["luma"]]],[11,"component_wise","palette::rgb","",20,[[["fnmut"],["rgb"],["self"]],["rgb"]]],[11,"component_wise_self","","",20,[[["fnmut"],["self"]],["rgb"]]],[11,"component_wise","palette","",7,[[["fnmut"],["xyz"],["self"]],["xyz"]]],[11,"component_wise_self","","",7,[[["fnmut"],["self"]],["xyz"]]],[11,"component_wise","","",8,[[["fnmut"],["self"],["yxy"]],["yxy"]]],[11,"component_wise_self","","",8,[[["fnmut"],["self"]],["yxy"]]],[11,"as_mut","palette::blend","",11,[[["self"]],["p"]]],[11,"as_mut","palette","",0,[[["self"]],["p"]]],[11,"as_mut","","",1,[[["self"]],["p"]]],[11,"as_mut","","",2,[[["self"]],["p"]]],[11,"as_mut","","",3,[[["self"]],["p"]]],[11,"as_mut","","",4,[[["self"]],["p"]]],[11,"as_mut","","",5,[[["self"]],["p"]]],[11,"as_mut","palette::luma","Convert to a raw pixel format.",18,[[["self"]],["p"]]],[11,"as_mut","palette::rgb","Convert to a raw pixel format.",20,[[["self"]],["p"]]],[11,"as_mut","palette","",7,[[["self"]],["p"]]],[11,"as_mut","","",8,[[["self"]],["p"]]],[11,"as_ref","palette::blend","",11,[[["self"]],["p"]]],[11,"as_ref","palette","",0,[[["self"]],["p"]]],[11,"as_ref","","",1,[[["self"]],["p"]]],[11,"as_ref","","",2,[[["self"]],["p"]]],[11,"as_ref","","",3,[[["self"]],["p"]]],[11,"as_ref","","",4,[[["self"]],["p"]]],[11,"as_ref","","",5,[[["self"]],["p"]]],[11,"as_ref","palette::luma","Convert to a raw pixel format.",18,[[["self"]],["p"]]],[11,"as_ref","palette::rgb","Convert to a raw pixel format.",20,[[["self"]],["p"]]],[11,"as_ref","palette","",7,[[["self"]],["p"]]],[11,"as_ref","","",8,[[["self"]],["p"]]],[11,"from","palette::blend","",11,[[["alpha"]],["prealpha"]]],[11,"from","palette","",0,[[["prealpha"]],["alpha"]]],[11,"from","palette::gradient","",61,[[["range"]],["range"]]],[11,"from","","",61,[[["rangefrom"]],["range"]]],[11,"from","","",61,[[["rangeto"]],["range"]]],[11,"from","","",61,[[["rangefull"]],["range"]]],[11,"from","palette","",0,[[["c"]],["alpha"]]],[11,"from","","",1,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",2,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",3,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",4,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",5,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","palette::luma","",18,[[],["self"]]],[11,"from","palette","",0,[[],["self"]]],[11,"from","","",6,[[["u32"]],["self"]]],[11,"from","","",6,[[["rgb",["u8"]],["u8"]],["self"]]],[11,"from","","",6,[[["rgba",["u8"]],["u8"]],["self"]]],[11,"from","palette::rgb","",20,[[["u32"]],["self"]]],[11,"from","","",20,[[["packed"]],["self"]]],[11,"from","palette","",87,[[["u32"]],["self"]]],[11,"from","","",87,[[["packed"]],["self"]]],[11,"from","palette::rgb","",20,[[],["self"]]],[11,"from","palette","",0,[[],["self"]]],[11,"from","","",88,[[["linsrgb"]],["self"]]],[11,"from","","",89,[[["srgb"]],["self"]]],[11,"from","","",90,[[["linsrgb"]],["self"]]],[11,"from","","",90,[[["linsrgba"]],["self"]]],[11,"from","","",91,[[["srgb"]],["self"]]],[11,"from","","",91,[[["srgba"]],["self"]]],[11,"from","","",7,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",8,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",25,[[["t"]],["labhue"]]],[11,"from","","",26,[[["t"]],["rgbhue"]]],[11,"into","","",1,[[]]],[11,"into","","",0,[[]]],[11,"into","","",2,[[]]],[11,"into","","",0,[[]]],[11,"into","","",3,[[]]],[11,"into","","",0,[[]]],[11,"into","","",4,[[]]],[11,"into","","",0,[[]]],[11,"into","","",5,[[]]],[11,"into","","",0,[[]]],[11,"into","palette::luma","",18,[[]]],[11,"into","palette","",0,[[]]],[11,"into","palette::rgb","",20,[[]]],[11,"into","palette","",0,[[]]],[11,"into","","",7,[[]]],[11,"into","","",0,[[]]],[11,"into","","",8,[[]]],[11,"into","","",0,[[]]],[11,"into","","",25,[[],["f64"]]],[11,"into","","",25,[[],["f32"]]],[11,"into","","",25,[[],["f32"]]],[11,"into","","",26,[[],["f64"]]],[11,"into","","",26,[[],["f32"]]],[11,"into","","",26,[[],["f32"]]],[11,"next_back","palette::gradient","",60,[[["self"]],["option"]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"clone","palette::blend","",9,[[["self"]],["equations"]]],[11,"clone","","",12,[[["self"]],["equation"]]],[11,"clone","","",10,[[["self"]],["parameters"]]],[11,"clone","","",13,[[["self"]],["parameter"]]],[11,"clone","","",11,[[["self"]],["prealpha"]]],[11,"clone","palette::gradient","",16,[[["self"]],["gradient"]]],[11,"clone","","",60,[[["self"]],["take"]]],[11,"clone","","",17,[[["self"]],["slice"]]],[11,"clone","","",61,[[["self"]],["range"]]],[11,"clone","palette","",0,[[["self"]],["alpha"]]],[11,"clone","","",1,[[["self"]],["hsl"]]],[11,"clone","","",2,[[["self"]],["hsv"]]],[11,"clone","","",3,[[["self"]],["hwb"]]],[11,"clone","","",4,[[["self"]],["lab"]]],[11,"clone","","",5,[[["self"]],["lch"]]],[11,"clone","palette::luma","",18,[[["self"]],["luma"]]],[11,"clone","palette","",6,[[["self"]],["packed"]]],[11,"clone","palette::rgb","",20,[[["self"]],["rgb"]]],[11,"clone","palette","",7,[[["self"]],["xyz"]]],[11,"clone","","",8,[[["self"]],["yxy"]]],[11,"clone","","",25,[[["self"]],["labhue"]]],[11,"clone","","",26,[[["self"]],["rgbhue"]]],[11,"clone","palette::encoding::gamma","",66,[[["self"]],["gamma"]]],[11,"clone","","",67,[[["self"]],["gammafn"]]],[11,"clone","","",68,[[["self"]],["f2p2"]]],[11,"clone","palette::encoding::linear","",69,[[["self"]],["linear"]]],[11,"clone","","",70,[[["self"]],["linearfn"]]],[11,"clone","palette::encoding::srgb","",71,[[["self"]],["srgb"]]],[11,"clone","palette::white_point","",72,[[["self"]],["a"]]],[11,"clone","","",73,[[["self"]],["b"]]],[11,"clone","","",74,[[["self"]],["c"]]],[11,"clone","","",75,[[["self"]],["d50"]]],[11,"clone","","",76,[[["self"]],["d55"]]],[11,"clone","","",77,[[["self"]],["d65"]]],[11,"clone","","",78,[[["self"]],["d75"]]],[11,"clone","","",79,[[["self"]],["e"]]],[11,"clone","","",80,[[["self"]],["f2"]]],[11,"clone","","",81,[[["self"]],["f7"]]],[11,"clone","","",82,[[["self"]],["f11"]]],[11,"clone","","",83,[[["self"]],["d50degree10"]]],[11,"clone","","",84,[[["self"]],["d55degree10"]]],[11,"clone","","",85,[[["self"]],["d65degree10"]]],[11,"clone","","",86,[[["self"]],["d75degree10"]]],[11,"default","palette::blend","",11,[[],["prealpha"]]],[11,"default","palette","",0,[[],["alpha"]]],[11,"default","","",1,[[],["hsl"]]],[11,"default","","",2,[[],["hsv"]]],[11,"default","","",3,[[],["hwb"]]],[11,"default","","",4,[[],["lab"]]],[11,"default","","",5,[[],["lch"]]],[11,"default","palette::luma","",18,[[],["luma"]]],[11,"default","palette::rgb","",20,[[],["rgb"]]],[11,"default","palette","",7,[[],["xyz"]]],[11,"default","","",8,[[],["yxy"]]],[11,"default","","",25,[[],["labhue"]]],[11,"default","","",26,[[],["rgbhue"]]],[11,"eq","palette::blend","",9,[[["self"],["equations"]],["bool"]]],[11,"ne","","",9,[[["self"],["equations"]],["bool"]]],[11,"eq","","",12,[[["equation"],["self"]],["bool"]]],[11,"eq","","",10,[[["parameters"],["self"]],["bool"]]],[11,"ne","","",10,[[["parameters"],["self"]],["bool"]]],[11,"eq","","",13,[[["self"],["parameter"]],["bool"]]],[11,"eq","","",11,[[["self"],["prealpha"]],["bool"]]],[11,"ne","","",11,[[["self"],["prealpha"]],["bool"]]],[11,"eq","palette::gradient","",61,[[["self"],["range"]],["bool"]]],[11,"ne","","",61,[[["self"],["range"]],["bool"]]],[11,"eq","palette","",0,[[["alpha"],["self"]],["bool"]]],[11,"ne","","",0,[[["alpha"],["self"]],["bool"]]],[11,"eq","","",1,[[["hsl"],["self"]],["bool"]]],[11,"ne","","",1,[[["hsl"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["hsv"]],["bool"]]],[11,"ne","","",2,[[["self"],["hsv"]],["bool"]]],[11,"eq","","",3,[[["hwb"],["self"]],["bool"]]],[11,"ne","","",3,[[["hwb"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["lab"]],["bool"]]],[11,"ne","","",4,[[["self"],["lab"]],["bool"]]],[11,"eq","","",5,[[["lch"],["self"]],["bool"]]],[11,"ne","","",5,[[["lch"],["self"]],["bool"]]],[11,"eq","palette::luma","",18,[[["self"],["luma"]],["bool"]]],[11,"ne","","",18,[[["self"],["luma"]],["bool"]]],[11,"eq","palette","",6,[[["packed"],["self"]],["bool"]]],[11,"ne","","",6,[[["packed"],["self"]],["bool"]]],[11,"eq","palette::rgb","",20,[[["rgb"],["self"]],["bool"]]],[11,"ne","","",20,[[["rgb"],["self"]],["bool"]]],[11,"eq","palette","",7,[[["xyz"],["self"]],["bool"]]],[11,"ne","","",7,[[["xyz"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["yxy"]],["bool"]]],[11,"ne","","",8,[[["self"],["yxy"]],["bool"]]],[11,"eq","","",25,[[["labhue"],["self"]],["bool"]]],[11,"eq","","",25,[[["t"],["self"]],["bool"]]],[11,"eq","","",26,[[["self"],["rgbhue"]],["bool"]]],[11,"eq","","",26,[[["t"],["self"]],["bool"]]],[11,"eq","palette::encoding::gamma","",66,[[["self"],["gamma"]],["bool"]]],[11,"ne","","",66,[[["self"],["gamma"]],["bool"]]],[11,"eq","","",67,[[["gammafn"],["self"]],["bool"]]],[11,"ne","","",67,[[["gammafn"],["self"]],["bool"]]],[11,"eq","","",68,[[["self"],["f2p2"]],["bool"]]],[11,"eq","palette::encoding::linear","",69,[[["linear"],["self"]],["bool"]]],[11,"ne","","",69,[[["linear"],["self"]],["bool"]]],[11,"eq","","",70,[[["self"],["linearfn"]],["bool"]]],[11,"eq","palette::encoding::srgb","",71,[[["self"],["srgb"]],["bool"]]],[11,"eq","palette::white_point","",72,[[["self"],["a"]],["bool"]]],[11,"eq","","",73,[[["self"],["b"]],["bool"]]],[11,"eq","","",74,[[["c"],["self"]],["bool"]]],[11,"eq","","",75,[[["d50"],["self"]],["bool"]]],[11,"eq","","",76,[[["d55"],["self"]],["bool"]]],[11,"eq","","",77,[[["self"],["d65"]],["bool"]]],[11,"eq","","",78,[[["d75"],["self"]],["bool"]]],[11,"eq","","",79,[[["e"],["self"]],["bool"]]],[11,"eq","","",80,[[["self"],["f2"]],["bool"]]],[11,"eq","","",81,[[["f7"],["self"]],["bool"]]],[11,"eq","","",82,[[["self"],["f11"]],["bool"]]],[11,"eq","","",83,[[["self"],["d50degree10"]],["bool"]]],[11,"eq","","",84,[[["self"],["d55degree10"]],["bool"]]],[11,"eq","","",85,[[["d65degree10"],["self"]],["bool"]]],[11,"eq","","",86,[[["d75degree10"],["self"]],["bool"]]],[11,"deref","palette::blend","",11,[[["self"]],["c"]]],[11,"deref","palette","",0,[[["self"]],["c"]]],[11,"deref_mut","palette::blend","",11,[[["self"]],["c"]]],[11,"deref_mut","palette","",0,[[["self"]],["c"]]],[11,"fmt","palette::blend","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::gradient","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::luma","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::rgb","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::convert","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::encoding::gamma","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::encoding::linear","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::encoding::srgb","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::white_point","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::convert","",38,[[["formatter"],["self"]],["result"]]],[11,"div","palette::blend","",11,[[["prealpha"]]]],[11,"div","","",11,[[["t"]]]],[11,"div","palette","",0,[[["alpha"]]]],[11,"div","","",0,[[["t"]]]],[11,"div","","",4,[[["lab"]]]],[11,"div","","",4,[[["t"]]]],[11,"div","palette::luma","",18,[[["luma"]]]],[11,"div","","",18,[[["t"]]]],[11,"div","palette::rgb","",20,[[["rgb"]]]],[11,"div","","",20,[[["t"]]]],[11,"div","palette","",7,[[["xyz"]]]],[11,"div","","",7,[[["t"]]]],[11,"div","","",8,[[["yxy"]]]],[11,"div","","",8,[[["t"]]]],[11,"sub","palette::blend","",11,[[["prealpha"]]]],[11,"sub","","",11,[[["t"]]]],[11,"sub","palette","",0,[[["alpha"]]]],[11,"sub","","",0,[[["t"]]]],[11,"sub","","",1,[[["hsl"]]]],[11,"sub","","",1,[[["t"]]]],[11,"sub","","",2,[[["hsv"]]]],[11,"sub","","",2,[[["t"]]]],[11,"sub","","",3,[[["hwb"]]]],[11,"sub","","",3,[[["t"]]]],[11,"sub","","",4,[[["lab"]]]],[11,"sub","","",4,[[["t"]]]],[11,"sub","","",5,[[["lch"]]]],[11,"sub","","",5,[[["t"]]]],[11,"sub","palette::luma","",18,[[["luma"]]]],[11,"sub","","",18,[[["t"]]]],[11,"sub","palette::rgb","",20,[[["rgb"]]]],[11,"sub","","",20,[[["t"]]]],[11,"sub","palette","",7,[[["xyz"]]]],[11,"sub","","",7,[[["t"]]]],[11,"sub","","",8,[[["yxy"]]]],[11,"sub","","",8,[[["t"]]]],[11,"sub","","",25,[[["labhue"]],["labhue"]]],[11,"sub","","",25,[[["t"]],["labhue"]]],[11,"sub","","",26,[[["rgbhue"]],["rgbhue"]]],[11,"sub","","",26,[[["t"]],["rgbhue"]]],[11,"add","palette::blend","",11,[[["prealpha"]]]],[11,"add","","",11,[[["t"]]]],[11,"add","palette","",0,[[["alpha"]]]],[11,"add","","",0,[[["t"]]]],[11,"add","","",1,[[["hsl"]]]],[11,"add","","",1,[[["t"]]]],[11,"add","","",2,[[["hsv"]]]],[11,"add","","",2,[[["t"]]]],[11,"add","","",3,[[["hwb"]]]],[11,"add","","",3,[[["t"]]]],[11,"add","","",4,[[["lab"]]]],[11,"add","","",4,[[["t"]]]],[11,"add","","",5,[[["lch"]]]],[11,"add","","",5,[[["t"]]]],[11,"add","palette::luma","",18,[[["luma"]]]],[11,"add","","",18,[[["t"]]]],[11,"add","palette::rgb","",20,[[["rgb"]]]],[11,"add","","",20,[[["t"]]]],[11,"add","palette","",7,[[["xyz"]]]],[11,"add","","",7,[[["t"]]]],[11,"add","","",8,[[["yxy"]]]],[11,"add","","",8,[[["t"]]]],[11,"add","","",25,[[["labhue"]],["labhue"]]],[11,"add","","",25,[[["t"]],["labhue"]]],[11,"add","","",26,[[["rgbhue"]],["rgbhue"]]],[11,"add","","",26,[[["t"]],["rgbhue"]]],[11,"mul","palette::blend","",11,[[["prealpha"]]]],[11,"mul","","",11,[[["t"]]]],[11,"mul","palette","",0,[[["alpha"]]]],[11,"mul","","",0,[[["t"]]]],[11,"mul","","",4,[[["lab"]]]],[11,"mul","","",4,[[["t"]]]],[11,"mul","palette::luma","",18,[[["luma"]]]],[11,"mul","","",18,[[["t"]]]],[11,"mul","palette::rgb","",20,[[["rgb"]]]],[11,"mul","","",20,[[["t"]]]],[11,"mul","palette","",7,[[["xyz"]]]],[11,"mul","","",7,[[["t"]]]],[11,"mul","","",8,[[["yxy"]]]],[11,"mul","","",8,[[["t"]]]],[11,"add_assign","palette::blend","",11,[[["self"],["prealpha"]]]],[11,"add_assign","","",11,[[["self"],["t"]]]],[11,"add_assign","palette","",0,[[["self"],["alpha"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",1,[[["self"],["hsl"]]]],[11,"add_assign","","",1,[[["self"],["t"]]]],[11,"add_assign","","",2,[[["self"],["hsv"]]]],[11,"add_assign","","",2,[[["self"],["t"]]]],[11,"add_assign","","",3,[[["self"],["hwb"]]]],[11,"add_assign","","",3,[[["self"],["t"]]]],[11,"add_assign","","",4,[[["self"],["lab"]]]],[11,"add_assign","","",4,[[["self"],["t"]]]],[11,"add_assign","","",5,[[["self"],["lch"]]]],[11,"add_assign","","",5,[[["self"],["t"]]]],[11,"add_assign","palette::luma","",18,[[["self"],["luma"]]]],[11,"add_assign","","",18,[[["self"],["t"]]]],[11,"add_assign","palette::rgb","",20,[[["self"],["rgb"]]]],[11,"add_assign","","",20,[[["self"],["t"]]]],[11,"add_assign","palette","",7,[[["xyz"],["self"]]]],[11,"add_assign","","",7,[[["self"],["t"]]]],[11,"add_assign","","",8,[[["self"],["yxy"]]]],[11,"add_assign","","",8,[[["self"],["t"]]]],[11,"add_assign","","",25,[[["self"],["labhue"]]]],[11,"add_assign","","",25,[[["self"],["t"]]]],[11,"add_assign","","",26,[[["rgbhue"],["self"]]]],[11,"add_assign","","",26,[[["self"],["t"]]]],[11,"sub_assign","palette::blend","",11,[[["self"],["prealpha"]]]],[11,"sub_assign","","",11,[[["self"],["t"]]]],[11,"sub_assign","palette","",0,[[["self"],["alpha"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",1,[[["self"],["hsl"]]]],[11,"sub_assign","","",1,[[["self"],["t"]]]],[11,"sub_assign","","",2,[[["self"],["hsv"]]]],[11,"sub_assign","","",2,[[["self"],["t"]]]],[11,"sub_assign","","",3,[[["self"],["hwb"]]]],[11,"sub_assign","","",3,[[["self"],["t"]]]],[11,"sub_assign","","",4,[[["self"],["lab"]]]],[11,"sub_assign","","",4,[[["self"],["t"]]]],[11,"sub_assign","","",5,[[["self"],["lch"]]]],[11,"sub_assign","","",5,[[["self"],["t"]]]],[11,"sub_assign","palette::luma","",18,[[["self"],["luma"]]]],[11,"sub_assign","","",18,[[["self"],["t"]]]],[11,"sub_assign","palette::rgb","",20,[[["self"],["rgb"]]]],[11,"sub_assign","","",20,[[["self"],["t"]]]],[11,"sub_assign","palette","",7,[[["xyz"],["self"]]]],[11,"sub_assign","","",7,[[["self"],["t"]]]],[11,"sub_assign","","",8,[[["self"],["yxy"]]]],[11,"sub_assign","","",8,[[["self"],["t"]]]],[11,"sub_assign","","",25,[[["self"],["labhue"]]]],[11,"sub_assign","","",25,[[["self"],["t"]]]],[11,"sub_assign","","",26,[[["rgbhue"],["self"]]]],[11,"sub_assign","","",26,[[["self"],["t"]]]],[11,"mul_assign","palette::blend","",11,[[["self"],["prealpha"]]]],[11,"mul_assign","","",11,[[["self"],["t"]]]],[11,"mul_assign","palette","",0,[[["self"],["alpha"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",4,[[["self"],["lab"]]]],[11,"mul_assign","","",4,[[["self"],["t"]]]],[11,"mul_assign","palette::luma","",18,[[["self"],["luma"]]]],[11,"mul_assign","","",18,[[["self"],["t"]]]],[11,"mul_assign","palette::rgb","",20,[[["self"],["rgb"]]]],[11,"mul_assign","","",20,[[["self"],["t"]]]],[11,"mul_assign","palette","",7,[[["xyz"],["self"]]]],[11,"mul_assign","","",7,[[["self"],["t"]]]],[11,"mul_assign","","",8,[[["self"],["yxy"]]]],[11,"mul_assign","","",8,[[["self"],["t"]]]],[11,"div_assign","palette::blend","",11,[[["self"],["prealpha"]]]],[11,"div_assign","","",11,[[["self"],["t"]]]],[11,"div_assign","palette","",0,[[["self"],["alpha"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",4,[[["self"],["lab"]]]],[11,"div_assign","","",4,[[["self"],["t"]]]],[11,"div_assign","palette::luma","",18,[[["self"],["luma"]]]],[11,"div_assign","","",18,[[["self"],["t"]]]],[11,"div_assign","palette::rgb","",20,[[["self"],["rgb"]]]],[11,"div_assign","","",20,[[["self"],["t"]]]],[11,"div_assign","palette","",7,[[["xyz"],["self"]]]],[11,"div_assign","","",7,[[["self"],["t"]]]],[11,"div_assign","","",8,[[["self"],["yxy"]]]],[11,"div_assign","","",8,[[["self"],["t"]]]],[11,"from_str","palette::rgb","",20,[[["str"]],["result"]]],[11,"fmt","palette","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::luma","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::rgb","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::luma","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","palette::rgb","",20,[[["formatter"],["self"]],["result"]]],[11,"description","palette::convert","",38,[[["self"]],["str"]]],[11,"default_epsilon","palette::blend","",11,[[]]],[11,"abs_diff_eq","","",11,[[["self"],["prealpha"]],["bool"]]],[11,"default_epsilon","palette::gradient","",61,[[]]],[11,"abs_diff_eq","","",61,[[["self"]],["bool"]]],[11,"default_epsilon","palette","",0,[[]]],[11,"abs_diff_eq","","",0,[[["self"]],["bool"]]],[11,"default_epsilon","","",1,[[]]],[11,"abs_diff_eq","","",1,[[["self"]],["bool"]]],[11,"default_epsilon","","",2,[[]]],[11,"abs_diff_eq","","",2,[[["self"]],["bool"]]],[11,"default_epsilon","","",3,[[]]],[11,"abs_diff_eq","","",3,[[["self"]],["bool"]]],[11,"default_epsilon","palette::luma","",18,[[]]],[11,"abs_diff_eq","","",18,[[["self"]],["bool"]]],[11,"default_epsilon","palette::rgb","",20,[[]]],[11,"abs_diff_eq","","",20,[[["self"]],["bool"]]],[11,"default_epsilon","palette","",7,[[]]],[11,"abs_diff_eq","","",7,[[["self"]],["bool"]]],[11,"abs_diff_ne","","",7,[[["self"]],["bool"]]],[11,"default_epsilon","","",8,[[]]],[11,"abs_diff_eq","","",8,[[["self"]],["bool"]]],[11,"abs_diff_ne","","",8,[[["self"]],["bool"]]],[11,"default_epsilon","","",4,[[]]],[11,"abs_diff_eq","","",4,[[["self"]],["bool"]]],[11,"abs_diff_ne","","",4,[[["self"]],["bool"]]],[11,"default_epsilon","","",5,[[]]],[11,"abs_diff_eq","","",5,[[["self"]],["bool"]]],[11,"abs_diff_ne","","",5,[[["self"]],["bool"]]],[11,"default_epsilon","","",25,[[]]],[11,"abs_diff_eq","","",25,[[["self"]],["bool"]]],[11,"abs_diff_ne","","",25,[[["self"]],["bool"]]],[11,"default_epsilon","","",26,[[]]],[11,"abs_diff_eq","","",26,[[["self"]],["bool"]]],[11,"abs_diff_ne","","",26,[[["self"]],["bool"]]],[11,"default_max_relative","palette::blend","",11,[[]]],[11,"relative_eq","","",11,[[["prealpha"],["self"]],["bool"]]],[11,"default_max_relative","palette::gradient","",61,[[]]],[11,"relative_eq","","",61,[[["range"],["self"]],["bool"]]],[11,"default_max_relative","palette","",0,[[]]],[11,"relative_eq","","",0,[[["alpha"],["self"]],["bool"]]],[11,"default_max_relative","","",1,[[]]],[11,"relative_eq","","",1,[[["self"]],["bool"]]],[11,"default_max_relative","","",2,[[]]],[11,"relative_eq","","",2,[[["self"]],["bool"]]],[11,"default_max_relative","","",3,[[]]],[11,"relative_eq","","",3,[[["self"]],["bool"]]],[11,"default_max_relative","palette::luma","",18,[[]]],[11,"relative_eq","","",18,[[["self"]],["bool"]]],[11,"default_max_relative","palette::rgb","",20,[[]]],[11,"relative_eq","","",20,[[["self"]],["bool"]]],[11,"default_max_relative","palette","",7,[[]]],[11,"relative_eq","","",7,[[["self"]],["bool"]]],[11,"relative_ne","","",7,[[["self"]],["bool"]]],[11,"default_max_relative","","",8,[[]]],[11,"relative_eq","","",8,[[["self"]],["bool"]]],[11,"relative_ne","","",8,[[["self"]],["bool"]]],[11,"default_max_relative","","",4,[[]]],[11,"relative_eq","","",4,[[["self"]],["bool"]]],[11,"relative_ne","","",4,[[["self"]],["bool"]]],[11,"default_max_relative","","",5,[[]]],[11,"relative_eq","","",5,[[["self"]],["bool"]]],[11,"relative_ne","","",5,[[["self"]],["bool"]]],[11,"default_max_relative","","",25,[[]]],[11,"relative_eq","","",25,[[["self"]],["bool"]]],[11,"relative_ne","","",25,[[["self"]],["bool"]]],[11,"default_max_relative","","",26,[[]]],[11,"relative_eq","","",26,[[["self"]],["bool"]]],[11,"relative_ne","","",26,[[["self"]],["bool"]]],[11,"default_max_ulps","palette::blend","",11,[[],["u32"]]],[11,"ulps_eq","","",11,[[["u32"],["prealpha"],["self"]],["bool"]]],[11,"default_max_ulps","palette::gradient","",61,[[],["u32"]]],[11,"ulps_eq","","",61,[[["range"],["u32"],["self"]],["bool"]]],[11,"default_max_ulps","palette","",0,[[],["u32"]]],[11,"ulps_eq","","",0,[[["u32"],["alpha"],["self"]],["bool"]]],[11,"default_max_ulps","","",1,[[],["u32"]]],[11,"ulps_eq","","",1,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",2,[[],["u32"]]],[11,"ulps_eq","","",2,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",3,[[],["u32"]]],[11,"ulps_eq","","",3,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","palette::luma","",18,[[],["u32"]]],[11,"ulps_eq","","",18,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","palette::rgb","",20,[[],["u32"]]],[11,"ulps_eq","","",20,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","palette","",7,[[],["u32"]]],[11,"ulps_eq","","",7,[[["u32"],["self"]],["bool"]]],[11,"ulps_ne","","",7,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",8,[[],["u32"]]],[11,"ulps_eq","","",8,[[["u32"],["self"]],["bool"]]],[11,"ulps_ne","","",8,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",4,[[],["u32"]]],[11,"ulps_eq","","",4,[[["u32"],["self"]],["bool"]]],[11,"ulps_ne","","",4,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",5,[[],["u32"]]],[11,"ulps_eq","","",5,[[["u32"],["self"]],["bool"]]],[11,"ulps_ne","","",5,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",25,[[],["u32"]]],[11,"ulps_eq","","",25,[[["u32"],["self"]],["bool"]]],[11,"ulps_ne","","",25,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",26,[[],["u32"]]],[11,"ulps_eq","","",26,[[["u32"],["self"]],["bool"]]],[11,"ulps_ne","","",26,[[["u32"],["self"]],["bool"]]],[11,"blend","palette::blend","Blend self, as the source color, with `destination`, using…",14,[[["f"]],["self"]]],[11,"over","","Place `self` over `other`. This is the good old common…",14,[[],["self"]]],[11,"inside","","Results in the parts of `self` that overlaps the visible…",14,[[],["self"]]],[11,"outside","","Results in the parts of `self` that lies outside the…",14,[[],["self"]]],[11,"atop","","Place `self` over only the visible parts of `other`.",14,[[],["self"]]],[11,"xor","","Results in either `self` or `other`, where they do not…",14,[[],["self"]]],[11,"plus","","Add `self` and `other`. This uses the alpha component to…",14,[[],["self"]]],[11,"multiply","","Multiply `self` with `other`. This uses the alpha…",14,[[],["self"]]],[11,"screen","","Make a color which is at least as light as `self` or…",14,[[],["self"]]],[11,"overlay","","Multiply `self` or `other` if other is dark, or screen…",14,[[],["self"]]],[11,"darken","","Return the darkest parts of `self` and `other`.",14,[[],["self"]]],[11,"lighten","","Return the lightest parts of `self` and `other`.",14,[[],["self"]]],[11,"dodge","","Lighten `other` to reflect `self`. Results in `other` if…",14,[[],["self"]]],[11,"burn","","Darken `other` to reflect `self`. Results in `other` if…",14,[[],["self"]]],[11,"hard_light","","Multiply `self` or `other` if other is dark, or screen…",14,[[],["self"]]],[11,"soft_light","","Lighten `other` if `self` is light, or darken `other` as…",14,[[],["self"]]],[11,"difference","","Return the absolute difference between `self` and `other`.…",14,[[],["self"]]],[11,"exclusion","","Similar to `difference`, but appears to result in a lower…",14,[[],["self"]]],[11,"opaque","palette","Transforms the color into a fully opaque color with a…",46,[[]]],[11,"transparent","","Transforms the color into a fully transparent color. If…",46,[[]]],[11,"into_u32","palette::rgb","Convert to a packed `u32` with with specifiable component…",87,[[],["u32"]]],[11,"from_u32","","Convert from a packed `u32` with specifiable component…",87,[[["u32"]],["self"]]],[18,"CHANNELS","palette::encoding::pixel","The guaranteed number of channels in the sequence.",40,null],[11,"has_min_contrast_text","palette","Verify the contrast between two colors satisfies SC 1.4.3.…",51,[[["self"]],["bool"]]],[11,"has_min_contrast_large_text","","Verify the contrast between two colors satisfies SC 1.4.3…",51,[[["self"]],["bool"]]],[11,"has_enhanced_contrast_text","","Verify the contrast between two colors satisfies SC 1.4.6.…",51,[[["self"]],["bool"]]],[11,"has_enhanced_contrast_large_text","","Verify the contrast between two colors satisfies SC 1.4.6…",51,[[["self"]],["bool"]]],[11,"has_min_contrast_graphics","","Verify the contrast between two colors satisfies SC 1.4.11…",51,[[["self"]],["bool"]]]],"p":[[3,"Alpha"],[3,"Hsl"],[3,"Hsv"],[3,"Hwb"],[3,"Lab"],[3,"Lch"],[3,"Packed"],[3,"Xyz"],[3,"Yxy"],[3,"Equations"],[3,"Parameters"],[3,"PreAlpha"],[4,"Equation"],[4,"Parameter"],[8,"Blend"],[8,"BlendFunction"],[3,"Gradient"],[3,"Slice"],[3,"Luma"],[8,"LumaStandard"],[3,"Rgb"],[8,"RgbChannels"],[8,"RgbStandard"],[8,"RgbSpace"],[8,"Primaries"],[3,"LabHue"],[3,"RgbHue"],[3,"ConeResponseMatrices"],[4,"Method"],[8,"TransformMatrix"],[8,"AdaptFrom"],[8,"AdaptInto"],[8,"IntoColor"],[8,"IntoColorUnclamped"],[8,"TryIntoColor"],[8,"FromColor"],[8,"FromColorUnclamped"],[8,"TryFromColor"],[3,"OutOfBounds"],[8,"Number"],[8,"RawPixelSized"],[8,"RawPixel"],[8,"Pixel"],[8,"TransferFn"],[8,"WhitePoint"],[8,"Float"],[8,"WithAlpha"],[8,"ColorDifference"],[8,"Component"],[8,"FromComponent"],[8,"IntoComponent"],[8,"RelativeContrast"],[8,"Limited"],[8,"Mix"],[8,"Shade"],[8,"GetHue"],[8,"Hue"],[8,"Saturate"],[8,"ComponentWise"],[8,"FromF64"],[3,"Take"],[3,"Range"],[3,"Abgr"],[3,"Argb"],[3,"Bgra"],[3,"Rgba"],[3,"Gamma"],[3,"GammaFn"],[3,"F2p2"],[3,"Linear"],[3,"LinearFn"],[3,"Srgb"],[3,"A"],[3,"B"],[3,"C"],[3,"D50"],[3,"D55"],[3,"D65"],[3,"D75"],[3,"E"],[3,"F2"],[3,"F7"],[3,"F11"],[3,"D50Degree10"],[3,"D55Degree10"],[3,"D65Degree10"],[3,"D75Degree10"],[6,"Rgba"],[6,"Srgb"],[6,"LinSrgb"],[6,"Srgba"],[6,"LinSrgba"]]};
searchIndex["palette_derive"] = {"doc":"Derives traits from the palette crate.","i":[[24,"WithAlpha","palette_derive","",null,null],[24,"FromColorUnclamped","","",null,null],[24,"Pixel","","",null,null]],"p":[]};
searchIndex["phf"] = {"doc":"Compile-time generated maps and sets.","i":[[8,"PhfHash","phf","A trait implemented by types which can be used in PHF data…",null,null],[10,"phf_hash","","Feeds the value into the state given, updating the hasher…",0,[[["self"],["h"]]]],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,[[["h"]]]],[3,"Map","","An immutable map constructed at compile time.",null,null],[3,"Set","","An immutable set constructed at compile time.",null,null],[0,"map","","An immutable map constructed at compile time.",null,null],[3,"Map","phf::map","An immutable map constructed at compile time.",null,null],[3,"Entries","","An iterator over the key/value pairs in a `Map`.",null,null],[3,"Keys","","An iterator over the keys in a `Map`.",null,null],[3,"Values","","An iterator over the values in a `Map`.",null,null],[11,"is_empty","","Returns true if the `Map` is empty.",1,[[["self"]],["bool"]]],[11,"len","","Returns the number of entries in the `Map`.",1,[[["self"]],["usize"]]],[11,"contains_key","","Determines if `key` is in the `Map`.",1,[[["t"],["self"]],["bool"]]],[11,"get","","Returns a reference to the value that `key` maps to.",1,[[["t"],["self"]],[["option"],["v"]]]],[11,"get_key","","Returns a reference to the map's internal static instance…",1,[[["t"],["self"]],[["option"],["k"]]]],[11,"get_entry","","Like `get`, but returns both the key and the value.",1,[[["t"],["self"]],["option"]]],[11,"entries","","Returns an iterator over the key/value pairs in the map.",1,[[["self"]],["entries"]]],[11,"keys","","Returns an iterator over the keys in the map.",1,[[["self"]],["keys"]]],[11,"values","","Returns an iterator over the values in the map.",1,[[["self"]],["values"]]],[0,"set","phf","An immutable set constructed at compile time.",null,null],[3,"Set","phf::set","An immutable set constructed at compile time.",null,null],[3,"Iter","","An iterator over the values in a `Set`.",null,null],[11,"len","","Returns the number of elements in the `Set`.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Set` contains no elements.",2,[[["self"]],["bool"]]],[11,"get_key","","Returns a reference to the set's internal static instance…",2,[[["self"],["u"]],[["t"],["option"]]]],[11,"contains","","Returns true if `value` is in the `Set`.",2,[[["self"],["u"]],["bool"]]],[11,"iter","","Returns an iterator over the values in the set.",2,[[["self"]],["iter"]]],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",2,[[["set"],["self"]],["bool"]]],[11,"is_subset","","Returns true if `other` contains all values in `self`.",2,[[["set"],["self"]],["bool"]]],[11,"is_superset","","Returns true if `self` contains all values in `other`.",2,[[["set"],["self"]],["bool"]]],[11,"from","phf::map","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","phf::set","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","phf::map","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","phf::set","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"next_back","phf::map","",3,[[["self"]],["option"]]],[11,"next_back","","",4,[[["self"]],[["option"],["k"]]]],[11,"next_back","","",5,[[["self"]],[["option"],["v"]]]],[11,"next_back","phf::set","",6,[[["self"]],[["option"],["t"]]]],[11,"next","phf::map","",3,[[["self"]],["option"]]],[11,"size_hint","","",3,[[["self"]]]],[11,"next","","",4,[[["self"]],[["option"],["k"]]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],[["option"],["v"]]]],[11,"size_hint","","",5,[[["self"]]]],[11,"next","phf::set","",6,[[["self"]],[["option"],["t"]]]],[11,"size_hint","","",6,[[["self"]]]],[11,"fmt","phf::map","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","phf::set","",2,[[["formatter"],["self"]],["result"]]],[11,"index","phf::map","",1,[[["self"],["t"]],["v"]]]],"p":[[8,"PhfHash"],[3,"Map"],[3,"Set"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"Iter"]]};
searchIndex["phf_shared"] = {"doc":"","i":[[3,"Hashes","phf_shared","",null,null],[12,"g","","",0,null],[12,"f1","","",0,null],[12,"f2","","",0,null],[5,"displace","","",null,[[["u32"]],["u32"]]],[5,"hash","","`key` is from `phf_generator::HashState`.",null,[[["t"],["hashkey"]],["hashes"]]],[5,"get_index","","Return an index into `phf_generator::HashState::map`.",null,[[["hashes"],["usize"]],["u32"]]],[6,"HashKey","","A central typedef for hash keys",null,null],[8,"PhfHash","","A trait implemented by types which can be used in PHF data…",null,null],[10,"phf_hash","","Feeds the value into the state given, updating the hasher…",1,[[["self"],["h"]]]],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",1,[[["h"]]]],[8,"FmtConst","","Trait for printing types with `const` constructors, used…",null,null],[10,"fmt_const","","Print a `const` expression representing this value.",2,[[["formatter"],["self"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]]],"p":[[3,"Hashes"],[8,"PhfHash"],[8,"FmtConst"]]};
searchIndex["proc_macro2"] = {"doc":"A wrapper around the procedural macro API of the…","i":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"Span","","A region of source code, along with macro expansion…",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",0,null],[13,"Ident","","An identifier.",0,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,null],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",1,null],[13,"Brace","","`{ ... }`",1,null],[13,"Bracket","","`[ ... ]`",1,null],[13,"None","","`Ø ... Ø`",1,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'` is `Joint` in `'#`.",2,null],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",null,null],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"join","","Create a new span encompassing `self` and `other`.",4,[[["self"],["span"]],[["option",["span"]],["span"]]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["delimiter"],["tokenstream"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"span_open","","Returns the span pointing to the opening delimiter of this…",5,[[["self"]],["span"]]],[11,"span_close","","Returns the span pointing to the closing delimiter of this…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["char"],["spacing"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["self"],["span"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u128"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i128"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u128"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i128"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"string","","String literal.",8,[[["str"]],["literal"]]],[11,"character","","Character literal.",8,[[["char"]],["literal"]]],[11,"byte_string","","Byte string literal.",8,[[],["literal"]]],[11,"span","","Returns the span encompassing this literal.",8,[[["self"]],["span"]]],[11,"set_span","","Configures the span associated for this literal.",8,[[["self"],["span"]]]],[11,"subspan","","Returns a `Span` that is a subset of `self.span()`…",8,[[["rangebounds",["usize"]],["self"],["usize"]],[["option",["span"]],["span"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","proc_macro2::token_stream","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","proc_macro2","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",3,[[["tokentree"]],["self"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"extend","","",3,[[["intoiterator"],["self"]]]],[11,"into_iter","","",3,[[],["intoiter"]]],[11,"next","proc_macro2::token_stream","",10,[[["self"]],[["option",["tokentree"]],["tokentree"]]]],[11,"clone","proc_macro2","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"clone","proc_macro2::token_stream","",10,[[["self"]],["intoiter"]]],[11,"default","proc_macro2","",3,[[],["self"]]],[11,"cmp","","",7,[[["self"],["ident"]],["ordering"]]],[11,"eq","","",1,[[["delimiter"],["self"]],["bool"]]],[11,"eq","","",2,[[["spacing"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["ident"]],["bool"]]],[11,"eq","","",7,[[["t"],["self"]],["bool"]]],[11,"partial_cmp","","",7,[[["self"],["ident"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_str","","",3,[[["str"]],[["tokenstream"],["lexerror"],["result",["tokenstream","lexerror"]]]]]],"p":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["quote"] = {"doc":"This crate provides the [`quote!`] macro for turning Rust…","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[["u"],["self"]]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[["self"],["i"]]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[8,"IdentFragment","","Specialized formatting trait used by `format_ident!`.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter"],["self"]],["result"]]],[11,"span","","Span associated with this `IdentFragment`.",1,[[["self"]],[["option",["span"]],["span"]]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",2,[[["tokenstream"],["self"]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[["self"]],["tokenstream"]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream"]]],[14,"format_ident","","Formatting macro for constructing `Ident`s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"span","","Span associated with this `IdentFragment`.",1,[[["self"]],[["option",["span"]],["span"]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[["self"]],["tokenstream"]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream"]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]};
searchIndex["serde"] = {"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",0,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,null],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,null],[13,"Char","","The input contained a `char` that was not expected.",0,null],[13,"Str","","The input contained a `&str` or `String` that was not…",0,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,null],[13,"Unit","","The input contained a unit `()` that was not expected.",0,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,null],[13,"Seq","","The input contained a sequence that was not expected.",0,null],[13,"Map","","The input contained a map that was not expected.",0,null],[13,"Enum","","The input contained an enum that was not expected.",0,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,null],[13,"Other","","A message stating what uncategorized thing the input…",0,null],[0,"value","","Building blocks for deserializing basic values using the…",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"I128Deserializer","","A deserializer holding an `i128`.",null,null],[3,"U128Deserializer","","A deserializer holding a `u128`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer"]]],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",3,[[],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",5,[[],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",null,null],[10,"custom","","Raised when there is general error when deserializing a…",7,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["expected"],["unexpected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["expected"],["unexpected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,[[["str"]],["self"]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,[[["str"]],["self"]]],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a…",null,null],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["formatter"],["self"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",null,null],[16,"Value","","The type produced by using this seed.",10,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a…",null,null],[16,"Value","","The value produced by this visitor.",12,null],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",12,[[["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",12,[[["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",12,[[["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",12,[[["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",12,[[["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",12,[[["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",12,[[["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",12,[[["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",12,[[["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",12,[[["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",12,[[["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",12,[[["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",12,[[["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",12,[[["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,[[],["result"]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,[[],["result"]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["vec",["u8"]],["u8"]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[],["result"]]],[11,"visit_some","","The input contains an optional that is present.",12,[[["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",12,[[["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",12,[[["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",13,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"]],[["result",["option"]],["option"]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[["self"]],[["usize"],["option",["usize"]]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",14,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"],["k"]],[["result",["option"]],["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"],["k"],["v"]],[["result",["option"]],["option"]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"]],[["result",["option"]],["option"]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"]],[["option"],["result",["option"]]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[["self"]],[["usize"],["option",["usize"]]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",15,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,null],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",16,null],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,[[["v"]],["result"]]],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",17,null],[10,"into_deserializer","","Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",null,null],[8,"Error","","Trait used by `Serialize` implementations to generically…",null,null],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",18,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,null],[10,"serialize_element","","Serialize a sequence element.",21,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",21,[[],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,null],[10,"serialize_element","","Serialize a tuple element.",22,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",22,[[],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,null],[10,"serialize_field","","Serialize a tuple struct field.",23,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",23,[[],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,null],[10,"serialize_field","","Serialize a tuple variant field.",24,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",24,[[],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,null],[10,"serialize_key","","Serialize a map key.",25,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",25,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[["k"],["self"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",25,[[],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,null],[10,"serialize_field","","Serialize a struct field.",26,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",26,[[],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,null],[10,"serialize_field","","Serialize a struct variant field.",27,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",27,[[],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",null,null],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde::de::value","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde::ser","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"deserialize","serde::de","",28,[[["d"]],[["result",["ignoredany"]],["ignoredany"]]]],[11,"deserialize_bool","serde::de::value","",30,[[["v"]],["result"]]],[11,"deserialize_i8","","",30,[[["v"]],["result"]]],[11,"deserialize_i16","","",30,[[["v"]],["result"]]],[11,"deserialize_i32","","",30,[[["v"]],["result"]]],[11,"deserialize_i64","","",30,[[["v"]],["result"]]],[11,"deserialize_i128","","",30,[[["v"]],["result"]]],[11,"deserialize_u8","","",30,[[["v"]],["result"]]],[11,"deserialize_u16","","",30,[[["v"]],["result"]]],[11,"deserialize_u32","","",30,[[["v"]],["result"]]],[11,"deserialize_u64","","",30,[[["v"]],["result"]]],[11,"deserialize_u128","","",30,[[["v"]],["result"]]],[11,"deserialize_f32","","",30,[[["v"]],["result"]]],[11,"deserialize_f64","","",30,[[["v"]],["result"]]],[11,"deserialize_char","","",30,[[["v"]],["result"]]],[11,"deserialize_str","","",30,[[["v"]],["result"]]],[11,"deserialize_string","","",30,[[["v"]],["result"]]],[11,"deserialize_bytes","","",30,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",30,[[["v"]],["result"]]],[11,"deserialize_unit","","",30,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",30,[[["v"]],["result"]]],[11,"deserialize_tuple","","",30,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",30,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",30,[[["v"]],["result"]]],[11,"deserialize_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",30,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",30,[[["v"]],["result"]]],[11,"deserialize_any","","",30,[[["v"]],["result"]]],[11,"deserialize_option","","",30,[[["v"]],["result"]]],[11,"deserialize_bool","","",31,[[["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["v"]],["result"]]],[11,"deserialize_i128","","",31,[[["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["v"]],["result"]]],[11,"deserialize_u128","","",31,[[["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["v"]],["result"]]],[11,"deserialize_char","","",31,[[["v"]],["result"]]],[11,"deserialize_str","","",31,[[["v"]],["result"]]],[11,"deserialize_string","","",31,[[["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["v"]],["result"]]],[11,"deserialize_option","","",31,[[["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["v"]],["result"]]],[11,"deserialize_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",31,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["v"]],["result"]]],[11,"deserialize_any","","",31,[[["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["v"]],["result"]]],[11,"deserialize_i128","","",32,[[["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["v"]],["result"]]],[11,"deserialize_u128","","",32,[[["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["v"]],["result"]]],[11,"deserialize_char","","",32,[[["v"]],["result"]]],[11,"deserialize_str","","",32,[[["v"]],["result"]]],[11,"deserialize_string","","",32,[[["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["v"]],["result"]]],[11,"deserialize_option","","",32,[[["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["v"]],["result"]]],[11,"deserialize_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",32,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["v"]],["result"]]],[11,"deserialize_any","","",32,[[["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["v"]],["result"]]],[11,"deserialize_i128","","",33,[[["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["v"]],["result"]]],[11,"deserialize_u128","","",33,[[["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["v"]],["result"]]],[11,"deserialize_char","","",33,[[["v"]],["result"]]],[11,"deserialize_str","","",33,[[["v"]],["result"]]],[11,"deserialize_string","","",33,[[["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["v"]],["result"]]],[11,"deserialize_option","","",33,[[["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["v"]],["result"]]],[11,"deserialize_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",33,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["v"]],["result"]]],[11,"deserialize_any","","",33,[[["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["v"]],["result"]]],[11,"deserialize_i128","","",34,[[["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["v"]],["result"]]],[11,"deserialize_u128","","",34,[[["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["v"]],["result"]]],[11,"deserialize_char","","",34,[[["v"]],["result"]]],[11,"deserialize_str","","",34,[[["v"]],["result"]]],[11,"deserialize_string","","",34,[[["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["v"]],["result"]]],[11,"deserialize_option","","",34,[[["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["v"]],["result"]]],[11,"deserialize_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",34,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["v"]],["result"]]],[11,"deserialize_any","","",34,[[["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["v"]],["result"]]],[11,"deserialize_i128","","",35,[[["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["v"]],["result"]]],[11,"deserialize_u128","","",35,[[["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["v"]],["result"]]],[11,"deserialize_char","","",35,[[["v"]],["result"]]],[11,"deserialize_str","","",35,[[["v"]],["result"]]],[11,"deserialize_string","","",35,[[["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["v"]],["result"]]],[11,"deserialize_option","","",35,[[["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["v"]],["result"]]],[11,"deserialize_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",35,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["v"]],["result"]]],[11,"deserialize_any","","",35,[[["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["v"]],["result"]]],[11,"deserialize_i128","","",36,[[["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["v"]],["result"]]],[11,"deserialize_u128","","",36,[[["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["v"]],["result"]]],[11,"deserialize_char","","",36,[[["v"]],["result"]]],[11,"deserialize_str","","",36,[[["v"]],["result"]]],[11,"deserialize_string","","",36,[[["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["v"]],["result"]]],[11,"deserialize_option","","",36,[[["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["v"]],["result"]]],[11,"deserialize_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",36,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["v"]],["result"]]],[11,"deserialize_any","","",36,[[["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["v"]],["result"]]],[11,"deserialize_i128","","",37,[[["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["v"]],["result"]]],[11,"deserialize_u128","","",37,[[["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["v"]],["result"]]],[11,"deserialize_char","","",37,[[["v"]],["result"]]],[11,"deserialize_str","","",37,[[["v"]],["result"]]],[11,"deserialize_string","","",37,[[["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["v"]],["result"]]],[11,"deserialize_option","","",37,[[["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["v"]],["result"]]],[11,"deserialize_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",37,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["v"]],["result"]]],[11,"deserialize_any","","",37,[[["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["v"]],["result"]]],[11,"deserialize_i128","","",38,[[["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["v"]],["result"]]],[11,"deserialize_u128","","",38,[[["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["v"]],["result"]]],[11,"deserialize_char","","",38,[[["v"]],["result"]]],[11,"deserialize_str","","",38,[[["v"]],["result"]]],[11,"deserialize_string","","",38,[[["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["v"]],["result"]]],[11,"deserialize_option","","",38,[[["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["v"]],["result"]]],[11,"deserialize_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",38,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["v"]],["result"]]],[11,"deserialize_any","","",38,[[["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["v"]],["result"]]],[11,"deserialize_i128","","",39,[[["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["v"]],["result"]]],[11,"deserialize_u128","","",39,[[["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["v"]],["result"]]],[11,"deserialize_char","","",39,[[["v"]],["result"]]],[11,"deserialize_str","","",39,[[["v"]],["result"]]],[11,"deserialize_string","","",39,[[["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["v"]],["result"]]],[11,"deserialize_option","","",39,[[["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["v"]],["result"]]],[11,"deserialize_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",39,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["v"]],["result"]]],[11,"deserialize_any","","",39,[[["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["v"]],["result"]]],[11,"deserialize_i128","","",40,[[["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["v"]],["result"]]],[11,"deserialize_u128","","",40,[[["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["v"]],["result"]]],[11,"deserialize_char","","",40,[[["v"]],["result"]]],[11,"deserialize_str","","",40,[[["v"]],["result"]]],[11,"deserialize_string","","",40,[[["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["v"]],["result"]]],[11,"deserialize_option","","",40,[[["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["v"]],["result"]]],[11,"deserialize_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",40,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["v"]],["result"]]],[11,"deserialize_any","","",40,[[["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["v"]],["result"]]],[11,"deserialize_i128","","",41,[[["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["v"]],["result"]]],[11,"deserialize_u128","","",41,[[["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["v"]],["result"]]],[11,"deserialize_char","","",41,[[["v"]],["result"]]],[11,"deserialize_str","","",41,[[["v"]],["result"]]],[11,"deserialize_string","","",41,[[["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["v"]],["result"]]],[11,"deserialize_option","","",41,[[["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["v"]],["result"]]],[11,"deserialize_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",41,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["v"]],["result"]]],[11,"deserialize_any","","",41,[[["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["v"]],["result"]]],[11,"deserialize_i128","","",42,[[["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["v"]],["result"]]],[11,"deserialize_u128","","",42,[[["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["v"]],["result"]]],[11,"deserialize_char","","",42,[[["v"]],["result"]]],[11,"deserialize_str","","",42,[[["v"]],["result"]]],[11,"deserialize_string","","",42,[[["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["v"]],["result"]]],[11,"deserialize_option","","",42,[[["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["v"]],["result"]]],[11,"deserialize_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",42,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["v"]],["result"]]],[11,"deserialize_any","","",42,[[["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["v"]],["result"]]],[11,"deserialize_i128","","",43,[[["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["v"]],["result"]]],[11,"deserialize_u128","","",43,[[["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["v"]],["result"]]],[11,"deserialize_char","","",43,[[["v"]],["result"]]],[11,"deserialize_str","","",43,[[["v"]],["result"]]],[11,"deserialize_string","","",43,[[["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["v"]],["result"]]],[11,"deserialize_option","","",43,[[["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["v"]],["result"]]],[11,"deserialize_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",43,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["v"]],["result"]]],[11,"deserialize_any","","",43,[[["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["v"]],["result"]]],[11,"deserialize_i128","","",44,[[["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["v"]],["result"]]],[11,"deserialize_u128","","",44,[[["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["v"]],["result"]]],[11,"deserialize_char","","",44,[[["v"]],["result"]]],[11,"deserialize_str","","",44,[[["v"]],["result"]]],[11,"deserialize_string","","",44,[[["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["v"]],["result"]]],[11,"deserialize_option","","",44,[[["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["v"]],["result"]]],[11,"deserialize_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",44,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["v"]],["result"]]],[11,"deserialize_any","","",44,[[["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["v"]],["result"]]],[11,"deserialize_i128","","",45,[[["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["v"]],["result"]]],[11,"deserialize_u128","","",45,[[["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["v"]],["result"]]],[11,"deserialize_char","","",45,[[["v"]],["result"]]],[11,"deserialize_str","","",45,[[["v"]],["result"]]],[11,"deserialize_string","","",45,[[["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["v"]],["result"]]],[11,"deserialize_option","","",45,[[["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["v"]],["result"]]],[11,"deserialize_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",45,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["v"]],["result"]]],[11,"deserialize_any","","",45,[[["v"]],["result"]]],[11,"deserialize_bool","","",46,[[["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["v"]],["result"]]],[11,"deserialize_i128","","",46,[[["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["v"]],["result"]]],[11,"deserialize_u128","","",46,[[["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["v"]],["result"]]],[11,"deserialize_char","","",46,[[["v"]],["result"]]],[11,"deserialize_str","","",46,[[["v"]],["result"]]],[11,"deserialize_string","","",46,[[["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["v"]],["result"]]],[11,"deserialize_option","","",46,[[["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["v"]],["result"]]],[11,"deserialize_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",46,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["v"]],["result"]]],[11,"deserialize_any","","",46,[[["v"]],["result"]]],[11,"deserialize_enum","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",47,[[["v"]],["result"]]],[11,"deserialize_enum","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",47,[[["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["v"]],["result"]]],[11,"deserialize_i128","","",47,[[["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["v"]],["result"]]],[11,"deserialize_u128","","",47,[[["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["v"]],["result"]]],[11,"deserialize_char","","",47,[[["v"]],["result"]]],[11,"deserialize_str","","",47,[[["v"]],["result"]]],[11,"deserialize_string","","",47,[[["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["v"]],["result"]]],[11,"deserialize_option","","",47,[[["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["v"]],["result"]]],[11,"deserialize_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",47,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["v"]],["result"]]],[11,"deserialize_any","","",1,[[["v"]],["result"]]],[11,"deserialize_enum","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",1,[[["v"]],["result"]]],[11,"deserialize_i8","","",1,[[["v"]],["result"]]],[11,"deserialize_i16","","",1,[[["v"]],["result"]]],[11,"deserialize_i32","","",1,[[["v"]],["result"]]],[11,"deserialize_i64","","",1,[[["v"]],["result"]]],[11,"deserialize_i128","","",1,[[["v"]],["result"]]],[11,"deserialize_u8","","",1,[[["v"]],["result"]]],[11,"deserialize_u16","","",1,[[["v"]],["result"]]],[11,"deserialize_u32","","",1,[[["v"]],["result"]]],[11,"deserialize_u64","","",1,[[["v"]],["result"]]],[11,"deserialize_u128","","",1,[[["v"]],["result"]]],[11,"deserialize_f32","","",1,[[["v"]],["result"]]],[11,"deserialize_f64","","",1,[[["v"]],["result"]]],[11,"deserialize_char","","",1,[[["v"]],["result"]]],[11,"deserialize_str","","",1,[[["v"]],["result"]]],[11,"deserialize_string","","",1,[[["v"]],["result"]]],[11,"deserialize_bytes","","",1,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",1,[[["v"]],["result"]]],[11,"deserialize_option","","",1,[[["v"]],["result"]]],[11,"deserialize_unit","","",1,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",1,[[["v"]],["result"]]],[11,"deserialize_tuple","","",1,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",1,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",1,[[["v"]],["result"]]],[11,"deserialize_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",1,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",1,[[["v"]],["result"]]],[11,"deserialize_any","","",48,[[["v"]],["result"]]],[11,"deserialize_enum","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",48,[[["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["v"]],["result"]]],[11,"deserialize_i128","","",48,[[["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["v"]],["result"]]],[11,"deserialize_u128","","",48,[[["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["v"]],["result"]]],[11,"deserialize_char","","",48,[[["v"]],["result"]]],[11,"deserialize_str","","",48,[[["v"]],["result"]]],[11,"deserialize_string","","",48,[[["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["v"]],["result"]]],[11,"deserialize_option","","",48,[[["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["v"]],["result"]]],[11,"deserialize_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",48,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["v"]],["result"]]],[11,"deserialize_any","","",49,[[["v"]],["result"]]],[11,"deserialize_enum","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",49,[[["v"]],["result"]]],[11,"deserialize_i8","","",49,[[["v"]],["result"]]],[11,"deserialize_i16","","",49,[[["v"]],["result"]]],[11,"deserialize_i32","","",49,[[["v"]],["result"]]],[11,"deserialize_i64","","",49,[[["v"]],["result"]]],[11,"deserialize_i128","","",49,[[["v"]],["result"]]],[11,"deserialize_u8","","",49,[[["v"]],["result"]]],[11,"deserialize_u16","","",49,[[["v"]],["result"]]],[11,"deserialize_u32","","",49,[[["v"]],["result"]]],[11,"deserialize_u64","","",49,[[["v"]],["result"]]],[11,"deserialize_u128","","",49,[[["v"]],["result"]]],[11,"deserialize_f32","","",49,[[["v"]],["result"]]],[11,"deserialize_f64","","",49,[[["v"]],["result"]]],[11,"deserialize_char","","",49,[[["v"]],["result"]]],[11,"deserialize_str","","",49,[[["v"]],["result"]]],[11,"deserialize_string","","",49,[[["v"]],["result"]]],[11,"deserialize_bytes","","",49,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",49,[[["v"]],["result"]]],[11,"deserialize_option","","",49,[[["v"]],["result"]]],[11,"deserialize_unit","","",49,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",49,[[["v"]],["result"]]],[11,"deserialize_tuple","","",49,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",49,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",49,[[["v"]],["result"]]],[11,"deserialize_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",49,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",49,[[["v"]],["result"]]],[11,"deserialize_any","","",2,[[["v"]],["result"]]],[11,"deserialize_bool","","",2,[[["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["v"]],["result"]]],[11,"deserialize_char","","",2,[[["v"]],["result"]]],[11,"deserialize_str","","",2,[[["v"]],["result"]]],[11,"deserialize_string","","",2,[[["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["v"]],["result"]]],[11,"deserialize_option","","",2,[[["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["v"]],["result"]]],[11,"deserialize_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",2,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["v"]],["result"]]],[11,"deserialize_enum","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",3,[[["v"]],["result"]]],[11,"deserialize_bool","","",3,[[["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["v"]],["result"]]],[11,"deserialize_char","","",3,[[["v"]],["result"]]],[11,"deserialize_str","","",3,[[["v"]],["result"]]],[11,"deserialize_string","","",3,[[["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["v"]],["result"]]],[11,"deserialize_option","","",3,[[["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["v"]],["result"]]],[11,"deserialize_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",3,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["v"]],["result"]]],[11,"deserialize_any","","",4,[[["v"]],["result"]]],[11,"deserialize_bool","","",4,[[["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["v"]],["result"]]],[11,"deserialize_char","","",4,[[["v"]],["result"]]],[11,"deserialize_str","","",4,[[["v"]],["result"]]],[11,"deserialize_string","","",4,[[["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["v"]],["result"]]],[11,"deserialize_option","","",4,[[["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["v"]],["result"]]],[11,"deserialize_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",4,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["v"]],["result"]]],[11,"deserialize_any","","",5,[[["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",5,[[["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["v"]],["result"]]],[11,"deserialize_char","","",5,[[["v"]],["result"]]],[11,"deserialize_str","","",5,[[["v"]],["result"]]],[11,"deserialize_string","","",5,[[["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["v"]],["result"]]],[11,"deserialize_option","","",5,[[["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["v"]],["result"]]],[11,"deserialize_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",5,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["v"]],["result"]]],[11,"deserialize_any","","",6,[[["v"]],["result"]]],[11,"deserialize_enum","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",6,[[["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["v"]],["result"]]],[11,"deserialize_char","","",6,[[["v"]],["result"]]],[11,"deserialize_str","","",6,[[["v"]],["result"]]],[11,"deserialize_string","","",6,[[["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["v"]],["result"]]],[11,"deserialize_option","","",6,[[["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["v"]],["result"]]],[11,"deserialize_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",6,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["v"]],["result"]]],[11,"expecting","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","",28,[[["bool"]],["result"]]],[11,"visit_i64","","",28,[[["i64"]],["result"]]],[11,"visit_u64","","",28,[[["u64"]],["result"]]],[11,"visit_f64","","",28,[[["f64"]],["result"]]],[11,"visit_str","","",28,[[["str"]],["result"]]],[11,"visit_none","","",28,[[],["result"]]],[11,"visit_some","","",28,[[["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["d"]],["result"]]],[11,"visit_unit","","",28,[[],["result"]]],[11,"visit_seq","","",28,[[["a"]],["result"]]],[11,"visit_map","","",28,[[["a"]],["result"]]],[11,"visit_bytes","","",28,[[],["result"]]],[11,"visit_enum","","",28,[[["a"]],["result"]]],[11,"next_element_seed","serde::de::value","",3,[[["self"],["v"]],[["option"],["result",["option"]]]]],[11,"size_hint","","",3,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_element_seed","","",5,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"size_hint","","",5,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_key_seed","","",5,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"next_value_seed","","",5,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",5,[[["tv"],["self"],["tk"]],[["result",["option"]],["option"]]]],[11,"size_hint","","",5,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"variant_seed","","",46,[[["t"]],["result"]]],[11,"variant_seed","","",47,[[["t"]],["result"]]],[11,"variant_seed","","",1,[[["t"]],["result"]]],[11,"variant_seed","","",48,[[["t"]],["result"]]],[11,"variant_seed","","",49,[[["t"]],["result"]]],[11,"variant_seed","","",6,[[["t"]],["result"]]],[11,"serialize_element","serde::ser","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_element","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_key","","",50,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"custom","serde::de::value","",29,[[["t"]],["self"]]],[11,"custom","","",29,[[["t"]],["self"]]],[11,"clone","","",29,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["seqdeserializer"]]],[11,"clone","","",4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"default","","",28,[[],["ignoredany"]]],[11,"eq","serde::de::value","",29,[[["self"],["error"]],["bool"]]],[11,"ne","","",29,[[["self"],["error"]],["bool"]]],[11,"eq","serde::de","",0,[[["unexpected"],["self"]],["bool"]]],[11,"ne","","",0,[[["unexpected"],["self"]],["bool"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","serde::de","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"description","serde::de::value","",29,[[["self"]],["str"]]]],"p":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]};
searchIndex["siphasher"] = {"doc":"","i":[[0,"sip","siphasher","An implementation of SipHash.",null,null],[3,"SipHasher13","siphasher::sip","An implementation of SipHash 1-3.",null,null],[3,"SipHasher24","","An implementation of SipHash 2-4.",null,null],[3,"SipHasher","","An implementation of SipHash 2-4.",null,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to…",0,[[],["siphasher"]]],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",0,[[["u64"]],["siphasher"]]],[11,"keys","","Get the keys used by this hasher",0,[[["self"]]]],[11,"new","","Creates a new `SipHasher13` with the two initial keys set…",1,[[],["siphasher13"]]],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",1,[[["u64"]],["siphasher13"]]],[11,"keys","","Get the keys used by this hasher",1,[[["self"]]]],[11,"new","","Creates a new `SipHasher24` with the two initial keys set…",2,[[],["siphasher24"]]],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",2,[[["u64"]],["siphasher24"]]],[11,"keys","","Get the keys used by this hasher",2,[[["self"]]]],[0,"sip128","siphasher","An implementation of SipHash with a 128-bit output.",null,null],[3,"Hash128","siphasher::sip128","A 128-bit (2x64) hash output",null,null],[12,"h1","","",3,null],[12,"h2","","",3,null],[3,"SipHasher13","","An implementation of SipHash128 1-3.",null,null],[3,"SipHasher24","","An implementation of SipHash128 2-4.",null,null],[3,"SipHasher","","An implementation of SipHash128 2-4.",null,null],[8,"Hasher128","","",null,null],[10,"finish128","","Return a 128-bit hash",4,[[["self"]],["hash128"]]],[11,"new","","Creates a new `SipHasher` with the two initial keys set to…",5,[[],["siphasher"]]],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",5,[[["u64"]],["siphasher"]]],[11,"keys","","Get the keys used by this hasher",5,[[["self"]]]],[11,"new","","Creates a new `SipHasher13` with the two initial keys set…",6,[[],["siphasher13"]]],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",6,[[["u64"]],["siphasher13"]]],[11,"keys","","Get the keys used by this hasher",6,[[["self"]]]],[11,"new","","Creates a new `SipHasher24` with the two initial keys set…",7,[[],["siphasher24"]]],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",7,[[["u64"]],["siphasher24"]]],[11,"keys","","Get the keys used by this hasher",7,[[["self"]]]],[11,"as_bytes","","Convert into a 16-bytes vector",3,[[["self"]]]],[11,"as_u128","","Convert into a `u128`",3,[[["self"]],["u128"]]],[11,"as_u64","","Convert into `(u64, u64)`",3,[[["self"]]]],[11,"from","siphasher::sip","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","siphasher::sip128","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"finish128","","Return a 128-bit hash",5,[[["self"]],["hash128"]]],[11,"finish128","","Return a 128-bit hash",6,[[["self"]],["hash128"]]],[11,"finish128","","Return a 128-bit hash",7,[[["self"]],["hash128"]]],[11,"from","","",3,[[["u128"]],["self"]]],[11,"fmt","siphasher::sip","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","siphasher::sip128","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"write","siphasher::sip","",0,[[["self"]]]],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",1,[[["self"]]]],[11,"finish","","",1,[[["self"]],["u64"]]],[11,"write","","",2,[[["self"]]]],[11,"finish","","",2,[[["self"]],["u64"]]],[11,"write","siphasher::sip128","",5,[[["self"]]]],[11,"finish","","",5,[[["self"]],["u64"]]],[11,"write","","",6,[[["self"]]]],[11,"finish","","",6,[[["self"]],["u64"]]],[11,"write","","",7,[[["self"]]]],[11,"finish","","",7,[[["self"]],["u64"]]],[11,"into","","",3,[[],["u128"]]],[11,"clone","siphasher::sip","",1,[[["self"]],["siphasher13"]]],[11,"clone","","",2,[[["self"]],["siphasher24"]]],[11,"clone","","",0,[[["self"]],["siphasher"]]],[11,"clone","siphasher::sip128","",3,[[["self"]],["hash128"]]],[11,"clone","","",6,[[["self"]],["siphasher13"]]],[11,"clone","","",7,[[["self"]],["siphasher24"]]],[11,"clone","","",5,[[["self"]],["siphasher"]]],[11,"default","siphasher::sip","",1,[[],["siphasher13"]]],[11,"default","","",2,[[],["siphasher24"]]],[11,"default","","",0,[[],["siphasher"]]],[11,"default","siphasher::sip128","",3,[[],["hash128"]]],[11,"default","","",6,[[],["siphasher13"]]],[11,"default","","",7,[[],["siphasher24"]]],[11,"default","","",5,[[],["siphasher"]]]],"p":[[3,"SipHasher"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"Hash128"],[8,"Hasher128"],[3,"SipHasher"],[3,"SipHasher13"],[3,"SipHasher24"]]};
searchIndex["syn"] = {"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tokens","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"path","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"path","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true;…",null,null],[12,"attrs","","",10,null],[12,"pat","","",10,null],[12,"guard","","",10,null],[12,"fat_arrow_token","","",10,null],[12,"body","","",10,null],[12,"comma","","",10,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",11,null],[12,"member","","Name or index of the field.",11,null],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand…",11,null],[12,"expr","","Value of the field.",11,null],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",null,null],[12,"name","","",12,null],[12,"colon_token","","",12,null],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method…",null,null],[12,"colon2_token","","",13,null],[12,"lt_token","","",13,null],[12,"args","","",13,null],[12,"gt_token","","",13,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[12,"attrs","","",14,null],[12,"bracket_token","","",14,null],[12,"elems","","",14,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[12,"attrs","","",15,null],[12,"left","","",15,null],[12,"eq_token","","",15,null],[12,"right","","",15,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[12,"attrs","","",16,null],[12,"left","","",16,null],[12,"op","","",16,null],[12,"right","","",16,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[12,"attrs","","",17,null],[12,"async_token","","",17,null],[12,"capture","","",17,null],[12,"block","","",17,null],[3,"ExprAwait","","An await expression: `fut.await`.",null,null],[12,"attrs","","",18,null],[12,"base","","",18,null],[12,"dot_token","","",18,null],[12,"await_token","","",18,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",19,null],[12,"left","","",19,null],[12,"op","","",19,null],[12,"right","","",19,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[12,"attrs","","",20,null],[12,"label","","",20,null],[12,"block","","",20,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[12,"attrs","","",21,null],[12,"box_token","","",21,null],[12,"expr","","",21,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[12,"attrs","","",22,null],[12,"break_token","","",22,null],[12,"label","","",22,null],[12,"expr","","",22,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",23,null],[12,"func","","",23,null],[12,"paren_token","","",23,null],[12,"args","","",23,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",24,null],[12,"expr","","",24,null],[12,"as_token","","",24,null],[12,"ty","","",24,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[12,"attrs","","",25,null],[12,"asyncness","","",25,null],[12,"movability","","",25,null],[12,"capture","","",25,null],[12,"or1_token","","",25,null],[12,"inputs","","",25,null],[12,"or2_token","","",25,null],[12,"output","","",25,null],[12,"body","","",25,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[12,"attrs","","",26,null],[12,"continue_token","","",26,null],[12,"label","","",26,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",27,null],[12,"base","","",27,null],[12,"dot_token","","",27,null],[12,"member","","",27,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[12,"attrs","","",28,null],[12,"label","","",28,null],[12,"for_token","","",28,null],[12,"pat","","",28,null],[12,"in_token","","",28,null],[12,"expr","","",28,null],[12,"body","","",28,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",29,null],[12,"group_token","","",29,null],[12,"expr","","",29,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[12,"attrs","","",30,null],[12,"if_token","","",30,null],[12,"cond","","",30,null],[12,"then_branch","","",30,null],[12,"else_branch","","",30,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",31,null],[12,"expr","","",31,null],[12,"bracket_token","","",31,null],[12,"index","","",31,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[12,"attrs","","",32,null],[12,"let_token","","",32,null],[12,"pat","","",32,null],[12,"eq_token","","",32,null],[12,"expr","","",32,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",null,null],[12,"attrs","","",33,null],[12,"lit","","",33,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[12,"attrs","","",34,null],[12,"label","","",34,null],[12,"loop_token","","",34,null],[12,"body","","",34,null],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",null,null],[12,"attrs","","",35,null],[12,"mac","","",35,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[12,"attrs","","",36,null],[12,"match_token","","",36,null],[12,"expr","","",36,null],[12,"brace_token","","",36,null],[12,"arms","","",36,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[12,"attrs","","",37,null],[12,"receiver","","",37,null],[12,"dot_token","","",37,null],[12,"method","","",37,null],[12,"turbofish","","",37,null],[12,"paren_token","","",37,null],[12,"args","","",37,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",38,null],[12,"paren_token","","",38,null],[12,"expr","","",38,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",39,null],[12,"qself","","",39,null],[12,"path","","",39,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[12,"attrs","","",40,null],[12,"from","","",40,null],[12,"limits","","",40,null],[12,"to","","",40,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[12,"attrs","","",41,null],[12,"and_token","","",41,null],[12,"raw","","",41,null],[12,"mutability","","",41,null],[12,"expr","","",41,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[12,"attrs","","",42,null],[12,"bracket_token","","",42,null],[12,"expr","","",42,null],[12,"semi_token","","",42,null],[12,"len","","",42,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[12,"attrs","","",43,null],[12,"return_token","","",43,null],[12,"expr","","",43,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[12,"attrs","","",44,null],[12,"path","","",44,null],[12,"brace_token","","",44,null],[12,"fields","","",44,null],[12,"dot2_token","","",44,null],[12,"rest","","",44,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[12,"attrs","","",45,null],[12,"expr","","",45,null],[12,"question_token","","",45,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[12,"attrs","","",46,null],[12,"try_token","","",46,null],[12,"block","","",46,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[12,"attrs","","",47,null],[12,"paren_token","","",47,null],[12,"elems","","",47,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[12,"attrs","","",48,null],[12,"expr","","",48,null],[12,"colon_token","","",48,null],[12,"ty","","",48,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",49,null],[12,"op","","",49,null],[12,"expr","","",49,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[12,"attrs","","",50,null],[12,"unsafe_token","","",50,null],[12,"block","","",50,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[12,"attrs","","",51,null],[12,"label","","",51,null],[12,"while_token","","",51,null],[12,"cond","","",51,null],[12,"body","","",51,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[12,"attrs","","",52,null],[12,"yield_token","","",52,null],[12,"expr","","",52,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",53,null],[12,"span","","",53,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",null,null],[12,"for_token","","",54,null],[12,"lt_token","","",54,null],[12,"lifetimes","","",54,null],[12,"gt_token","","",54,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",55,null],[12,"const_token","","",55,null],[12,"ident","","",55,null],[12,"colon_token","","",55,null],[12,"ty","","",55,null],[12,"eq_token","","",55,null],[12,"default","","",55,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",56,null],[12,"params","","",56,null],[12,"gt_token","","",56,null],[12,"where_clause","","",56,null],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",null,null],[12,"attrs","","",57,null],[12,"lifetime","","",57,null],[12,"colon_token","","",57,null],[12,"bounds","","",57,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",58,null],[12,"eq_token","","",58,null],[12,"rhs_ty","","",58,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",null,null],[12,"lifetime","","",59,null],[12,"colon_token","","",59,null],[12,"bounds","","",59,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",60,null],[12,"bounded_ty","","The type being bounded",60,null],[12,"colon_token","","",60,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",60,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",61,null],[12,"modifier","","",61,null],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",61,null],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",61,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",62,null],[12,"ident","","",62,null],[12,"colon_token","","",62,null],[12,"bounds","","",62,null],[12,"eq_token","","",62,null],[12,"default","","",62,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",63,null],[12,"predicates","","",63,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"ForeignItemFn","","A foreign function in an `extern` block.",null,null],[12,"attrs","","",64,null],[12,"vis","","",64,null],[12,"sig","","",64,null],[12,"semi_token","","",64,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",65,null],[12,"mac","","",65,null],[12,"semi_token","","",65,null],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext:…",null,null],[12,"attrs","","",66,null],[12,"vis","","",66,null],[12,"static_token","","",66,null],[12,"mutability","","",66,null],[12,"ident","","",66,null],[12,"colon_token","","",66,null],[12,"ty","","",66,null],[12,"semi_token","","",66,null],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",null,null],[12,"attrs","","",67,null],[12,"vis","","",67,null],[12,"type_token","","",67,null],[12,"ident","","",67,null],[12,"semi_token","","",67,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",68,null],[12,"vis","","",68,null],[12,"defaultness","","",68,null],[12,"const_token","","",68,null],[12,"ident","","",68,null],[12,"colon_token","","",68,null],[12,"ty","","",68,null],[12,"eq_token","","",68,null],[12,"expr","","",68,null],[12,"semi_token","","",68,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",69,null],[12,"mac","","",69,null],[12,"semi_token","","",69,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",70,null],[12,"vis","","",70,null],[12,"defaultness","","",70,null],[12,"sig","","",70,null],[12,"block","","",70,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",71,null],[12,"vis","","",71,null],[12,"defaultness","","",71,null],[12,"type_token","","",71,null],[12,"ident","","",71,null],[12,"generics","","",71,null],[12,"eq_token","","",71,null],[12,"ty","","",71,null],[12,"semi_token","","",71,null],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",null,null],[12,"attrs","","",72,null],[12,"vis","","",72,null],[12,"const_token","","",72,null],[12,"ident","","",72,null],[12,"colon_token","","",72,null],[12,"ty","","",72,null],[12,"eq_token","","",72,null],[12,"expr","","",72,null],[12,"semi_token","","",72,null],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",null,null],[12,"attrs","","",73,null],[12,"vis","","",73,null],[12,"enum_token","","",73,null],[12,"ident","","",73,null],[12,"generics","","",73,null],[12,"brace_token","","",73,null],[12,"variants","","",73,null],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",null,null],[12,"attrs","","",74,null],[12,"vis","","",74,null],[12,"extern_token","","",74,null],[12,"crate_token","","",74,null],[12,"ident","","",74,null],[12,"rename","","",74,null],[12,"semi_token","","",74,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",null,null],[12,"attrs","","",75,null],[12,"vis","","",75,null],[12,"sig","","",75,null],[12,"block","","",75,null],[3,"ItemForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",null,null],[12,"attrs","","",76,null],[12,"abi","","",76,null],[12,"brace_token","","",76,null],[12,"items","","",76,null],[3,"ItemImpl","","An impl block providing trait or associated items:…",null,null],[12,"attrs","","",77,null],[12,"defaultness","","",77,null],[12,"unsafety","","",77,null],[12,"impl_token","","",77,null],[12,"generics","","",77,null],[12,"trait_","","Trait this impl implements.",77,null],[12,"self_ty","","The Self type of the impl.",77,null],[12,"brace_token","","",77,null],[12,"items","","",77,null],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!`…",null,null],[12,"attrs","","",78,null],[12,"ident","","The `example` in `macro_rules! example { ... }`.",78,null],[12,"mac","","",78,null],[12,"semi_token","","",78,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro`…",null,null],[12,"attrs","","",79,null],[12,"vis","","",79,null],[12,"macro_token","","",79,null],[12,"ident","","",79,null],[12,"rules","","",79,null],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",null,null],[12,"attrs","","",80,null],[12,"vis","","",80,null],[12,"mod_token","","",80,null],[12,"ident","","",80,null],[12,"content","","",80,null],[12,"semi","","",80,null],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",null,null],[12,"attrs","","",81,null],[12,"vis","","",81,null],[12,"static_token","","",81,null],[12,"mutability","","",81,null],[12,"ident","","",81,null],[12,"colon_token","","",81,null],[12,"ty","","",81,null],[12,"eq_token","","",81,null],[12,"expr","","",81,null],[12,"semi_token","","",81,null],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",null,null],[12,"attrs","","",82,null],[12,"vis","","",82,null],[12,"struct_token","","",82,null],[12,"ident","","",82,null],[12,"generics","","",82,null],[12,"fields","","",82,null],[12,"semi_token","","",82,null],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",null,null],[12,"attrs","","",83,null],[12,"vis","","",83,null],[12,"unsafety","","",83,null],[12,"auto_token","","",83,null],[12,"trait_token","","",83,null],[12,"ident","","",83,null],[12,"generics","","",83,null],[12,"colon_token","","",83,null],[12,"supertraits","","",83,null],[12,"brace_token","","",83,null],[12,"items","","",83,null],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",null,null],[12,"attrs","","",84,null],[12,"vis","","",84,null],[12,"trait_token","","",84,null],[12,"ident","","",84,null],[12,"generics","","",84,null],[12,"eq_token","","",84,null],[12,"bounds","","",84,null],[12,"semi_token","","",84,null],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T,…",null,null],[12,"attrs","","",85,null],[12,"vis","","",85,null],[12,"type_token","","",85,null],[12,"ident","","",85,null],[12,"generics","","",85,null],[12,"eq_token","","",85,null],[12,"ty","","",85,null],[12,"semi_token","","",85,null],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",null,null],[12,"attrs","","",86,null],[12,"vis","","",86,null],[12,"union_token","","",86,null],[12,"ident","","",86,null],[12,"generics","","",86,null],[12,"fields","","",86,null],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",null,null],[12,"attrs","","",87,null],[12,"vis","","",87,null],[12,"use_token","","",87,null],[12,"leading_colon","","",87,null],[12,"tree","","",87,null],[12,"semi_token","","",87,null],[3,"Receiver","","The `self` argument of an associated method, whether taken…",null,null],[12,"attrs","","",88,null],[12,"reference","","",88,null],[12,"mutability","","",88,null],[12,"self_token","","",88,null],[3,"Signature","","A function signature in a trait or implementation: `unsafe…",null,null],[12,"constness","","",89,null],[12,"asyncness","","",89,null],[12,"unsafety","","",89,null],[12,"abi","","",89,null],[12,"fn_token","","",89,null],[12,"ident","","",89,null],[12,"generics","","",89,null],[12,"paren_token","","",89,null],[12,"inputs","","",89,null],[12,"variadic","","",89,null],[12,"output","","",89,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",90,null],[12,"const_token","","",90,null],[12,"ident","","",90,null],[12,"colon_token","","",90,null],[12,"ty","","",90,null],[12,"default","","",90,null],[12,"semi_token","","",90,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",91,null],[12,"mac","","",91,null],[12,"semi_token","","",91,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",92,null],[12,"sig","","",92,null],[12,"default","","",92,null],[12,"semi_token","","",92,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",93,null],[12,"type_token","","",93,null],[12,"ident","","",93,null],[12,"generics","","",93,null],[12,"colon_token","","",93,null],[12,"bounds","","",93,null],[12,"default","","",93,null],[12,"semi_token","","",93,null],[3,"UseGlob","","A glob import in a `use` item: `*`.",null,null],[12,"star_token","","",94,null],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",null,null],[12,"brace_token","","",95,null],[12,"items","","",95,null],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",null,null],[12,"ident","","",96,null],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",null,null],[12,"ident","","",97,null],[12,"colon2_token","","",97,null],[12,"tree","","",97,null],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap…",null,null],[12,"ident","","",98,null],[12,"as_token","","",98,null],[12,"rename","","",98,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",99,null],[12,"attrs","","",99,null],[12,"items","","",99,null],[3,"Lifetime","","A Rust lifetime: `'a`.",null,null],[12,"apostrophe","","",100,null],[12,"ident","","",100,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",101,null],[12,"span","","",101,null],[3,"LitByte","","A byte literal: `b'f'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",null,null],[3,"LitChar","","A character literal: `'a'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",null,null],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",null,null],[12,"path","","",102,null],[12,"bang_token","","",102,null],[12,"delimiter","","",102,null],[12,"tokens","","",102,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",103,null],[12,"brace_token","","",103,null],[12,"variants","","",103,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",104,null],[12,"fields","","",104,null],[12,"semi_token","","",104,null],[3,"DataUnion","","An untagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",105,null],[12,"fields","","",105,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",106,null],[12,"vis","","Visibility of the struct or enum.",106,null],[12,"ident","","Name of the struct or enum.",106,null],[12,"generics","","Generics required to complete the definition.",106,null],[12,"data","","Data within the struct or enum.",106,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",107,null],[12,"stmts","","Statements in a block",107,null],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",null,null],[12,"attrs","","",108,null],[12,"let_token","","",108,null],[12,"pat","","",108,null],[12,"init","","",108,null],[12,"semi_token","","",108,null],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",null,null],[12,"extern_token","","",109,null],[12,"name","","",109,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"attrs","","",110,null],[12,"name","","",110,null],[12,"ty","","",110,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",111,null],[12,"elem","","",111,null],[12,"semi_token","","",111,null],[12,"len","","",111,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",112,null],[12,"unsafety","","",112,null],[12,"abi","","",112,null],[12,"fn_token","","",112,null],[12,"paren_token","","",112,null],[12,"inputs","","",112,null],[12,"variadic","","",112,null],[12,"output","","",112,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",113,null],[12,"elem","","",113,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",114,null],[12,"bounds","","",114,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",115,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",116,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",117,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",118,null],[12,"elem","","",118,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",119,null],[12,"path","","",119,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",120,null],[12,"const_token","","",120,null],[12,"mutability","","",120,null],[12,"elem","","",120,null],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",null,null],[12,"and_token","","",121,null],[12,"lifetime","","",121,null],[12,"mutability","","",121,null],[12,"elem","","",121,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",122,null],[12,"elem","","",122,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",123,null],[12,"bounds","","",123,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",124,null],[12,"elems","","",124,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",125,null],[12,"dots","","",125,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",126,null],[12,"member","","",126,null],[12,"colon_token","","",126,null],[12,"pat","","",126,null],[3,"PatBox","","A box pattern: `box v`.",null,null],[12,"attrs","","",127,null],[12,"box_token","","",127,null],[12,"pat","","",127,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",null,null],[12,"attrs","","",128,null],[12,"by_ref","","",128,null],[12,"mutability","","",128,null],[12,"ident","","",128,null],[12,"subpat","","",128,null],[3,"PatLit","","A literal pattern: `0`.",null,null],[12,"attrs","","",129,null],[12,"expr","","",129,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",130,null],[12,"mac","","",130,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",131,null],[12,"leading_vert","","",131,null],[12,"cases","","",131,null],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified…",null,null],[12,"attrs","","",132,null],[12,"qself","","",132,null],[12,"path","","",132,null],[3,"PatRange","","A range pattern: `1..=2`.",null,null],[12,"attrs","","",133,null],[12,"lo","","",133,null],[12,"limits","","",133,null],[12,"hi","","",133,null],[3,"PatReference","","A reference pattern: `&mut var`.",null,null],[12,"attrs","","",134,null],[12,"and_token","","",134,null],[12,"mutability","","",134,null],[12,"pat","","",134,null],[3,"PatRest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",null,null],[12,"attrs","","",135,null],[12,"dot2_token","","",135,null],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",null,null],[12,"attrs","","",136,null],[12,"bracket_token","","",136,null],[12,"elems","","",136,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"attrs","","",137,null],[12,"path","","",137,null],[12,"brace_token","","",137,null],[12,"fields","","",137,null],[12,"dot2_token","","",137,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"attrs","","",138,null],[12,"paren_token","","",138,null],[12,"elems","","",138,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",null,null],[12,"attrs","","",139,null],[12,"path","","",139,null],[12,"pat","","",139,null],[3,"PatType","","A type ascription pattern: `foo: f64`.",null,null],[12,"attrs","","",140,null],[12,"pat","","",140,null],[12,"colon_token","","",140,null],[12,"ty","","",140,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"attrs","","",141,null],[12,"underscore_token","","",141,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",142,null],[12,"lt_token","","",142,null],[12,"args","","",142,null],[12,"gt_token","","",142,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",143,null],[12,"eq_token","","",143,null],[12,"ty","","",143,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",144,null],[12,"colon_token","","",144,null],[12,"bounds","","",144,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",145,null],[12,"inputs","","`(A, B)`",145,null],[12,"output","","`C`",145,null],[3,"Path","","A path at which a named item is exported:…",null,null],[12,"leading_colon","","",146,null],[12,"segments","","",146,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",147,null],[12,"arguments","","",147,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",148,null],[12,"ty","","",148,null],[12,"position","","",148,null],[12,"as_token","","",148,null],[12,"gt_token","","",148,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",149,null],[13,"Inner","","",149,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",150,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",150,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",150,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",151,null],[13,"Lit","","A Rust literal, like the `\"new_name\"` in…",151,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",152,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",152,null],[13,"Unit","","Unit struct or unit variant such as `None`.",152,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",153,null],[13,"Crate","","A crate-level visibility: `crate`.",153,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",153,null],[13,"Inherited","","An inherited visibility, which usually means private.",153,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",null,null],[13,"Type","","A type argument.",154,null],[13,"Const","","A const expression. Must be inside of a block.",154,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",155,null],[13,"Closed","","Inclusive at the beginning and end.",155,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",156,null],[13,"Assign","","An assignment expression: `a = compute()`.",156,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",156,null],[13,"Async","","An async block: `async { ... }`.",156,null],[13,"Await","","An await expression: `fut.await`.",156,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",156,null],[13,"Block","","A blocked scope: `{ ... }`.",156,null],[13,"Box","","A box expression: `box f`.",156,null],[13,"Break","","A `break`, with an optional label to break and an optional…",156,null],[13,"Call","","A function call expression: `invoke(a, b)`.",156,null],[13,"Cast","","A cast expression: `foo as f64`.",156,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",156,null],[13,"Continue","","A `continue`, with an optional label.",156,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",156,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",156,null],[13,"Group","","An expression contained within invisible delimiters.",156,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",156,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",156,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",156,null],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",156,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",156,null],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",156,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",156,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",156,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",156,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",156,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",156,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",156,null],[13,"Repeat","","An array literal constructed from one repeated element:…",156,null],[13,"Return","","A `return`, with an optional value to be returned.",156,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",156,null],[13,"Try","","A try-expression: `expr?`.",156,null],[13,"TryBlock","","A try block: `try { ... }`.",156,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",156,null],[13,"Type","","A type ascription expression: `foo: f64`.",156,null],[13,"Unary","","A unary operation: `!x`, `*x`.",156,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",156,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",156,null],[13,"While","","A while loop: `while expr { ... }`.",156,null],[13,"Yield","","A yield expression: `yield expr`.",156,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",157,null],[13,"Unnamed","","An unnamed field like `self.0`.",157,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",158,null],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",158,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",158,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",159,null],[13,"Maybe","","",159,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",160,null],[13,"Lifetime","","",160,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",161,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",161,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",161,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",null,null],[13,"Receiver","","The `self` argument of an associated method, whether taken…",162,null],[13,"Typed","","A function argument accepted by pattern and type.",162,null],[4,"ForeignItem","","An item within an `extern` block.",null,null],[13,"Fn","","A foreign function in an `extern` block.",163,null],[13,"Static","","A foreign static item in an `extern` block: `static ext:…",163,null],[13,"Type","","A foreign type in an `extern` block: `type void`.",163,null],[13,"Macro","","A macro invocation within an extern block.",163,null],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",163,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",164,null],[13,"Method","","A method within an impl block.",164,null],[13,"Type","","An associated type within an impl block.",164,null],[13,"Macro","","A macro invocation within an impl block.",164,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",164,null],[4,"Item","","Things that can appear directly inside of a module or scope.",null,null],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",165,null],[13,"Enum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",165,null],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",165,null],[13,"Fn","","A free-standing function: `fn process(n: usize) ->…",165,null],[13,"ForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",165,null],[13,"Impl","","An impl block providing trait or associated items:…",165,null],[13,"Macro","","A macro invocation, which includes `macro_rules!`…",165,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro`…",165,null],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",165,null],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",165,null],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",165,null],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",165,null],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",165,null],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T,…",165,null],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",165,null],[13,"Use","","A use declaration: `use std::collections::HashMap`.",165,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",165,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",166,null],[13,"Method","","A trait method within the definition of a trait.",166,null],[13,"Type","","An associated type within the definition of a trait.",166,null],[13,"Macro","","A macro invocation within the definition of a trait.",166,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by…",166,null],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as…",null,null],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",167,null],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",167,null],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap…",167,null],[13,"Glob","","A glob import in a `use` item: `*`.",167,null],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",167,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",168,null],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",168,null],[13,"Byte","","A byte literal: `b'f'`.",168,null],[13,"Char","","A character literal: `'a'`.",168,null],[13,"Int","","An integer literal: `1` or `1u16`.",168,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",168,null],[13,"Bool","","A boolean literal: `true` or `false`.",168,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",168,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\"data\"`.",169,null],[13,"Raw","","A raw string like `r##\"data\"##`.",169,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",170,null],[13,"Brace","","",170,null],[13,"Bracket","","",170,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",171,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",171,null],[13,"Union","","An untagged union input to a `proc_macro_derive` macro.",171,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",172,null],[13,"Sub","","The `-` operator (subtraction)",172,null],[13,"Mul","","The `*` operator (multiplication)",172,null],[13,"Div","","The `/` operator (division)",172,null],[13,"Rem","","The `%` operator (modulus)",172,null],[13,"And","","The `&&` operator (logical and)",172,null],[13,"Or","","The `||` operator (logical or)",172,null],[13,"BitXor","","The `^` operator (bitwise xor)",172,null],[13,"BitAnd","","The `&` operator (bitwise and)",172,null],[13,"BitOr","","The `|` operator (bitwise or)",172,null],[13,"Shl","","The `<<` operator (shift left)",172,null],[13,"Shr","","The `>>` operator (shift right)",172,null],[13,"Eq","","The `==` operator (equality)",172,null],[13,"Lt","","The `<` operator (less than)",172,null],[13,"Le","","The `<=` operator (less than or equal to)",172,null],[13,"Ne","","The `!=` operator (not equal to)",172,null],[13,"Ge","","The `>=` operator (greater than or equal to)",172,null],[13,"Gt","","The `>` operator (greater than)",172,null],[13,"AddEq","","The `+=` operator",172,null],[13,"SubEq","","The `-=` operator",172,null],[13,"MulEq","","The `*=` operator",172,null],[13,"DivEq","","The `/=` operator",172,null],[13,"RemEq","","The `%=` operator",172,null],[13,"BitXorEq","","The `^=` operator",172,null],[13,"BitAndEq","","The `&=` operator",172,null],[13,"BitOrEq","","The `|=` operator",172,null],[13,"ShlEq","","The `<<=` operator",172,null],[13,"ShrEq","","The `>>=` operator",172,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",173,null],[13,"Not","","The `!` operator for logical inversion",173,null],[13,"Neg","","The `-` operator for negation",173,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",174,null],[13,"Item","","An item definition.",174,null],[13,"Expr","","Expr without trailing semicolon.",174,null],[13,"Semi","","Expression with trailing semicolon.",174,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",175,null],[13,"Type","","A particular type is returned.",175,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: `[T; n]`.",176,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",176,null],[13,"Group","","A type contained within invisible delimiters.",176,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",176,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",176,null],[13,"Macro","","A macro in the type position.",176,null],[13,"Never","","The never type: `!`.",176,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",176,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",176,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",176,null],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",176,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",176,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",176,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",176,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",176,null],[4,"Pat","","A pattern in a local binding, function signature, match…",null,null],[13,"Box","","A box pattern: `box v`.",177,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",177,null],[13,"Lit","","A literal pattern: `0`.",177,null],[13,"Macro","","A macro in pattern position.",177,null],[13,"Or","","A pattern that matches any one of a set of cases.",177,null],[13,"Path","","A path pattern like `Color::Red`, optionally qualified…",177,null],[13,"Range","","A range pattern: `1..=2`.",177,null],[13,"Reference","","A reference pattern: `&mut var`.",177,null],[13,"Rest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",177,null],[13,"Slice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",177,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",177,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",177,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",177,null],[13,"Type","","A type ascription pattern: `foo: f64`.",177,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",177,null],[13,"Wild","","A pattern that matches any value: `_`.",177,null],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",178,null],[13,"Type","","A type argument.",178,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",178,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",178,null],[13,"Const","","A const expression. Must be inside of a block.",178,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",179,null],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",179,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",179,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream"]],[["parse"],["result"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream"]],[["parse"],["result"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[["str"]],[["parse"],["result"]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[["str"]],[["result",["file"]],["file"]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"spans","","",180,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",181,null],[3,"As","","`as`",null,null],[12,"span","","",182,null],[3,"Async","","`async`",null,null],[12,"span","","",183,null],[3,"Auto","","`auto`",null,null],[12,"span","","",184,null],[3,"Await","","`await`",null,null],[12,"span","","",185,null],[3,"Become","","`become`",null,null],[12,"span","","",186,null],[3,"Box","","`box`",null,null],[12,"span","","",187,null],[3,"Break","","`break`",null,null],[12,"span","","",188,null],[3,"Const","","`const`",null,null],[12,"span","","",189,null],[3,"Continue","","`continue`",null,null],[12,"span","","",190,null],[3,"Crate","","`crate`",null,null],[12,"span","","",191,null],[3,"Default","","`default`",null,null],[12,"span","","",192,null],[3,"Do","","`do`",null,null],[12,"span","","",193,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",194,null],[3,"Else","","`else`",null,null],[12,"span","","",195,null],[3,"Enum","","`enum`",null,null],[12,"span","","",196,null],[3,"Extern","","`extern`",null,null],[12,"span","","",197,null],[3,"Final","","`final`",null,null],[12,"span","","",198,null],[3,"Fn","","`fn`",null,null],[12,"span","","",199,null],[3,"For","","`for`",null,null],[12,"span","","",200,null],[3,"If","","`if`",null,null],[12,"span","","",201,null],[3,"Impl","","`impl`",null,null],[12,"span","","",202,null],[3,"In","","`in`",null,null],[12,"span","","",203,null],[3,"Let","","`let`",null,null],[12,"span","","",204,null],[3,"Loop","","`loop`",null,null],[12,"span","","",205,null],[3,"Macro","","`macro`",null,null],[12,"span","","",206,null],[3,"Match","","`match`",null,null],[12,"span","","",207,null],[3,"Mod","","`mod`",null,null],[12,"span","","",208,null],[3,"Move","","`move`",null,null],[12,"span","","",209,null],[3,"Mut","","`mut`",null,null],[12,"span","","",210,null],[3,"Override","","`override`",null,null],[12,"span","","",211,null],[3,"Priv","","`priv`",null,null],[12,"span","","",212,null],[3,"Pub","","`pub`",null,null],[12,"span","","",213,null],[3,"Ref","","`ref`",null,null],[12,"span","","",214,null],[3,"Return","","`return`",null,null],[12,"span","","",215,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",216,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",217,null],[3,"Static","","`static`",null,null],[12,"span","","",218,null],[3,"Struct","","`struct`",null,null],[12,"span","","",219,null],[3,"Super","","`super`",null,null],[12,"span","","",220,null],[3,"Trait","","`trait`",null,null],[12,"span","","",221,null],[3,"Try","","`try`",null,null],[12,"span","","",222,null],[3,"Type","","`type`",null,null],[12,"span","","",223,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",224,null],[3,"Union","","`union`",null,null],[12,"span","","",225,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",226,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",227,null],[3,"Use","","`use`",null,null],[12,"span","","",228,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",229,null],[3,"Where","","`where`",null,null],[12,"span","","",230,null],[3,"While","","`while`",null,null],[12,"span","","",231,null],[3,"Yield","","`yield`",null,null],[12,"span","","",232,null],[3,"Add","","`+`",null,null],[12,"spans","","",233,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",234,null],[3,"And","","`&`",null,null],[12,"spans","","",235,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",236,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",237,null],[3,"At","","`@`",null,null],[12,"spans","","",238,null],[3,"Bang","","`!`",null,null],[12,"spans","","",239,null],[3,"Caret","","`^`",null,null],[12,"spans","","",240,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",241,null],[3,"Colon","","`:`",null,null],[12,"spans","","",242,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",243,null],[3,"Comma","","`,`",null,null],[12,"spans","","",244,null],[3,"Div","","`/`",null,null],[12,"spans","","",245,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",246,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",247,null],[3,"Dot","","`.`",null,null],[12,"spans","","",248,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",249,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",250,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",251,null],[3,"Eq","","`=`",null,null],[12,"spans","","",252,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",253,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",254,null],[3,"Gt","","`>`",null,null],[12,"spans","","",255,null],[3,"Le","","`<=`",null,null],[12,"spans","","",256,null],[3,"Lt","","`<`",null,null],[12,"spans","","",257,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",258,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",259,null],[3,"Or","","`|`",null,null],[12,"spans","","",260,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",261,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",262,null],[3,"Pound","","`#`",null,null],[12,"spans","","",263,null],[3,"Question","","`?`",null,null],[12,"spans","","",264,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",265,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",266,null],[3,"Rem","","`%`",null,null],[12,"spans","","",267,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",268,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",269,null],[3,"Semi","","`;`",null,null],[12,"spans","","",270,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",271,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",272,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",273,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",274,null],[3,"Star","","`*`",null,null],[12,"spans","","",275,null],[3,"Sub","","`-`",null,null],[12,"spans","","",276,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",277,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",278,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",279,null],[3,"Bracket","","`[...]`",null,null],[12,"span","","",280,null],[3,"Paren","","`(...)`",null,null],[12,"span","","",281,null],[3,"Group","","None-delimited group",null,null],[12,"span","","",282,null],[8,"Token","","Marker trait for types that represent single tokens.",null,null],[11,"surround","","",279,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",280,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",281,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",282,[[["tokenstream"],["self"],["f"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[["meta"],["result",["meta"]]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",0,[[["self"]],[["parse"],["result"]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given parser.",0,[[["self"],["parser"]],["result"]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],[["result",["vec"]],["vec"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],[["result",["vec"]],["vec"]]]],[11,"path","","Returns the identifier that begins this structured meta…",150,[[["self"]],["path"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",152,[[["self"]],[["field"],["iter",["field"]]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",152,[[["self"]],[["field"],["itermut",["field"]]]]],[11,"len","","Returns the number of fields.",152,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if there are zero fields.",152,[[["self"]],["bool"]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",56,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",56,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",56,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",56,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",56,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",56,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",56,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",56,[[["self"]]]],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",283,[[["self"]],["turbofish"]]],[11,"new","","",57,[[["lifetime"]],["self"]]],[11,"receiver","","A method's `self` receiver, such as `&self` or `self:…",89,[[["self"]],[["fnarg"],["option",["fnarg"]]]]],[11,"lifetime","","",88,[[["self"]],[["option",["lifetime"]],["lifetime"]]]],[11,"new","","Panics",100,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",168,[[["literal"]],["self"]]],[11,"new","","",284,[[["str"],["span"]],["self"]]],[11,"value","","",284,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",284,[[["self"]],[["parse"],["result"]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",284,[[["self"],["parser"]],["result"]]],[11,"span","","",284,[[["self"]],["span"]]],[11,"set_span","","",284,[[["self"],["span"]]]],[11,"suffix","","",284,[[["self"]],["str"]]],[11,"new","","",285,[[["span"]],["self"]]],[11,"value","","",285,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"span","","",285,[[["self"]],["span"]]],[11,"set_span","","",285,[[["self"],["span"]]]],[11,"new","","",286,[[["span"],["u8"]],["self"]]],[11,"value","","",286,[[["self"]],["u8"]]],[11,"span","","",286,[[["self"]],["span"]]],[11,"set_span","","",286,[[["self"],["span"]]]],[11,"new","","",287,[[["span"],["char"]],["self"]]],[11,"value","","",287,[[["self"]],["char"]]],[11,"span","","",287,[[["self"]],["span"]]],[11,"set_span","","",287,[[["self"],["span"]]]],[11,"new","","",288,[[["str"],["span"]],["self"]]],[11,"base10_digits","","",288,[[["self"]],["str"]]],[11,"base10_parse","","Parses the literal into a selected number type.",288,[[["self"]],["result"]]],[11,"suffix","","",288,[[["self"]],["str"]]],[11,"span","","",288,[[["self"]],["span"]]],[11,"set_span","","",288,[[["self"],["span"]]]],[11,"new","","",289,[[["str"],["span"]],["self"]]],[11,"base10_digits","","",289,[[["self"]],["str"]]],[11,"base10_parse","","",289,[[["self"]],["result"]]],[11,"suffix","","",289,[[["self"]],["str"]]],[11,"span","","",289,[[["self"]],["span"]]],[11,"set_span","","",289,[[["self"],["span"]]]],[11,"parse_body","","Parse the tokens within the macro invocation's delimiters…",102,[[["self"]],[["parse"],["result"]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation's delimiters…",102,[[["self"],["parser"]],["result"]]],[11,"parse_within","","Parse the body of a block as zero or more statements,…",107,[[["parsestream"]],[["result",["vec"]],["vec",["stmt"]]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",176,[[["parsestream"]],["result"]]],[11,"without_plus","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["bool"],["parsestream"]],["result"]]],[11,"without_plus","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["bool"],["parsestream"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",146,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",146,[[["i"],["self"]],["bool"]]],[11,"get_ident","","If this path consists of a single ident, returns the ident.",146,[[["self"]],[["option",["ident"]],["ident"]]]],[11,"is_empty","","",179,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",290,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",291,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",291,[[],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",291,[[["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",291,[[],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",291,[[],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",291,[[],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",291,[[],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",291,[[],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",291,[[],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",291,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",292,[[["parsestream"]],["result"]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",292,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",292,[[["self"]],["ident"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",293,null],[13,"End","","",293,null],[11,"new","","Creates an empty punctuated sequence.",294,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",294,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",294,[[["self"]],["usize"]]],[11,"first","","Borrows the first element in this sequence.",294,[[["self"]],[["t"],["option"]]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",294,[[["self"]],[["option"],["t"]]]],[11,"last","","Borrows the last element in this sequence.",294,[[["self"]],[["t"],["option"]]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",294,[[["self"]],[["option"],["t"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",294,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",294,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",294,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",294,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",294,[[],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",294,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",294,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",294,[[["self"]],[["option",["pair"]],["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",294,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",294,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",294,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",294,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",294,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",294,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",294,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",294,[[["parsestream"]],["result"]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",293,[[],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",293,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",293,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",293,[[["self"]],[["option"],["p"]]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",293,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",293,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",295,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[5,"visit_abi","syn::visit","",null,[[["abi"],["v"]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments"],["v"]]]],[5,"visit_arm","","",null,[[["v"],["arm"]]]],[5,"visit_attr_style","","",null,[[["v"],["attrstyle"]]]],[5,"visit_attribute","","",null,[[["attribute"],["v"]]]],[5,"visit_bare_fn_arg","","",null,[[["v"],["barefnarg"]]]],[5,"visit_bin_op","","",null,[[["binop"],["v"]]]],[5,"visit_binding","","",null,[[["v"],["binding"]]]],[5,"visit_block","","",null,[[["v"],["block"]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes"],["v"]]]],[5,"visit_const_param","","",null,[[["constparam"],["v"]]]],[5,"visit_constraint","","",null,[[["v"],["constraint"]]]],[5,"visit_data","","",null,[[["data"],["v"]]]],[5,"visit_data_enum","","",null,[[["v"],["dataenum"]]]],[5,"visit_data_struct","","",null,[[["v"],["datastruct"]]]],[5,"visit_data_union","","",null,[[["dataunion"],["v"]]]],[5,"visit_derive_input","","",null,[[["v"],["deriveinput"]]]],[5,"visit_expr","","",null,[[["v"],["expr"]]]],[5,"visit_expr_array","","",null,[[["exprarray"],["v"]]]],[5,"visit_expr_assign","","",null,[[["v"],["exprassign"]]]],[5,"visit_expr_assign_op","","",null,[[["v"],["exprassignop"]]]],[5,"visit_expr_async","","",null,[[["v"],["exprasync"]]]],[5,"visit_expr_await","","",null,[[["v"],["exprawait"]]]],[5,"visit_expr_binary","","",null,[[["v"],["exprbinary"]]]],[5,"visit_expr_block","","",null,[[["exprblock"],["v"]]]],[5,"visit_expr_box","","",null,[[["v"],["exprbox"]]]],[5,"visit_expr_break","","",null,[[["v"],["exprbreak"]]]],[5,"visit_expr_call","","",null,[[["v"],["exprcall"]]]],[5,"visit_expr_cast","","",null,[[["v"],["exprcast"]]]],[5,"visit_expr_closure","","",null,[[["v"],["exprclosure"]]]],[5,"visit_expr_continue","","",null,[[["v"],["exprcontinue"]]]],[5,"visit_expr_field","","",null,[[["v"],["exprfield"]]]],[5,"visit_expr_for_loop","","",null,[[["exprforloop"],["v"]]]],[5,"visit_expr_group","","",null,[[["exprgroup"],["v"]]]],[5,"visit_expr_if","","",null,[[["v"],["exprif"]]]],[5,"visit_expr_index","","",null,[[["exprindex"],["v"]]]],[5,"visit_expr_let","","",null,[[["v"],["exprlet"]]]],[5,"visit_expr_lit","","",null,[[["v"],["exprlit"]]]],[5,"visit_expr_loop","","",null,[[["exprloop"],["v"]]]],[5,"visit_expr_macro","","",null,[[["exprmacro"],["v"]]]],[5,"visit_expr_match","","",null,[[["exprmatch"],["v"]]]],[5,"visit_expr_method_call","","",null,[[["exprmethodcall"],["v"]]]],[5,"visit_expr_paren","","",null,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",null,[[["v"],["exprpath"]]]],[5,"visit_expr_range","","",null,[[["exprrange"],["v"]]]],[5,"visit_expr_reference","","",null,[[["exprreference"],["v"]]]],[5,"visit_expr_repeat","","",null,[[["v"],["exprrepeat"]]]],[5,"visit_expr_return","","",null,[[["v"],["exprreturn"]]]],[5,"visit_expr_struct","","",null,[[["v"],["exprstruct"]]]],[5,"visit_expr_try","","",null,[[["v"],["exprtry"]]]],[5,"visit_expr_try_block","","",null,[[["exprtryblock"],["v"]]]],[5,"visit_expr_tuple","","",null,[[["exprtuple"],["v"]]]],[5,"visit_expr_type","","",null,[[["exprtype"],["v"]]]],[5,"visit_expr_unary","","",null,[[["exprunary"],["v"]]]],[5,"visit_expr_unsafe","","",null,[[["v"],["exprunsafe"]]]],[5,"visit_expr_while","","",null,[[["exprwhile"],["v"]]]],[5,"visit_expr_yield","","",null,[[["expryield"],["v"]]]],[5,"visit_field","","",null,[[["v"],["field"]]]],[5,"visit_field_pat","","",null,[[["fieldpat"],["v"]]]],[5,"visit_field_value","","",null,[[["v"],["fieldvalue"]]]],[5,"visit_fields","","",null,[[["v"],["fields"]]]],[5,"visit_fields_named","","",null,[[["v"],["fieldsnamed"]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed"],["v"]]]],[5,"visit_file","","",null,[[["file"],["v"]]]],[5,"visit_fn_arg","","",null,[[["v"],["fnarg"]]]],[5,"visit_foreign_item","","",null,[[["foreignitem"],["v"]]]],[5,"visit_foreign_item_fn","","",null,[[["v"],["foreignitemfn"]]]],[5,"visit_foreign_item_macro","","",null,[[["v"],["foreignitemmacro"]]]],[5,"visit_foreign_item_static","","",null,[[["v"],["foreignitemstatic"]]]],[5,"visit_foreign_item_type","","",null,[[["foreignitemtype"],["v"]]]],[5,"visit_generic_argument","","",null,[[["v"],["genericargument"]]]],[5,"visit_generic_method_argument","","",null,[[["genericmethodargument"],["v"]]]],[5,"visit_generic_param","","",null,[[["v"],["genericparam"]]]],[5,"visit_generics","","",null,[[["v"],["generics"]]]],[5,"visit_ident","","",null,[[["v"],["ident"]]]],[5,"visit_impl_item","","",null,[[["implitem"],["v"]]]],[5,"visit_impl_item_const","","",null,[[["v"],["implitemconst"]]]],[5,"visit_impl_item_macro","","",null,[[["v"],["implitemmacro"]]]],[5,"visit_impl_item_method","","",null,[[["v"],["implitemmethod"]]]],[5,"visit_impl_item_type","","",null,[[["v"],["implitemtype"]]]],[5,"visit_index","","",null,[[["v"],["index"]]]],[5,"visit_item","","",null,[[["v"],["item"]]]],[5,"visit_item_const","","",null,[[["v"],["itemconst"]]]],[5,"visit_item_enum","","",null,[[["itemenum"],["v"]]]],[5,"visit_item_extern_crate","","",null,[[["v"],["itemexterncrate"]]]],[5,"visit_item_fn","","",null,[[["v"],["itemfn"]]]],[5,"visit_item_foreign_mod","","",null,[[["v"],["itemforeignmod"]]]],[5,"visit_item_impl","","",null,[[["itemimpl"],["v"]]]],[5,"visit_item_macro","","",null,[[["v"],["itemmacro"]]]],[5,"visit_item_macro2","","",null,[[["v"],["itemmacro2"]]]],[5,"visit_item_mod","","",null,[[["v"],["itemmod"]]]],[5,"visit_item_static","","",null,[[["itemstatic"],["v"]]]],[5,"visit_item_struct","","",null,[[["itemstruct"],["v"]]]],[5,"visit_item_trait","","",null,[[["v"],["itemtrait"]]]],[5,"visit_item_trait_alias","","",null,[[["v"],["itemtraitalias"]]]],[5,"visit_item_type","","",null,[[["v"],["itemtype"]]]],[5,"visit_item_union","","",null,[[["v"],["itemunion"]]]],[5,"visit_item_use","","",null,[[["v"],["itemuse"]]]],[5,"visit_label","","",null,[[["label"],["v"]]]],[5,"visit_lifetime","","",null,[[["lifetime"],["v"]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef"],["v"]]]],[5,"visit_lit","","",null,[[["lit"],["v"]]]],[5,"visit_lit_bool","","",null,[[["v"],["litbool"]]]],[5,"visit_lit_byte","","",null,[[["litbyte"],["v"]]]],[5,"visit_lit_byte_str","","",null,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",null,[[["v"],["litchar"]]]],[5,"visit_lit_float","","",null,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",null,[[["v"],["litint"]]]],[5,"visit_lit_str","","",null,[[["v"],["litstr"]]]],[5,"visit_local","","",null,[[["local"],["v"]]]],[5,"visit_macro","","",null,[[["macro"],["v"]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter"],["v"]]]],[5,"visit_member","","",null,[[["member"],["v"]]]],[5,"visit_meta","","",null,[[["meta"],["v"]]]],[5,"visit_meta_list","","",null,[[["v"],["metalist"]]]],[5,"visit_meta_name_value","","",null,[[["v"],["metanamevalue"]]]],[5,"visit_method_turbofish","","",null,[[["methodturbofish"],["v"]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta"],["v"]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_pat","","",null,[[["pat"],["v"]]]],[5,"visit_pat_box","","",null,[[["v"],["patbox"]]]],[5,"visit_pat_ident","","",null,[[["v"],["patident"]]]],[5,"visit_pat_lit","","",null,[[["patlit"],["v"]]]],[5,"visit_pat_macro","","",null,[[["patmacro"],["v"]]]],[5,"visit_pat_or","","",null,[[["v"],["pator"]]]],[5,"visit_pat_path","","",null,[[["patpath"],["v"]]]],[5,"visit_pat_range","","",null,[[["patrange"],["v"]]]],[5,"visit_pat_reference","","",null,[[["v"],["patreference"]]]],[5,"visit_pat_rest","","",null,[[["patrest"],["v"]]]],[5,"visit_pat_slice","","",null,[[["patslice"],["v"]]]],[5,"visit_pat_struct","","",null,[[["patstruct"],["v"]]]],[5,"visit_pat_tuple","","",null,[[["pattuple"],["v"]]]],[5,"visit_pat_tuple_struct","","",null,[[["v"],["pattuplestruct"]]]],[5,"visit_pat_type","","",null,[[["pattype"],["v"]]]],[5,"visit_pat_wild","","",null,[[["v"],["patwild"]]]],[5,"visit_path","","",null,[[["path"],["v"]]]],[5,"visit_path_arguments","","",null,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",null,[[["pathsegment"],["v"]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq"],["v"]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime"],["v"]]]],[5,"visit_predicate_type","","",null,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",null,[[["v"],["qself"]]]],[5,"visit_range_limits","","",null,[[["v"],["rangelimits"]]]],[5,"visit_receiver","","",null,[[["v"],["receiver"]]]],[5,"visit_return_type","","",null,[[["returntype"],["v"]]]],[5,"visit_signature","","",null,[[["signature"],["v"]]]],[5,"visit_span","","",null,[[["span"],["v"]]]],[5,"visit_stmt","","",null,[[["v"],["stmt"]]]],[5,"visit_trait_bound","","",null,[[["traitbound"],["v"]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier"],["v"]]]],[5,"visit_trait_item","","",null,[[["v"],["traititem"]]]],[5,"visit_trait_item_const","","",null,[[["v"],["traititemconst"]]]],[5,"visit_trait_item_macro","","",null,[[["v"],["traititemmacro"]]]],[5,"visit_trait_item_method","","",null,[[["v"],["traititemmethod"]]]],[5,"visit_trait_item_type","","",null,[[["traititemtype"],["v"]]]],[5,"visit_type","","",null,[[["v"],["type"]]]],[5,"visit_type_array","","",null,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn"],["v"]]]],[5,"visit_type_group","","",null,[[["v"],["typegroup"]]]],[5,"visit_type_impl_trait","","",null,[[["v"],["typeimpltrait"]]]],[5,"visit_type_infer","","",null,[[["typeinfer"],["v"]]]],[5,"visit_type_macro","","",null,[[["typemacro"],["v"]]]],[5,"visit_type_never","","",null,[[["v"],["typenever"]]]],[5,"visit_type_param","","",null,[[["v"],["typeparam"]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound"],["v"]]]],[5,"visit_type_paren","","",null,[[["v"],["typeparen"]]]],[5,"visit_type_path","","",null,[[["v"],["typepath"]]]],[5,"visit_type_ptr","","",null,[[["typeptr"],["v"]]]],[5,"visit_type_reference","","",null,[[["v"],["typereference"]]]],[5,"visit_type_slice","","",null,[[["v"],["typeslice"]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject"],["v"]]]],[5,"visit_type_tuple","","",null,[[["v"],["typetuple"]]]],[5,"visit_un_op","","",null,[[["unop"],["v"]]]],[5,"visit_use_glob","","",null,[[["v"],["useglob"]]]],[5,"visit_use_group","","",null,[[["usegroup"],["v"]]]],[5,"visit_use_name","","",null,[[["v"],["usename"]]]],[5,"visit_use_path","","",null,[[["v"],["usepath"]]]],[5,"visit_use_rename","","",null,[[["v"],["userename"]]]],[5,"visit_use_tree","","",null,[[["usetree"],["v"]]]],[5,"visit_variadic","","",null,[[["v"],["variadic"]]]],[5,"visit_variant","","",null,[[["variant"],["v"]]]],[5,"visit_vis_crate","","",null,[[["v"],["viscrate"]]]],[5,"visit_vis_public","","",null,[[["v"],["vispublic"]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted"],["v"]]]],[5,"visit_visibility","","",null,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",null,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",null,[[["v"],["wherepredicate"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",296,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",296,[[["anglebracketedgenericarguments"],["self"]]]],[11,"visit_arm","","",296,[[["self"],["arm"]]]],[11,"visit_attr_style","","",296,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",296,[[["attribute"],["self"]]]],[11,"visit_bare_fn_arg","","",296,[[["self"],["barefnarg"]]]],[11,"visit_bin_op","","",296,[[["self"],["binop"]]]],[11,"visit_binding","","",296,[[["self"],["binding"]]]],[11,"visit_block","","",296,[[["self"],["block"]]]],[11,"visit_bound_lifetimes","","",296,[[["boundlifetimes"],["self"]]]],[11,"visit_const_param","","",296,[[["constparam"],["self"]]]],[11,"visit_constraint","","",296,[[["self"],["constraint"]]]],[11,"visit_data","","",296,[[["data"],["self"]]]],[11,"visit_data_enum","","",296,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",296,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",296,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",296,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",296,[[["self"],["expr"]]]],[11,"visit_expr_array","","",296,[[["exprarray"],["self"]]]],[11,"visit_expr_assign","","",296,[[["self"],["exprassign"]]]],[11,"visit_expr_assign_op","","",296,[[["self"],["exprassignop"]]]],[11,"visit_expr_async","","",296,[[["self"],["exprasync"]]]],[11,"visit_expr_await","","",296,[[["self"],["exprawait"]]]],[11,"visit_expr_binary","","",296,[[["self"],["exprbinary"]]]],[11,"visit_expr_block","","",296,[[["exprblock"],["self"]]]],[11,"visit_expr_box","","",296,[[["self"],["exprbox"]]]],[11,"visit_expr_break","","",296,[[["self"],["exprbreak"]]]],[11,"visit_expr_call","","",296,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",296,[[["self"],["exprcast"]]]],[11,"visit_expr_closure","","",296,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue","","",296,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field","","",296,[[["self"],["exprfield"]]]],[11,"visit_expr_for_loop","","",296,[[["exprforloop"],["self"]]]],[11,"visit_expr_group","","",296,[[["self"],["exprgroup"]]]],[11,"visit_expr_if","","",296,[[["self"],["exprif"]]]],[11,"visit_expr_index","","",296,[[["self"],["exprindex"]]]],[11,"visit_expr_let","","",296,[[["self"],["exprlet"]]]],[11,"visit_expr_lit","","",296,[[["self"],["exprlit"]]]],[11,"visit_expr_loop","","",296,[[["exprloop"],["self"]]]],[11,"visit_expr_macro","","",296,[[["self"],["exprmacro"]]]],[11,"visit_expr_match","","",296,[[["exprmatch"],["self"]]]],[11,"visit_expr_method_call","","",296,[[["exprmethodcall"],["self"]]]],[11,"visit_expr_paren","","",296,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",296,[[["self"],["exprpath"]]]],[11,"visit_expr_range","","",296,[[["exprrange"],["self"]]]],[11,"visit_expr_reference","","",296,[[["exprreference"],["self"]]]],[11,"visit_expr_repeat","","",296,[[["self"],["exprrepeat"]]]],[11,"visit_expr_return","","",296,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct","","",296,[[["self"],["exprstruct"]]]],[11,"visit_expr_try","","",296,[[["self"],["exprtry"]]]],[11,"visit_expr_try_block","","",296,[[["self"],["exprtryblock"]]]],[11,"visit_expr_tuple","","",296,[[["self"],["exprtuple"]]]],[11,"visit_expr_type","","",296,[[["self"],["exprtype"]]]],[11,"visit_expr_unary","","",296,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe","","",296,[[["self"],["exprunsafe"]]]],[11,"visit_expr_while","","",296,[[["exprwhile"],["self"]]]],[11,"visit_expr_yield","","",296,[[["expryield"],["self"]]]],[11,"visit_field","","",296,[[["self"],["field"]]]],[11,"visit_field_pat","","",296,[[["fieldpat"],["self"]]]],[11,"visit_field_value","","",296,[[["self"],["fieldvalue"]]]],[11,"visit_fields","","",296,[[["self"],["fields"]]]],[11,"visit_fields_named","","",296,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",296,[[["fieldsunnamed"],["self"]]]],[11,"visit_file","","",296,[[["self"],["file"]]]],[11,"visit_fn_arg","","",296,[[["self"],["fnarg"]]]],[11,"visit_foreign_item","","",296,[[["self"],["foreignitem"]]]],[11,"visit_foreign_item_fn","","",296,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro","","",296,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static","","",296,[[["self"],["foreignitemstatic"]]]],[11,"visit_foreign_item_type","","",296,[[["self"],["foreignitemtype"]]]],[11,"visit_generic_argument","","",296,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument","","",296,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param","","",296,[[["self"],["genericparam"]]]],[11,"visit_generics","","",296,[[["self"],["generics"]]]],[11,"visit_ident","","",296,[[["self"],["ident"]]]],[11,"visit_impl_item","","",296,[[["implitem"],["self"]]]],[11,"visit_impl_item_const","","",296,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_macro","","",296,[[["self"],["implitemmacro"]]]],[11,"visit_impl_item_method","","",296,[[["self"],["implitemmethod"]]]],[11,"visit_impl_item_type","","",296,[[["self"],["implitemtype"]]]],[11,"visit_index","","",296,[[["self"],["index"]]]],[11,"visit_item","","",296,[[["self"],["item"]]]],[11,"visit_item_const","","",296,[[["self"],["itemconst"]]]],[11,"visit_item_enum","","",296,[[["self"],["itemenum"]]]],[11,"visit_item_extern_crate","","",296,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn","","",296,[[["self"],["itemfn"]]]],[11,"visit_item_foreign_mod","","",296,[[["self"],["itemforeignmod"]]]],[11,"visit_item_impl","","",296,[[["itemimpl"],["self"]]]],[11,"visit_item_macro","","",296,[[["self"],["itemmacro"]]]],[11,"visit_item_macro2","","",296,[[["self"],["itemmacro2"]]]],[11,"visit_item_mod","","",296,[[["self"],["itemmod"]]]],[11,"visit_item_static","","",296,[[["self"],["itemstatic"]]]],[11,"visit_item_struct","","",296,[[["self"],["itemstruct"]]]],[11,"visit_item_trait","","",296,[[["self"],["itemtrait"]]]],[11,"visit_item_trait_alias","","",296,[[["self"],["itemtraitalias"]]]],[11,"visit_item_type","","",296,[[["self"],["itemtype"]]]],[11,"visit_item_union","","",296,[[["self"],["itemunion"]]]],[11,"visit_item_use","","",296,[[["self"],["itemuse"]]]],[11,"visit_label","","",296,[[["label"],["self"]]]],[11,"visit_lifetime","","",296,[[["lifetime"],["self"]]]],[11,"visit_lifetime_def","","",296,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",296,[[["lit"],["self"]]]],[11,"visit_lit_bool","","",296,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",296,[[["litbyte"],["self"]]]],[11,"visit_lit_byte_str","","",296,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",296,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",296,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",296,[[["self"],["litint"]]]],[11,"visit_lit_str","","",296,[[["self"],["litstr"]]]],[11,"visit_local","","",296,[[["self"],["local"]]]],[11,"visit_macro","","",296,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",296,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",296,[[["member"],["self"]]]],[11,"visit_meta","","",296,[[["meta"],["self"]]]],[11,"visit_meta_list","","",296,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",296,[[["self"],["metanamevalue"]]]],[11,"visit_method_turbofish","","",296,[[["methodturbofish"],["self"]]]],[11,"visit_nested_meta","","",296,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",296,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat","","",296,[[["pat"],["self"]]]],[11,"visit_pat_box","","",296,[[["self"],["patbox"]]]],[11,"visit_pat_ident","","",296,[[["self"],["patident"]]]],[11,"visit_pat_lit","","",296,[[["patlit"],["self"]]]],[11,"visit_pat_macro","","",296,[[["self"],["patmacro"]]]],[11,"visit_pat_or","","",296,[[["self"],["pator"]]]],[11,"visit_pat_path","","",296,[[["self"],["patpath"]]]],[11,"visit_pat_range","","",296,[[["self"],["patrange"]]]],[11,"visit_pat_reference","","",296,[[["self"],["patreference"]]]],[11,"visit_pat_rest","","",296,[[["self"],["patrest"]]]],[11,"visit_pat_slice","","",296,[[["self"],["patslice"]]]],[11,"visit_pat_struct","","",296,[[["self"],["patstruct"]]]],[11,"visit_pat_tuple","","",296,[[["pattuple"],["self"]]]],[11,"visit_pat_tuple_struct","","",296,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_type","","",296,[[["self"],["pattype"]]]],[11,"visit_pat_wild","","",296,[[["self"],["patwild"]]]],[11,"visit_path","","",296,[[["path"],["self"]]]],[11,"visit_path_arguments","","",296,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",296,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",296,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",296,[[["predicatelifetime"],["self"]]]],[11,"visit_predicate_type","","",296,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",296,[[["self"],["qself"]]]],[11,"visit_range_limits","","",296,[[["self"],["rangelimits"]]]],[11,"visit_receiver","","",296,[[["self"],["receiver"]]]],[11,"visit_return_type","","",296,[[["returntype"],["self"]]]],[11,"visit_signature","","",296,[[["signature"],["self"]]]],[11,"visit_span","","",296,[[["self"],["span"]]]],[11,"visit_stmt","","",296,[[["self"],["stmt"]]]],[11,"visit_trait_bound","","",296,[[["traitbound"],["self"]]]],[11,"visit_trait_bound_modifier","","",296,[[["self"],["traitboundmodifier"]]]],[11,"visit_trait_item","","",296,[[["self"],["traititem"]]]],[11,"visit_trait_item_const","","",296,[[["self"],["traititemconst"]]]],[11,"visit_trait_item_macro","","",296,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method","","",296,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type","","",296,[[["traititemtype"],["self"]]]],[11,"visit_type","","",296,[[["self"],["type"]]]],[11,"visit_type_array","","",296,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",296,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",296,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",296,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",296,[[["typeinfer"],["self"]]]],[11,"visit_type_macro","","",296,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",296,[[["self"],["typenever"]]]],[11,"visit_type_param","","",296,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",296,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",296,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",296,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",296,[[["typeptr"],["self"]]]],[11,"visit_type_reference","","",296,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",296,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",296,[[["typetraitobject"],["self"]]]],[11,"visit_type_tuple","","",296,[[["self"],["typetuple"]]]],[11,"visit_un_op","","",296,[[["self"],["unop"]]]],[11,"visit_use_glob","","",296,[[["self"],["useglob"]]]],[11,"visit_use_group","","",296,[[["usegroup"],["self"]]]],[11,"visit_use_name","","",296,[[["self"],["usename"]]]],[11,"visit_use_path","","",296,[[["self"],["usepath"]]]],[11,"visit_use_rename","","",296,[[["self"],["userename"]]]],[11,"visit_use_tree","","",296,[[["self"],["usetree"]]]],[11,"visit_variadic","","",296,[[["self"],["variadic"]]]],[11,"visit_variant","","",296,[[["variant"],["self"]]]],[11,"visit_vis_crate","","",296,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",296,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",296,[[["visrestricted"],["self"]]]],[11,"visit_visibility","","",296,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",296,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",296,[[["self"],["wherepredicate"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[3,"Nothing","","An empty syntax tree node that consumes no tokens when…",null,null],[0,"discouraged","","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",297,[[["self"]]]],[6,"Result","syn::parse","The result of a Syn parser.",null,null],[6,"ParseStream","","Input to a Syn parser function.",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",298,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",299,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",299,[[["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",299,[[["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",299,[[["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",300,[[["display"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",301,[[["self"]],[["parse"],["result"]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",301,[[["self"]],["result"]]],[11,"peek","","Looks at the next token in the parse stream to determine…",301,[[["self"],["peek"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",301,[[["self"],["peek"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",301,[[["self"],["peek"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",301,[[["self"]],[["result",["punctuated"]],["punctuated"]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",301,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",301,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",301,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",301,[[["self"],["display"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",301,[[["self"],["f"]],["result"]]],[11,"span","","Returns the `Span` of the next token in the parse stream,…",301,[[["self"]],["span"]]],[11,"cursor","","Provides low-level access to the token representation…",301,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",302,[[["span"],["display"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",302,[[["display"],["totokens"]],["self"]]],[11,"span","","The source location of the error.",302,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",302,[[["self"]],["tokenstream"]]],[11,"combine","","Add another error message to self such that when…",302,[[["self"],["error"]]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"peek","","",303,[[["cursor"]],["bool"]]],[11,"display","","",303,[[],["str"]]],[11,"span","","",303,[[["self"]],["span"]]],[11,"from","","",303,[[["t"]],["t"]]],[11,"into","","",303,[[],["u"]]],[11,"to_owned","","",303,[[["self"]],["t"]]],[11,"clone_into","","",303,[[["self"],["t"]]]],[11,"to_string","","",303,[[["self"]],["string"]]],[11,"try_from","","",303,[[["u"]],["result"]]],[11,"try_into","","",303,[[],["result"]]],[11,"borrow","","",303,[[["self"]],["t"]]],[11,"borrow_mut","","",303,[[["self"]],["t"]]],[11,"type_id","","",303,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"span","","",35,[[["self"]],["span"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"span","","",36,[[["self"]],["span"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"span","","",37,[[["self"]],["span"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"span","","",62,[[["self"]],["span"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"span","","",63,[[["self"]],["span"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",304,[[["self"]],["span"]]],[11,"from","","",304,[[["t"]],["t"]]],[11,"into","","",304,[[],["u"]]],[11,"to_owned","","",304,[[["self"]],["t"]]],[11,"clone_into","","",304,[[["self"],["t"]]]],[11,"try_from","","",304,[[["u"]],["result"]]],[11,"try_into","","",304,[[],["result"]]],[11,"borrow","","",304,[[["self"]],["t"]]],[11,"borrow_mut","","",304,[[["self"]],["t"]]],[11,"type_id","","",304,[[["self"]],["typeid"]]],[11,"span","","",305,[[["self"]],["span"]]],[11,"from","","",305,[[["t"]],["t"]]],[11,"into","","",305,[[],["u"]]],[11,"to_owned","","",305,[[["self"]],["t"]]],[11,"clone_into","","",305,[[["self"],["t"]]]],[11,"try_from","","",305,[[["u"]],["result"]]],[11,"try_into","","",305,[[],["result"]]],[11,"borrow","","",305,[[["self"]],["t"]]],[11,"borrow_mut","","",305,[[["self"]],["t"]]],[11,"type_id","","",305,[[["self"]],["typeid"]]],[11,"span","","",283,[[["self"]],["span"]]],[11,"from","","",283,[[["t"]],["t"]]],[11,"into","","",283,[[],["u"]]],[11,"to_owned","","",283,[[["self"]],["t"]]],[11,"clone_into","","",283,[[["self"],["t"]]]],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"try_into","","",283,[[],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"type_id","","",283,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"span","","",74,[[["self"]],["span"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"span","","",75,[[["self"]],["span"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"span","","",77,[[["self"]],["span"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"span","","",78,[[["self"]],["span"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"span","","",79,[[["self"]],["span"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"to_string","","",100,[[["self"]],["string"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"span","","",286,[[["self"]],["span"]]],[11,"from","","",286,[[["t"]],["t"]]],[11,"into","","",286,[[],["u"]]],[11,"to_owned","","",286,[[["self"]],["t"]]],[11,"clone_into","","",286,[[["self"],["t"]]]],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"try_into","","",286,[[],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"type_id","","",286,[[["self"]],["typeid"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"span","","",285,[[["self"]],["span"]]],[11,"from","","",285,[[["t"]],["t"]]],[11,"into","","",285,[[],["u"]]],[11,"to_owned","","",285,[[["self"]],["t"]]],[11,"clone_into","","",285,[[["self"],["t"]]]],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"try_into","","",285,[[],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"type_id","","",285,[[["self"]],["typeid"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"span","","",287,[[["self"]],["span"]]],[11,"from","","",287,[[["t"]],["t"]]],[11,"into","","",287,[[],["u"]]],[11,"to_owned","","",287,[[["self"]],["t"]]],[11,"clone_into","","",287,[[["self"],["t"]]]],[11,"try_from","","",287,[[["u"]],["result"]]],[11,"try_into","","",287,[[],["result"]]],[11,"borrow","","",287,[[["self"]],["t"]]],[11,"borrow_mut","","",287,[[["self"]],["t"]]],[11,"type_id","","",287,[[["self"]],["typeid"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"span","","",289,[[["self"]],["span"]]],[11,"from","","",289,[[["t"]],["t"]]],[11,"into","","",289,[[],["u"]]],[11,"to_owned","","",289,[[["self"]],["t"]]],[11,"clone_into","","",289,[[["self"],["t"]]]],[11,"to_string","","",289,[[["self"]],["string"]]],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"try_into","","",289,[[],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"type_id","","",289,[[["self"]],["typeid"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"span","","",288,[[["self"]],["span"]]],[11,"from","","",288,[[["t"]],["t"]]],[11,"into","","",288,[[],["u"]]],[11,"to_owned","","",288,[[["self"]],["t"]]],[11,"clone_into","","",288,[[["self"],["t"]]]],[11,"to_string","","",288,[[["self"]],["string"]]],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"try_into","","",288,[[],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"type_id","","",288,[[["self"]],["typeid"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"span","","",284,[[["self"]],["span"]]],[11,"from","","",284,[[["t"]],["t"]]],[11,"into","","",284,[[],["u"]]],[11,"to_owned","","",284,[[["self"]],["t"]]],[11,"clone_into","","",284,[[["self"],["t"]]]],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"try_into","","",284,[[],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"type_id","","",284,[[["self"]],["typeid"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"span","","",132,[[["self"]],["span"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",302,[[["t"]],["t"]]],[11,"into","","",302,[[],["u"]]],[11,"into_iter","","",302,[[],["i"]]],[11,"to_owned","","",302,[[["self"]],["t"]]],[11,"clone_into","","",302,[[["self"],["t"]]]],[11,"to_string","","",302,[[["self"]],["string"]]],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"try_into","","",302,[[],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"type_id","","",302,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"into_iter","","",152,[[],["i"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"peek","syn::token","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"span","","",182,[[["self"]],["span"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"span","","",183,[[["self"]],["span"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"span","","",184,[[["self"]],["span"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"peek","","",190,[[["cursor"]],["bool"]]],[11,"display","","",190,[[],["str"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,[[["self"],["t"]]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,[[["self"],["t"]]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,[[["self"],["t"]]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,[[["self"],["t"]]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"span","","",197,[[["self"]],["span"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,[[["self"],["t"]]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"span","","",198,[[["self"]],["span"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,[[["self"],["t"]]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"span","","",199,[[["self"]],["span"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,[[["self"],["t"]]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"span","","",200,[[["self"]],["span"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,[[["self"],["t"]]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"span","","",201,[[["self"]],["span"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,[[["self"],["t"]]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"span","","",202,[[["self"]],["span"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,[[["self"],["t"]]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"span","","",203,[[["self"]],["span"]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[],["u"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,[[["self"],["t"]]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"span","","",204,[[["self"]],["span"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[],["u"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,[[["self"],["t"]]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"span","","",205,[[["self"]],["span"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"span","","",206,[[["self"]],["span"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"span","","",207,[[["self"]],["span"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,[[["self"],["t"]]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"span","","",210,[[["self"]],["span"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,[[["self"],["t"]]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"span","","",211,[[["self"]],["span"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,[[["self"],["t"]]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"span","","",212,[[["self"]],["span"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"span","","",213,[[["self"]],["span"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,[[["self"],["t"]]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"span","","",214,[[["self"]],["span"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"span","","",215,[[["self"]],["span"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"span","","",216,[[["self"]],["span"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"span","","",217,[[["self"]],["span"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,[[["self"],["t"]]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"span","","",218,[[["self"]],["span"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,[[["self"],["t"]]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"span","","",219,[[["self"]],["span"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,[[["self"],["t"]]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"span","","",220,[[["self"]],["span"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,[[["self"],["t"]]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"span","","",221,[[["self"]],["span"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,[[["self"],["t"]]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"span","","",222,[[["self"]],["span"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,[[["self"],["t"]]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"span","","",223,[[["self"]],["span"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,[[["self"],["t"]]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"try_into","","",223,[[],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"type_id","","",223,[[["self"]],["typeid"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"span","","",224,[[["self"]],["span"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,[[["self"],["t"]]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"try_into","","",224,[[],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"type_id","","",224,[[["self"]],["typeid"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"span","","",225,[[["self"]],["span"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,[[["self"],["t"]]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"try_into","","",225,[[],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"type_id","","",225,[[["self"]],["typeid"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"span","","",226,[[["self"]],["span"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,[[["self"],["t"]]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"try_into","","",226,[[],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"type_id","","",226,[[["self"]],["typeid"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"span","","",227,[[["self"]],["span"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,[[["self"],["t"]]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"try_into","","",227,[[],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"type_id","","",227,[[["self"]],["typeid"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"span","","",228,[[["self"]],["span"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,[[["self"],["t"]]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"try_into","","",228,[[],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"type_id","","",228,[[["self"]],["typeid"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"span","","",229,[[["self"]],["span"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,[[["self"],["t"]]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"try_into","","",229,[[],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"type_id","","",229,[[["self"]],["typeid"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"span","","",230,[[["self"]],["span"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,[[["self"],["t"]]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"span","","",231,[[["self"]],["span"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,[[["self"],["t"]]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"span","","",232,[[["self"]],["span"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,[[["self"],["t"]]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"span","","",233,[[["self"]],["span"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,[[["self"],["t"]]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"span","","",234,[[["self"]],["span"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,[[["self"],["t"]]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"span","","",235,[[["self"]],["span"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,[[["self"],["t"]]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"try_into","","",235,[[],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"type_id","","",235,[[["self"]],["typeid"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"span","","",236,[[["self"]],["span"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,[[["self"],["t"]]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"try_into","","",236,[[],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"type_id","","",236,[[["self"]],["typeid"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"span","","",237,[[["self"]],["span"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,[[["self"],["t"]]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"try_into","","",237,[[],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"type_id","","",237,[[["self"]],["typeid"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"span","","",238,[[["self"]],["span"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,[[["self"],["t"]]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"try_into","","",238,[[],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"type_id","","",238,[[["self"]],["typeid"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"span","","",239,[[["self"]],["span"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,[[["self"],["t"]]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"try_into","","",239,[[],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"type_id","","",239,[[["self"]],["typeid"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,[[["self"],["t"]]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"try_into","","",240,[[],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"type_id","","",240,[[["self"]],["typeid"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,[[["self"],["t"]]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"try_into","","",241,[[],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"type_id","","",241,[[["self"]],["typeid"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"span","","",242,[[["self"]],["span"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[],["u"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,[[["self"],["t"]]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"try_into","","",242,[[],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"type_id","","",242,[[["self"]],["typeid"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"span","","",243,[[["self"]],["span"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[],["u"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,[[["self"],["t"]]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"try_into","","",243,[[],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"type_id","","",243,[[["self"]],["typeid"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"span","","",244,[[["self"]],["span"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[],["u"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,[[["self"],["t"]]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"try_into","","",244,[[],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"type_id","","",244,[[["self"]],["typeid"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"span","","",245,[[["self"]],["span"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[],["u"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,[[["self"],["t"]]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"try_into","","",245,[[],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"type_id","","",245,[[["self"]],["typeid"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"span","","",246,[[["self"]],["span"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[],["u"]]],[11,"to_owned","","",246,[[["self"]],["t"]]],[11,"clone_into","","",246,[[["self"],["t"]]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"try_into","","",246,[[],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"type_id","","",246,[[["self"]],["typeid"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"span","","",247,[[["self"]],["span"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[],["u"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,[[["self"],["t"]]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"try_into","","",247,[[],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"type_id","","",247,[[["self"]],["typeid"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"span","","",248,[[["self"]],["span"]]],[11,"from","","",248,[[["t"]],["t"]]],[11,"into","","",248,[[],["u"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,[[["self"],["t"]]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"try_into","","",248,[[],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"type_id","","",248,[[["self"]],["typeid"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"span","","",249,[[["self"]],["span"]]],[11,"from","","",249,[[["t"]],["t"]]],[11,"into","","",249,[[],["u"]]],[11,"to_owned","","",249,[[["self"]],["t"]]],[11,"clone_into","","",249,[[["self"],["t"]]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"try_into","","",249,[[],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"type_id","","",249,[[["self"]],["typeid"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"span","","",250,[[["self"]],["span"]]],[11,"from","","",250,[[["t"]],["t"]]],[11,"into","","",250,[[],["u"]]],[11,"to_owned","","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,[[["self"],["t"]]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"try_into","","",250,[[],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"type_id","","",250,[[["self"]],["typeid"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"span","","",251,[[["self"]],["span"]]],[11,"from","","",251,[[["t"]],["t"]]],[11,"into","","",251,[[],["u"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,[[["self"],["t"]]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"try_into","","",251,[[],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"type_id","","",251,[[["self"]],["typeid"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"span","","",252,[[["self"]],["span"]]],[11,"from","","",252,[[["t"]],["t"]]],[11,"into","","",252,[[],["u"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,[[["self"],["t"]]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"try_into","","",252,[[],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"type_id","","",252,[[["self"]],["typeid"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"span","","",253,[[["self"]],["span"]]],[11,"from","","",253,[[["t"]],["t"]]],[11,"into","","",253,[[],["u"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,[[["self"],["t"]]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"try_into","","",253,[[],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"type_id","","",253,[[["self"]],["typeid"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"span","","",254,[[["self"]],["span"]]],[11,"from","","",254,[[["t"]],["t"]]],[11,"into","","",254,[[],["u"]]],[11,"to_owned","","",254,[[["self"]],["t"]]],[11,"clone_into","","",254,[[["self"],["t"]]]],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"try_into","","",254,[[],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"type_id","","",254,[[["self"]],["typeid"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"span","","",255,[[["self"]],["span"]]],[11,"from","","",255,[[["t"]],["t"]]],[11,"into","","",255,[[],["u"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,[[["self"],["t"]]]],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"try_into","","",255,[[],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"type_id","","",255,[[["self"]],["typeid"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"span","","",256,[[["self"]],["span"]]],[11,"from","","",256,[[["t"]],["t"]]],[11,"into","","",256,[[],["u"]]],[11,"to_owned","","",256,[[["self"]],["t"]]],[11,"clone_into","","",256,[[["self"],["t"]]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"try_into","","",256,[[],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"type_id","","",256,[[["self"]],["typeid"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"span","","",257,[[["self"]],["span"]]],[11,"from","","",257,[[["t"]],["t"]]],[11,"into","","",257,[[],["u"]]],[11,"to_owned","","",257,[[["self"]],["t"]]],[11,"clone_into","","",257,[[["self"],["t"]]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"try_into","","",257,[[],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"type_id","","",257,[[["self"]],["typeid"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"span","","",258,[[["self"]],["span"]]],[11,"from","","",258,[[["t"]],["t"]]],[11,"into","","",258,[[],["u"]]],[11,"to_owned","","",258,[[["self"]],["t"]]],[11,"clone_into","","",258,[[["self"],["t"]]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"try_into","","",258,[[],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"type_id","","",258,[[["self"]],["typeid"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"span","","",259,[[["self"]],["span"]]],[11,"from","","",259,[[["t"]],["t"]]],[11,"into","","",259,[[],["u"]]],[11,"to_owned","","",259,[[["self"]],["t"]]],[11,"clone_into","","",259,[[["self"],["t"]]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"try_into","","",259,[[],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"type_id","","",259,[[["self"]],["typeid"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"span","","",260,[[["self"]],["span"]]],[11,"from","","",260,[[["t"]],["t"]]],[11,"into","","",260,[[],["u"]]],[11,"to_owned","","",260,[[["self"]],["t"]]],[11,"clone_into","","",260,[[["self"],["t"]]]],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"try_into","","",260,[[],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"type_id","","",260,[[["self"]],["typeid"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"span","","",261,[[["self"]],["span"]]],[11,"from","","",261,[[["t"]],["t"]]],[11,"into","","",261,[[],["u"]]],[11,"to_owned","","",261,[[["self"]],["t"]]],[11,"clone_into","","",261,[[["self"],["t"]]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"try_into","","",261,[[],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"type_id","","",261,[[["self"]],["typeid"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"span","","",262,[[["self"]],["span"]]],[11,"from","","",262,[[["t"]],["t"]]],[11,"into","","",262,[[],["u"]]],[11,"to_owned","","",262,[[["self"]],["t"]]],[11,"clone_into","","",262,[[["self"],["t"]]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"try_into","","",262,[[],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"type_id","","",262,[[["self"]],["typeid"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"span","","",263,[[["self"]],["span"]]],[11,"from","","",263,[[["t"]],["t"]]],[11,"into","","",263,[[],["u"]]],[11,"to_owned","","",263,[[["self"]],["t"]]],[11,"clone_into","","",263,[[["self"],["t"]]]],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"try_into","","",263,[[],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"type_id","","",263,[[["self"]],["typeid"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"span","","",264,[[["self"]],["span"]]],[11,"from","","",264,[[["t"]],["t"]]],[11,"into","","",264,[[],["u"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,[[["self"],["t"]]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"try_into","","",264,[[],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"type_id","","",264,[[["self"]],["typeid"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"span","","",265,[[["self"]],["span"]]],[11,"from","","",265,[[["t"]],["t"]]],[11,"into","","",265,[[],["u"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,[[["self"],["t"]]]],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"try_into","","",265,[[],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"type_id","","",265,[[["self"]],["typeid"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"span","","",266,[[["self"]],["span"]]],[11,"from","","",266,[[["t"]],["t"]]],[11,"into","","",266,[[],["u"]]],[11,"to_owned","","",266,[[["self"]],["t"]]],[11,"clone_into","","",266,[[["self"],["t"]]]],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"try_into","","",266,[[],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"type_id","","",266,[[["self"]],["typeid"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"span","","",267,[[["self"]],["span"]]],[11,"from","","",267,[[["t"]],["t"]]],[11,"into","","",267,[[],["u"]]],[11,"to_owned","","",267,[[["self"]],["t"]]],[11,"clone_into","","",267,[[["self"],["t"]]]],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"try_into","","",267,[[],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"type_id","","",267,[[["self"]],["typeid"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"span","","",268,[[["self"]],["span"]]],[11,"from","","",268,[[["t"]],["t"]]],[11,"into","","",268,[[],["u"]]],[11,"to_owned","","",268,[[["self"]],["t"]]],[11,"clone_into","","",268,[[["self"],["t"]]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"try_into","","",268,[[],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"type_id","","",268,[[["self"]],["typeid"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"span","","",269,[[["self"]],["span"]]],[11,"from","","",269,[[["t"]],["t"]]],[11,"into","","",269,[[],["u"]]],[11,"to_owned","","",269,[[["self"]],["t"]]],[11,"clone_into","","",269,[[["self"],["t"]]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"try_into","","",269,[[],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"type_id","","",269,[[["self"]],["typeid"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"span","","",270,[[["self"]],["span"]]],[11,"from","","",270,[[["t"]],["t"]]],[11,"into","","",270,[[],["u"]]],[11,"to_owned","","",270,[[["self"]],["t"]]],[11,"clone_into","","",270,[[["self"],["t"]]]],[11,"try_from","","",270,[[["u"]],["result"]]],[11,"try_into","","",270,[[],["result"]]],[11,"borrow","","",270,[[["self"]],["t"]]],[11,"borrow_mut","","",270,[[["self"]],["t"]]],[11,"type_id","","",270,[[["self"]],["typeid"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"span","","",271,[[["self"]],["span"]]],[11,"from","","",271,[[["t"]],["t"]]],[11,"into","","",271,[[],["u"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,[[["self"],["t"]]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"try_into","","",271,[[],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"type_id","","",271,[[["self"]],["typeid"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"span","","",272,[[["self"]],["span"]]],[11,"from","","",272,[[["t"]],["t"]]],[11,"into","","",272,[[],["u"]]],[11,"to_owned","","",272,[[["self"]],["t"]]],[11,"clone_into","","",272,[[["self"],["t"]]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"try_into","","",272,[[],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"type_id","","",272,[[["self"]],["typeid"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"span","","",273,[[["self"]],["span"]]],[11,"from","","",273,[[["t"]],["t"]]],[11,"into","","",273,[[],["u"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,[[["self"],["t"]]]],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"try_into","","",273,[[],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"type_id","","",273,[[["self"]],["typeid"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"span","","",274,[[["self"]],["span"]]],[11,"from","","",274,[[["t"]],["t"]]],[11,"into","","",274,[[],["u"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,[[["self"],["t"]]]],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"try_into","","",274,[[],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"type_id","","",274,[[["self"]],["typeid"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"span","","",275,[[["self"]],["span"]]],[11,"from","","",275,[[["t"]],["t"]]],[11,"into","","",275,[[],["u"]]],[11,"to_owned","","",275,[[["self"]],["t"]]],[11,"clone_into","","",275,[[["self"],["t"]]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"try_into","","",275,[[],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"type_id","","",275,[[["self"]],["typeid"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"span","","",276,[[["self"]],["span"]]],[11,"from","","",276,[[["t"]],["t"]]],[11,"into","","",276,[[],["u"]]],[11,"to_owned","","",276,[[["self"]],["t"]]],[11,"clone_into","","",276,[[["self"],["t"]]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"try_into","","",276,[[],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"type_id","","",276,[[["self"]],["typeid"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"span","","",277,[[["self"]],["span"]]],[11,"from","","",277,[[["t"]],["t"]]],[11,"into","","",277,[[],["u"]]],[11,"to_owned","","",277,[[["self"]],["t"]]],[11,"clone_into","","",277,[[["self"],["t"]]]],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"try_into","","",277,[[],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"type_id","","",277,[[["self"]],["typeid"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"span","","",278,[[["self"]],["span"]]],[11,"from","","",278,[[["t"]],["t"]]],[11,"into","","",278,[[],["u"]]],[11,"to_owned","","",278,[[["self"]],["t"]]],[11,"clone_into","","",278,[[["self"],["t"]]]],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"try_into","","",278,[[],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"type_id","","",278,[[["self"]],["typeid"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"from","","",279,[[["t"]],["t"]]],[11,"into","","",279,[[],["u"]]],[11,"to_owned","","",279,[[["self"]],["t"]]],[11,"clone_into","","",279,[[["self"],["t"]]]],[11,"try_from","","",279,[[["u"]],["result"]]],[11,"try_into","","",279,[[],["result"]]],[11,"borrow","","",279,[[["self"]],["t"]]],[11,"borrow_mut","","",279,[[["self"]],["t"]]],[11,"type_id","","",279,[[["self"]],["typeid"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"from","","",280,[[["t"]],["t"]]],[11,"into","","",280,[[],["u"]]],[11,"to_owned","","",280,[[["self"]],["t"]]],[11,"clone_into","","",280,[[["self"],["t"]]]],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"try_into","","",280,[[],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"type_id","","",280,[[["self"]],["typeid"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"from","","",281,[[["t"]],["t"]]],[11,"into","","",281,[[],["u"]]],[11,"to_owned","","",281,[[["self"]],["t"]]],[11,"clone_into","","",281,[[["self"],["t"]]]],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"try_into","","",281,[[],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"type_id","","",281,[[["self"]],["typeid"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"from","","",282,[[["t"]],["t"]]],[11,"into","","",282,[[],["u"]]],[11,"to_owned","","",282,[[["self"]],["t"]]],[11,"clone_into","","",282,[[["self"],["t"]]]],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"try_into","","",282,[[],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"type_id","","",282,[[["self"]],["typeid"]]],[11,"from","syn::buffer","",290,[[["t"]],["t"]]],[11,"into","","",290,[[],["u"]]],[11,"try_from","","",290,[[["u"]],["result"]]],[11,"try_into","","",290,[[],["result"]]],[11,"borrow","","",290,[[["self"]],["t"]]],[11,"borrow_mut","","",290,[[["self"]],["t"]]],[11,"type_id","","",290,[[["self"]],["typeid"]]],[11,"from","","",291,[[["t"]],["t"]]],[11,"into","","",291,[[],["u"]]],[11,"to_owned","","",291,[[["self"]],["t"]]],[11,"clone_into","","",291,[[["self"],["t"]]]],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"try_into","","",291,[[],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"type_id","","",291,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",294,[[["self"]],["span"]]],[11,"from","","",294,[[["t"]],["t"]]],[11,"into","","",294,[[],["u"]]],[11,"into_iter","","",294,[[],["i"]]],[11,"to_owned","","",294,[[["self"]],["t"]]],[11,"clone_into","","",294,[[["self"],["t"]]]],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"try_into","","",294,[[],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"type_id","","",294,[[["self"]],["typeid"]]],[11,"from","","",306,[[["t"]],["t"]]],[11,"into","","",306,[[],["u"]]],[11,"into_iter","","",306,[[],["i"]]],[11,"to_owned","","",306,[[["self"]],["t"]]],[11,"clone_into","","",306,[[["self"],["t"]]]],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"try_into","","",306,[[],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"type_id","","",306,[[["self"]],["typeid"]]],[11,"from","","",307,[[["t"]],["t"]]],[11,"into","","",307,[[],["u"]]],[11,"into_iter","","",307,[[],["i"]]],[11,"try_from","","",307,[[["u"]],["result"]]],[11,"try_into","","",307,[[],["result"]]],[11,"borrow","","",307,[[["self"]],["t"]]],[11,"borrow_mut","","",307,[[["self"]],["t"]]],[11,"type_id","","",307,[[["self"]],["typeid"]]],[11,"from","","",308,[[["t"]],["t"]]],[11,"into","","",308,[[],["u"]]],[11,"into_iter","","",308,[[],["i"]]],[11,"to_owned","","",308,[[["self"]],["t"]]],[11,"clone_into","","",308,[[["self"],["t"]]]],[11,"try_from","","",308,[[["u"]],["result"]]],[11,"try_into","","",308,[[],["result"]]],[11,"borrow","","",308,[[["self"]],["t"]]],[11,"borrow_mut","","",308,[[["self"]],["t"]]],[11,"type_id","","",308,[[["self"]],["typeid"]]],[11,"from","","",309,[[["t"]],["t"]]],[11,"into","","",309,[[],["u"]]],[11,"into_iter","","",309,[[],["i"]]],[11,"to_owned","","",309,[[["self"]],["t"]]],[11,"clone_into","","",309,[[["self"],["t"]]]],[11,"try_from","","",309,[[["u"]],["result"]]],[11,"try_into","","",309,[[],["result"]]],[11,"borrow","","",309,[[["self"]],["t"]]],[11,"borrow_mut","","",309,[[["self"]],["t"]]],[11,"type_id","","",309,[[["self"]],["typeid"]]],[11,"from","","",310,[[["t"]],["t"]]],[11,"into","","",310,[[],["u"]]],[11,"into_iter","","",310,[[],["i"]]],[11,"to_owned","","",310,[[["self"]],["t"]]],[11,"clone_into","","",310,[[["self"],["t"]]]],[11,"try_from","","",310,[[["u"]],["result"]]],[11,"try_into","","",310,[[],["result"]]],[11,"borrow","","",310,[[["self"]],["t"]]],[11,"borrow_mut","","",310,[[["self"]],["t"]]],[11,"type_id","","",310,[[["self"]],["typeid"]]],[11,"from","","",311,[[["t"]],["t"]]],[11,"into","","",311,[[],["u"]]],[11,"into_iter","","",311,[[],["i"]]],[11,"try_from","","",311,[[["u"]],["result"]]],[11,"try_into","","",311,[[],["result"]]],[11,"borrow","","",311,[[["self"]],["t"]]],[11,"borrow_mut","","",311,[[["self"]],["t"]]],[11,"type_id","","",311,[[["self"]],["typeid"]]],[11,"span","","",293,[[["self"]],["span"]]],[11,"from","","",293,[[["t"]],["t"]]],[11,"into","","",293,[[],["u"]]],[11,"to_owned","","",293,[[["self"]],["t"]]],[11,"clone_into","","",293,[[["self"],["t"]]]],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"try_into","","",293,[[],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"type_id","","",293,[[["self"]],["typeid"]]],[11,"from","syn::parse","",312,[[["t"]],["t"]]],[11,"into","","",312,[[],["u"]]],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"try_into","","",312,[[],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"type_id","","",312,[[["self"]],["typeid"]]],[11,"from","","",301,[[["t"]],["t"]]],[11,"into","","",301,[[],["u"]]],[11,"to_string","","",301,[[["self"]],["string"]]],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"try_into","","",301,[[],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"type_id","","",301,[[["self"]],["typeid"]]],[11,"from","","",300,[[["t"]],["t"]]],[11,"into","","",300,[[],["u"]]],[11,"to_owned","","",300,[[["self"]],["t"]]],[11,"clone_into","","",300,[[["self"],["t"]]]],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"try_into","","",300,[[],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"type_id","","",300,[[["self"]],["typeid"]]],[11,"from","","",313,[[["t"]],["t"]]],[11,"into","","",313,[[],["u"]]],[11,"try_from","","",313,[[["u"]],["result"]]],[11,"try_into","","",313,[[],["result"]]],[11,"borrow","","",313,[[["self"]],["t"]]],[11,"borrow_mut","","",313,[[["self"]],["t"]]],[11,"type_id","","",313,[[["self"]],["typeid"]]],[11,"fmt","syn","",303,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",303,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",303,[[["self"],["ident"]],["ordering"]]],[11,"clone","","",303,[[["self"]],["ident"]]],[11,"eq","","",303,[[["self"],["ident"]],["bool"]]],[11,"eq","","",303,[[["t"],["self"]],["bool"]]],[11,"hash","","",303,[[["self"],["h"]]]],[11,"partial_cmp","","",303,[[["self"],["ident"]],[["option",["ordering"]],["ordering"]]]],[11,"to_tokens","","",303,[[["tokenstream"],["self"]]]],[11,"span","","",303,[[["self"]],[["option",["span"]],["span"]]]],[11,"fmt","","",303,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"peek","syn::token","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"peek","","",190,[[["cursor"]],["bool"]]],[11,"display","","",190,[[],["str"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"peek","syn","",303,[[["cursor"]],["bool"]]],[11,"display","","",303,[[],["str"]]],[11,"parse_any","","",303,[[["parsestream"]],["result"]]],[11,"unraw","","",303,[[["self"]],["ident"]]],[11,"advance_to","syn::parse","",301,[[["self"]]]],[11,"parse","syn::token","",180,[[["parsestream"]],["result"]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"parse","","",182,[[["parsestream"]],["result"]]],[11,"parse","","",183,[[["parsestream"]],["result"]]],[11,"parse","","",184,[[["parsestream"]],["result"]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"parse","","",186,[[["parsestream"]],["result"]]],[11,"parse","","",187,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",189,[[["parsestream"]],["result"]]],[11,"parse","","",190,[[["parsestream"]],["result"]]],[11,"parse","","",191,[[["parsestream"]],["result"]]],[11,"parse","","",192,[[["parsestream"]],["result"]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"parse","","",196,[[["parsestream"]],["result"]]],[11,"parse","","",197,[[["parsestream"]],["result"]]],[11,"parse","","",198,[[["parsestream"]],["result"]]],[11,"parse","","",199,[[["parsestream"]],["result"]]],[11,"parse","","",200,[[["parsestream"]],["result"]]],[11,"parse","","",201,[[["parsestream"]],["result"]]],[11,"parse","","",202,[[["parsestream"]],["result"]]],[11,"parse","","",203,[[["parsestream"]],["result"]]],[11,"parse","","",204,[[["parsestream"]],["result"]]],[11,"parse","","",205,[[["parsestream"]],["result"]]],[11,"parse","","",206,[[["parsestream"]],["result"]]],[11,"parse","","",207,[[["parsestream"]],["result"]]],[11,"parse","","",208,[[["parsestream"]],["result"]]],[11,"parse","","",209,[[["parsestream"]],["result"]]],[11,"parse","","",210,[[["parsestream"]],["result"]]],[11,"parse","","",211,[[["parsestream"]],["result"]]],[11,"parse","","",212,[[["parsestream"]],["result"]]],[11,"parse","","",213,[[["parsestream"]],["result"]]],[11,"parse","","",214,[[["parsestream"]],["result"]]],[11,"parse","","",215,[[["parsestream"]],["result"]]],[11,"parse","","",216,[[["parsestream"]],["result"]]],[11,"parse","","",217,[[["parsestream"]],["result"]]],[11,"parse","","",218,[[["parsestream"]],["result"]]],[11,"parse","","",219,[[["parsestream"]],["result"]]],[11,"parse","","",220,[[["parsestream"]],["result"]]],[11,"parse","","",221,[[["parsestream"]],["result"]]],[11,"parse","","",222,[[["parsestream"]],["result"]]],[11,"parse","","",223,[[["parsestream"]],["result"]]],[11,"parse","","",224,[[["parsestream"]],["result"]]],[11,"parse","","",225,[[["parsestream"]],["result"]]],[11,"parse","","",226,[[["parsestream"]],["result"]]],[11,"parse","","",227,[[["parsestream"]],["result"]]],[11,"parse","","",228,[[["parsestream"]],["result"]]],[11,"parse","","",229,[[["parsestream"]],["result"]]],[11,"parse","","",230,[[["parsestream"]],["result"]]],[11,"parse","","",231,[[["parsestream"]],["result"]]],[11,"parse","","",232,[[["parsestream"]],["result"]]],[11,"parse","","",233,[[["parsestream"]],["result"]]],[11,"parse","","",234,[[["parsestream"]],["result"]]],[11,"parse","","",235,[[["parsestream"]],["result"]]],[11,"parse","","",236,[[["parsestream"]],["result"]]],[11,"parse","","",237,[[["parsestream"]],["result"]]],[11,"parse","","",238,[[["parsestream"]],["result"]]],[11,"parse","","",239,[[["parsestream"]],["result"]]],[11,"parse","","",240,[[["parsestream"]],["result"]]],[11,"parse","","",241,[[["parsestream"]],["result"]]],[11,"parse","","",242,[[["parsestream"]],["result"]]],[11,"parse","","",243,[[["parsestream"]],["result"]]],[11,"parse","","",244,[[["parsestream"]],["result"]]],[11,"parse","","",245,[[["parsestream"]],["result"]]],[11,"parse","","",246,[[["parsestream"]],["result"]]],[11,"parse","","",247,[[["parsestream"]],["result"]]],[11,"parse","","",248,[[["parsestream"]],["result"]]],[11,"parse","","",249,[[["parsestream"]],["result"]]],[11,"parse","","",250,[[["parsestream"]],["result"]]],[11,"parse","","",251,[[["parsestream"]],["result"]]],[11,"parse","","",252,[[["parsestream"]],["result"]]],[11,"parse","","",253,[[["parsestream"]],["result"]]],[11,"parse","","",254,[[["parsestream"]],["result"]]],[11,"parse","","",255,[[["parsestream"]],["result"]]],[11,"parse","","",256,[[["parsestream"]],["result"]]],[11,"parse","","",257,[[["parsestream"]],["result"]]],[11,"parse","","",258,[[["parsestream"]],["result"]]],[11,"parse","","",259,[[["parsestream"]],["result"]]],[11,"parse","","",260,[[["parsestream"]],["result"]]],[11,"parse","","",261,[[["parsestream"]],["result"]]],[11,"parse","","",262,[[["parsestream"]],["result"]]],[11,"parse","","",263,[[["parsestream"]],["result"]]],[11,"parse","","",264,[[["parsestream"]],["result"]]],[11,"parse","","",265,[[["parsestream"]],["result"]]],[11,"parse","","",266,[[["parsestream"]],["result"]]],[11,"parse","","",267,[[["parsestream"]],["result"]]],[11,"parse","","",268,[[["parsestream"]],["result"]]],[11,"parse","","",269,[[["parsestream"]],["result"]]],[11,"parse","","",270,[[["parsestream"]],["result"]]],[11,"parse","","",271,[[["parsestream"]],["result"]]],[11,"parse","","",272,[[["parsestream"]],["result"]]],[11,"parse","","",273,[[["parsestream"]],["result"]]],[11,"parse","","",274,[[["parsestream"]],["result"]]],[11,"parse","","",275,[[["parsestream"]],["result"]]],[11,"parse","","",276,[[["parsestream"]],["result"]]],[11,"parse","","",277,[[["parsestream"]],["result"]]],[11,"parse","","",278,[[["parsestream"]],["result"]]],[11,"parse","syn","",303,[[["parsestream"]],["result"]]],[11,"parse","","",150,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",33,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",34,[[["parsestream"]],["result"]]],[11,"parse","","",36,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",14,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",37,[[["parsestream"]],["result"]]],[11,"parse","","",47,[[["parsestream"]],["result"]]],[11,"parse","","",19,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",24,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",25,[[["parsestream"]],["result"]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",15,[[["parsestream"]],["result"]]],[11,"parse","","",16,[[["parsestream"]],["result"]]],[11,"parse","","",27,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",26,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",35,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",12,[[["parsestream"]],["result"]]],[11,"parse","","",11,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",157,[[["parsestream"]],["result"]]],[11,"parse","","",10,[[["parsestream"]],[["result",["arm"]],["arm"]]]],[11,"parse","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",56,[[["parsestream"]],["result"]]],[11,"parse","","",158,[[["parsestream"]],["result"]]],[11,"parse","","",57,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",62,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",61,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",55,[[["parsestream"]],["result"]]],[11,"parse","","",63,[[["parsestream"]],["result"]]],[11,"parse","","",161,[[["parsestream"]],["result"]]],[11,"parse","","",165,[[["parsestream"]],["result"]]],[11,"parse","","",78,[[["parsestream"]],["result"]]],[11,"parse","","",79,[[["parsestream"]],["result"]]],[11,"parse","","",74,[[["parsestream"]],["result"]]],[11,"parse","","",87,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],[["result",["usetree"]],["usetree"]]]],[11,"parse","","",81,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",75,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",76,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",64,[[["parsestream"]],["result"]]],[11,"parse","","",66,[[["parsestream"]],["result"]]],[11,"parse","","",67,[[["parsestream"]],["result"]]],[11,"parse","","",65,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",82,[[["parsestream"]],["result"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"parse","","",86,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",84,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",77,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",68,[[["parsestream"]],["result"]]],[11,"parse","","",70,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",69,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",284,[[["parsestream"]],["result"]]],[11,"parse","","",285,[[["parsestream"]],["result"]]],[11,"parse","","",286,[[["parsestream"]],["result"]]],[11,"parse","","",287,[[["parsestream"]],["result"]]],[11,"parse","","",288,[[["parsestream"]],["result"]]],[11,"parse","","",289,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",122,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",120,[[["parsestream"]],["result"]]],[11,"parse","","",121,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",124,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",119,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",114,[[["parsestream"]],["result"]]],[11,"parse","","",113,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","syn::parse","",313,[[["parsestream"]],["result"]]],[11,"drop","","",301,[[["self"]]]],[11,"from","syn","",303,[[["selfvalue"]],["ident"]]],[11,"from","","",303,[[["selftype"]],["ident"]]],[11,"from","","",303,[[["super"]],["ident"]]],[11,"from","","",303,[[["crate"]],["ident"]]],[11,"from","","",303,[[["extern"]],["ident"]]],[11,"from","","",303,[[["underscore"]],["ident"]]],[11,"from","","",150,[[["path"]],["meta"]]],[11,"from","","",150,[[["metalist"]],["meta"]]],[11,"from","","",150,[[["metanamevalue"]],["meta"]]],[11,"from","","",151,[[["meta"]],["nestedmeta"]]],[11,"from","","",151,[[["lit"]],["nestedmeta"]]],[11,"from","","",152,[[["fieldsnamed"]],["fields"]]],[11,"from","","",152,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",153,[[["vispublic"]],["visibility"]]],[11,"from","","",153,[[["viscrate"]],["visibility"]]],[11,"from","","",153,[[["visrestricted"]],["visibility"]]],[11,"from","","",156,[[["exprarray"]],["expr"]]],[11,"from","","",156,[[["exprassign"]],["expr"]]],[11,"from","","",156,[[["exprassignop"]],["expr"]]],[11,"from","","",156,[[["exprasync"]],["expr"]]],[11,"from","","",156,[[["exprawait"]],["expr"]]],[11,"from","","",156,[[["exprbinary"]],["expr"]]],[11,"from","","",156,[[["exprblock"]],["expr"]]],[11,"from","","",156,[[["exprbox"]],["expr"]]],[11,"from","","",156,[[["exprbreak"]],["expr"]]],[11,"from","","",156,[[["exprcall"]],["expr"]]],[11,"from","","",156,[[["exprcast"]],["expr"]]],[11,"from","","",156,[[["exprclosure"]],["expr"]]],[11,"from","","",156,[[["exprcontinue"]],["expr"]]],[11,"from","","",156,[[["exprfield"]],["expr"]]],[11,"from","","",156,[[["exprforloop"]],["expr"]]],[11,"from","","",156,[[["exprgroup"]],["expr"]]],[11,"from","","",156,[[["exprif"]],["expr"]]],[11,"from","","",156,[[["exprindex"]],["expr"]]],[11,"from","","",156,[[["exprlet"]],["expr"]]],[11,"from","","",156,[[["exprlit"]],["expr"]]],[11,"from","","",156,[[["exprloop"]],["expr"]]],[11,"from","","",156,[[["exprmacro"]],["expr"]]],[11,"from","","",156,[[["exprmatch"]],["expr"]]],[11,"from","","",156,[[["exprmethodcall"]],["expr"]]],[11,"from","","",156,[[["exprparen"]],["expr"]]],[11,"from","","",156,[[["exprpath"]],["expr"]]],[11,"from","","",156,[[["exprrange"]],["expr"]]],[11,"from","","",156,[[["exprreference"]],["expr"]]],[11,"from","","",156,[[["exprrepeat"]],["expr"]]],[11,"from","","",156,[[["exprreturn"]],["expr"]]],[11,"from","","",156,[[["exprstruct"]],["expr"]]],[11,"from","","",156,[[["exprtry"]],["expr"]]],[11,"from","","",156,[[["exprtryblock"]],["expr"]]],[11,"from","","",156,[[["exprtuple"]],["expr"]]],[11,"from","","",156,[[["exprtype"]],["expr"]]],[11,"from","","",156,[[["exprunary"]],["expr"]]],[11,"from","","",156,[[["exprunsafe"]],["expr"]]],[11,"from","","",156,[[["exprwhile"]],["expr"]]],[11,"from","","",156,[[["expryield"]],["expr"]]],[11,"from","","",53,[[["usize"]],["index"]]],[11,"from","","",158,[[["typeparam"]],["genericparam"]]],[11,"from","","",158,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",158,[[["constparam"]],["genericparam"]]],[11,"from","","",62,[[["ident"]],["self"]]],[11,"from","","",160,[[["traitbound"]],["typeparambound"]]],[11,"from","","",160,[[["lifetime"]],["typeparambound"]]],[11,"from","","",161,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",161,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",161,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",165,[[["itemconst"]],["item"]]],[11,"from","","",165,[[["itemenum"]],["item"]]],[11,"from","","",165,[[["itemexterncrate"]],["item"]]],[11,"from","","",165,[[["itemfn"]],["item"]]],[11,"from","","",165,[[["itemforeignmod"]],["item"]]],[11,"from","","",165,[[["itemimpl"]],["item"]]],[11,"from","","",165,[[["itemmacro"]],["item"]]],[11,"from","","",165,[[["itemmacro2"]],["item"]]],[11,"from","","",165,[[["itemmod"]],["item"]]],[11,"from","","",165,[[["itemstatic"]],["item"]]],[11,"from","","",165,[[["itemstruct"]],["item"]]],[11,"from","","",165,[[["itemtrait"]],["item"]]],[11,"from","","",165,[[["itemtraitalias"]],["item"]]],[11,"from","","",165,[[["itemtype"]],["item"]]],[11,"from","","",165,[[["itemunion"]],["item"]]],[11,"from","","",165,[[["itemuse"]],["item"]]],[11,"from","","",165,[[["deriveinput"]],["item"]]],[11,"from","","",106,[[["itemstruct"]],["deriveinput"]]],[11,"from","","",106,[[["itemenum"]],["deriveinput"]]],[11,"from","","",106,[[["itemunion"]],["deriveinput"]]],[11,"from","","",167,[[["usepath"]],["usetree"]]],[11,"from","","",167,[[["usename"]],["usetree"]]],[11,"from","","",167,[[["userename"]],["usetree"]]],[11,"from","","",167,[[["useglob"]],["usetree"]]],[11,"from","","",167,[[["usegroup"]],["usetree"]]],[11,"from","","",163,[[["foreignitemfn"]],["foreignitem"]]],[11,"from","","",163,[[["foreignitemstatic"]],["foreignitem"]]],[11,"from","","",163,[[["foreignitemtype"]],["foreignitem"]]],[11,"from","","",163,[[["foreignitemmacro"]],["foreignitem"]]],[11,"from","","",166,[[["traititemconst"]],["traititem"]]],[11,"from","","",166,[[["traititemmethod"]],["traititem"]]],[11,"from","","",166,[[["traititemtype"]],["traititem"]]],[11,"from","","",166,[[["traititemmacro"]],["traititem"]]],[11,"from","","",164,[[["implitemconst"]],["implitem"]]],[11,"from","","",164,[[["implitemmethod"]],["implitem"]]],[11,"from","","",164,[[["implitemtype"]],["implitem"]]],[11,"from","","",164,[[["implitemmacro"]],["implitem"]]],[11,"from","","",162,[[["receiver"]],["fnarg"]]],[11,"from","","",162,[[["pattype"]],["fnarg"]]],[11,"from","","",168,[[["litstr"]],["lit"]]],[11,"from","","",168,[[["litbytestr"]],["lit"]]],[11,"from","","",168,[[["litbyte"]],["lit"]]],[11,"from","","",168,[[["litchar"]],["lit"]]],[11,"from","","",168,[[["litint"]],["lit"]]],[11,"from","","",168,[[["litfloat"]],["lit"]]],[11,"from","","",168,[[["litbool"]],["lit"]]],[11,"from","","",288,[[["literal"]],["self"]]],[11,"from","","",289,[[["literal"]],["self"]]],[11,"from","","",171,[[["datastruct"]],["data"]]],[11,"from","","",171,[[["dataenum"]],["data"]]],[11,"from","","",171,[[["dataunion"]],["data"]]],[11,"from","","",176,[[["typearray"]],["type"]]],[11,"from","","",176,[[["typebarefn"]],["type"]]],[11,"from","","",176,[[["typegroup"]],["type"]]],[11,"from","","",176,[[["typeimpltrait"]],["type"]]],[11,"from","","",176,[[["typeinfer"]],["type"]]],[11,"from","","",176,[[["typemacro"]],["type"]]],[11,"from","","",176,[[["typenever"]],["type"]]],[11,"from","","",176,[[["typeparen"]],["type"]]],[11,"from","","",176,[[["typepath"]],["type"]]],[11,"from","","",176,[[["typeptr"]],["type"]]],[11,"from","","",176,[[["typereference"]],["type"]]],[11,"from","","",176,[[["typeslice"]],["type"]]],[11,"from","","",176,[[["typetraitobject"]],["type"]]],[11,"from","","",176,[[["typetuple"]],["type"]]],[11,"from","","",177,[[["patbox"]],["pat"]]],[11,"from","","",177,[[["patident"]],["pat"]]],[11,"from","","",177,[[["patlit"]],["pat"]]],[11,"from","","",177,[[["patmacro"]],["pat"]]],[11,"from","","",177,[[["pator"]],["pat"]]],[11,"from","","",177,[[["patpath"]],["pat"]]],[11,"from","","",177,[[["patrange"]],["pat"]]],[11,"from","","",177,[[["patreference"]],["pat"]]],[11,"from","","",177,[[["patrest"]],["pat"]]],[11,"from","","",177,[[["patslice"]],["pat"]]],[11,"from","","",177,[[["patstruct"]],["pat"]]],[11,"from","","",177,[[["pattuple"]],["pat"]]],[11,"from","","",177,[[["pattuplestruct"]],["pat"]]],[11,"from","","",177,[[["pattype"]],["pat"]]],[11,"from","","",177,[[["patwild"]],["pat"]]],[11,"from","","",146,[[["t"]],["self"]]],[11,"from","","",147,[[["t"]],["self"]]],[11,"from","","",302,[[["lexerror"]],["self"]]],[11,"next_back","syn::punctuated","",306,[[["self"]],["option"]]],[11,"next_back","","",307,[[["self"]],["option"]]],[11,"next_back","","",308,[[["self"]],["option"]]],[11,"next_back","","",309,[[["self"]],["option"]]],[11,"next_back","","",310,[[["self"]],["option"]]],[11,"next_back","","",311,[[["self"]],["option"]]],[11,"len","","",306,[[["self"]],["usize"]]],[11,"len","","",307,[[["self"]],["usize"]]],[11,"len","","",308,[[["self"]],["usize"]]],[11,"len","","",309,[[["self"]],["usize"]]],[11,"len","","",310,[[["self"]],["usize"]]],[11,"len","","",311,[[["self"]],["usize"]]],[11,"extend","","",294,[[["self"],["intoiterator"]]]],[11,"extend","","",294,[[["self"],["intoiterator"]]]],[11,"into_iter","syn","",152,[[]]],[11,"into_iter","syn::punctuated","",294,[[]]],[11,"into_iter","syn","",302,[[]]],[11,"next","syn::punctuated","",306,[[["self"]],["option"]]],[11,"size_hint","","",306,[[["self"]]]],[11,"next","","",307,[[["self"]],["option"]]],[11,"size_hint","","",307,[[["self"]]]],[11,"next","","",308,[[["self"]],["option"]]],[11,"size_hint","","",308,[[["self"]]]],[11,"next","","",309,[[["self"]],["option"]]],[11,"size_hint","","",309,[[["self"]]]],[11,"next","","",310,[[["self"]],["option"]]],[11,"size_hint","","",310,[[["self"]]]],[11,"next","","",311,[[["self"]],["option"]]],[11,"size_hint","","",311,[[["self"]]]],[11,"clone","syn::token","",180,[[["self"]],["underscore"]]],[11,"clone","","",181,[[["self"]],["abstract"]]],[11,"clone","","",182,[[["self"]],["as"]]],[11,"clone","","",183,[[["self"]],["async"]]],[11,"clone","","",184,[[["self"]],["auto"]]],[11,"clone","","",185,[[["self"]],["await"]]],[11,"clone","","",186,[[["self"]],["become"]]],[11,"clone","","",187,[[["self"]],["box"]]],[11,"clone","","",188,[[["self"]],["break"]]],[11,"clone","","",189,[[["self"]],["const"]]],[11,"clone","","",190,[[["self"]],["continue"]]],[11,"clone","","",191,[[["self"]],["crate"]]],[11,"clone","","",192,[[["self"]],["default"]]],[11,"clone","","",193,[[["self"]],["do"]]],[11,"clone","","",194,[[["self"]],["dyn"]]],[11,"clone","","",195,[[["self"]],["else"]]],[11,"clone","","",196,[[["self"]],["enum"]]],[11,"clone","","",197,[[["self"]],["extern"]]],[11,"clone","","",198,[[["self"]],["final"]]],[11,"clone","","",199,[[["self"]],["fn"]]],[11,"clone","","",200,[[["self"]],["for"]]],[11,"clone","","",201,[[["self"]],["if"]]],[11,"clone","","",202,[[["self"]],["impl"]]],[11,"clone","","",203,[[["self"]],["in"]]],[11,"clone","","",204,[[["self"]],["let"]]],[11,"clone","","",205,[[["self"]],["loop"]]],[11,"clone","","",206,[[["self"]],["macro"]]],[11,"clone","","",207,[[["self"]],["match"]]],[11,"clone","","",208,[[["self"]],["mod"]]],[11,"clone","","",209,[[["self"]],["move"]]],[11,"clone","","",210,[[["self"]],["mut"]]],[11,"clone","","",211,[[["self"]],["override"]]],[11,"clone","","",212,[[["self"]],["priv"]]],[11,"clone","","",213,[[["self"]],["pub"]]],[11,"clone","","",214,[[["self"]],["ref"]]],[11,"clone","","",215,[[["self"]],["return"]]],[11,"clone","","",216,[[["self"]],["selftype"]]],[11,"clone","","",217,[[["self"]],["selfvalue"]]],[11,"clone","","",218,[[["self"]],["static"]]],[11,"clone","","",219,[[["self"]],["struct"]]],[11,"clone","","",220,[[["self"]],["super"]]],[11,"clone","","",221,[[["self"]],["trait"]]],[11,"clone","","",222,[[["self"]],["try"]]],[11,"clone","","",223,[[["self"]],["type"]]],[11,"clone","","",224,[[["self"]],["typeof"]]],[11,"clone","","",225,[[["self"]],["union"]]],[11,"clone","","",226,[[["self"]],["unsafe"]]],[11,"clone","","",227,[[["self"]],["unsized"]]],[11,"clone","","",228,[[["self"]],["use"]]],[11,"clone","","",229,[[["self"]],["virtual"]]],[11,"clone","","",230,[[["self"]],["where"]]],[11,"clone","","",231,[[["self"]],["while"]]],[11,"clone","","",232,[[["self"]],["yield"]]],[11,"clone","","",233,[[["self"]],["add"]]],[11,"clone","","",234,[[["self"]],["addeq"]]],[11,"clone","","",235,[[["self"]],["and"]]],[11,"clone","","",236,[[["self"]],["andand"]]],[11,"clone","","",237,[[["self"]],["andeq"]]],[11,"clone","","",238,[[["self"]],["at"]]],[11,"clone","","",239,[[["self"]],["bang"]]],[11,"clone","","",240,[[["self"]],["caret"]]],[11,"clone","","",241,[[["self"]],["careteq"]]],[11,"clone","","",242,[[["self"]],["colon"]]],[11,"clone","","",243,[[["self"]],["colon2"]]],[11,"clone","","",244,[[["self"]],["comma"]]],[11,"clone","","",245,[[["self"]],["div"]]],[11,"clone","","",246,[[["self"]],["diveq"]]],[11,"clone","","",247,[[["self"]],["dollar"]]],[11,"clone","","",248,[[["self"]],["dot"]]],[11,"clone","","",249,[[["self"]],["dot2"]]],[11,"clone","","",250,[[["self"]],["dot3"]]],[11,"clone","","",251,[[["self"]],["dotdoteq"]]],[11,"clone","","",252,[[["self"]],["eq"]]],[11,"clone","","",253,[[["self"]],["eqeq"]]],[11,"clone","","",254,[[["self"]],["ge"]]],[11,"clone","","",255,[[["self"]],["gt"]]],[11,"clone","","",256,[[["self"]],["le"]]],[11,"clone","","",257,[[["self"]],["lt"]]],[11,"clone","","",258,[[["self"]],["muleq"]]],[11,"clone","","",259,[[["self"]],["ne"]]],[11,"clone","","",260,[[["self"]],["or"]]],[11,"clone","","",261,[[["self"]],["oreq"]]],[11,"clone","","",262,[[["self"]],["oror"]]],[11,"clone","","",263,[[["self"]],["pound"]]],[11,"clone","","",264,[[["self"]],["question"]]],[11,"clone","","",265,[[["self"]],["rarrow"]]],[11,"clone","","",266,[[["self"]],["larrow"]]],[11,"clone","","",267,[[["self"]],["rem"]]],[11,"clone","","",268,[[["self"]],["remeq"]]],[11,"clone","","",269,[[["self"]],["fatarrow"]]],[11,"clone","","",270,[[["self"]],["semi"]]],[11,"clone","","",271,[[["self"]],["shl"]]],[11,"clone","","",272,[[["self"]],["shleq"]]],[11,"clone","","",273,[[["self"]],["shr"]]],[11,"clone","","",274,[[["self"]],["shreq"]]],[11,"clone","","",275,[[["self"]],["star"]]],[11,"clone","","",276,[[["self"]],["sub"]]],[11,"clone","","",277,[[["self"]],["subeq"]]],[11,"clone","","",278,[[["self"]],["tilde"]]],[11,"clone","","",279,[[["self"]],["brace"]]],[11,"clone","","",280,[[["self"]],["bracket"]]],[11,"clone","","",281,[[["self"]],["paren"]]],[11,"clone","","",282,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",149,[[["self"]],["attrstyle"]]],[11,"clone","","",150,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",151,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",152,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",153,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",156,[[["self"]],["expr"]]],[11,"clone","","",14,[[["self"]],["exprarray"]]],[11,"clone","","",15,[[["self"]],["exprassign"]]],[11,"clone","","",16,[[["self"]],["exprassignop"]]],[11,"clone","","",17,[[["self"]],["exprasync"]]],[11,"clone","","",18,[[["self"]],["exprawait"]]],[11,"clone","","",19,[[["self"]],["exprbinary"]]],[11,"clone","","",20,[[["self"]],["exprblock"]]],[11,"clone","","",21,[[["self"]],["exprbox"]]],[11,"clone","","",22,[[["self"]],["exprbreak"]]],[11,"clone","","",23,[[["self"]],["exprcall"]]],[11,"clone","","",24,[[["self"]],["exprcast"]]],[11,"clone","","",25,[[["self"]],["exprclosure"]]],[11,"clone","","",26,[[["self"]],["exprcontinue"]]],[11,"clone","","",27,[[["self"]],["exprfield"]]],[11,"clone","","",28,[[["self"]],["exprforloop"]]],[11,"clone","","",29,[[["self"]],["exprgroup"]]],[11,"clone","","",30,[[["self"]],["exprif"]]],[11,"clone","","",31,[[["self"]],["exprindex"]]],[11,"clone","","",32,[[["self"]],["exprlet"]]],[11,"clone","","",33,[[["self"]],["exprlit"]]],[11,"clone","","",34,[[["self"]],["exprloop"]]],[11,"clone","","",35,[[["self"]],["exprmacro"]]],[11,"clone","","",36,[[["self"]],["exprmatch"]]],[11,"clone","","",37,[[["self"]],["exprmethodcall"]]],[11,"clone","","",38,[[["self"]],["exprparen"]]],[11,"clone","","",39,[[["self"]],["exprpath"]]],[11,"clone","","",40,[[["self"]],["exprrange"]]],[11,"clone","","",41,[[["self"]],["exprreference"]]],[11,"clone","","",42,[[["self"]],["exprrepeat"]]],[11,"clone","","",43,[[["self"]],["exprreturn"]]],[11,"clone","","",44,[[["self"]],["exprstruct"]]],[11,"clone","","",45,[[["self"]],["exprtry"]]],[11,"clone","","",46,[[["self"]],["exprtryblock"]]],[11,"clone","","",47,[[["self"]],["exprtuple"]]],[11,"clone","","",48,[[["self"]],["exprtype"]]],[11,"clone","","",49,[[["self"]],["exprunary"]]],[11,"clone","","",50,[[["self"]],["exprunsafe"]]],[11,"clone","","",51,[[["self"]],["exprwhile"]]],[11,"clone","","",52,[[["self"]],["expryield"]]],[11,"clone","","",157,[[["self"]],["member"]]],[11,"clone","","",53,[[["self"]],["index"]]],[11,"clone","","",13,[[["self"]],["methodturbofish"]]],[11,"clone","","",154,[[["self"]],["genericmethodargument"]]],[11,"clone","","",11,[[["self"]],["fieldvalue"]]],[11,"clone","","",12,[[["self"]],["label"]]],[11,"clone","","",10,[[["self"]],["arm"]]],[11,"clone","","",155,[[["self"]],["rangelimits"]]],[11,"clone","","",56,[[["self"]],["generics"]]],[11,"clone","","",158,[[["self"]],["genericparam"]]],[11,"clone","","",62,[[["self"]],["typeparam"]]],[11,"clone","","",57,[[["self"]],["lifetimedef"]]],[11,"clone","","",55,[[["self"]],["constparam"]]],[11,"clone","","",304,[[["self"]],["implgenerics"]]],[11,"clone","","",283,[[["self"]],["typegenerics"]]],[11,"clone","","",305,[[["self"]],["turbofish"]]],[11,"clone","","",54,[[["self"]],["boundlifetimes"]]],[11,"clone","","",160,[[["self"]],["typeparambound"]]],[11,"clone","","",61,[[["self"]],["traitbound"]]],[11,"clone","","",159,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",63,[[["self"]],["whereclause"]]],[11,"clone","","",161,[[["self"]],["wherepredicate"]]],[11,"clone","","",60,[[["self"]],["predicatetype"]]],[11,"clone","","",59,[[["self"]],["predicatelifetime"]]],[11,"clone","","",58,[[["self"]],["predicateeq"]]],[11,"clone","","",165,[[["self"]],["item"]]],[11,"clone","","",72,[[["self"]],["itemconst"]]],[11,"clone","","",73,[[["self"]],["itemenum"]]],[11,"clone","","",74,[[["self"]],["itemexterncrate"]]],[11,"clone","","",75,[[["self"]],["itemfn"]]],[11,"clone","","",76,[[["self"]],["itemforeignmod"]]],[11,"clone","","",77,[[["self"]],["itemimpl"]]],[11,"clone","","",78,[[["self"]],["itemmacro"]]],[11,"clone","","",79,[[["self"]],["itemmacro2"]]],[11,"clone","","",80,[[["self"]],["itemmod"]]],[11,"clone","","",81,[[["self"]],["itemstatic"]]],[11,"clone","","",82,[[["self"]],["itemstruct"]]],[11,"clone","","",83,[[["self"]],["itemtrait"]]],[11,"clone","","",84,[[["self"]],["itemtraitalias"]]],[11,"clone","","",85,[[["self"]],["itemtype"]]],[11,"clone","","",86,[[["self"]],["itemunion"]]],[11,"clone","","",87,[[["self"]],["itemuse"]]],[11,"clone","","",167,[[["self"]],["usetree"]]],[11,"clone","","",97,[[["self"]],["usepath"]]],[11,"clone","","",96,[[["self"]],["usename"]]],[11,"clone","","",98,[[["self"]],["userename"]]],[11,"clone","","",94,[[["self"]],["useglob"]]],[11,"clone","","",95,[[["self"]],["usegroup"]]],[11,"clone","","",163,[[["self"]],["foreignitem"]]],[11,"clone","","",64,[[["self"]],["foreignitemfn"]]],[11,"clone","","",66,[[["self"]],["foreignitemstatic"]]],[11,"clone","","",67,[[["self"]],["foreignitemtype"]]],[11,"clone","","",65,[[["self"]],["foreignitemmacro"]]],[11,"clone","","",166,[[["self"]],["traititem"]]],[11,"clone","","",90,[[["self"]],["traititemconst"]]],[11,"clone","","",92,[[["self"]],["traititemmethod"]]],[11,"clone","","",93,[[["self"]],["traititemtype"]]],[11,"clone","","",91,[[["self"]],["traititemmacro"]]],[11,"clone","","",164,[[["self"]],["implitem"]]],[11,"clone","","",68,[[["self"]],["implitemconst"]]],[11,"clone","","",70,[[["self"]],["implitemmethod"]]],[11,"clone","","",71,[[["self"]],["implitemtype"]]],[11,"clone","","",69,[[["self"]],["implitemmacro"]]],[11,"clone","","",89,[[["self"]],["signature"]]],[11,"clone","","",162,[[["self"]],["fnarg"]]],[11,"clone","","",88,[[["self"]],["receiver"]]],[11,"clone","","",99,[[["self"]],["file"]]],[11,"clone","","",100,[[["self"]],["lifetime"]]],[11,"clone","","",168,[[["self"]],["lit"]]],[11,"clone","","",284,[[["self"]],["litstr"]]],[11,"clone","","",285,[[["self"]],["litbytestr"]]],[11,"clone","","",286,[[["self"]],["litbyte"]]],[11,"clone","","",287,[[["self"]],["litchar"]]],[11,"clone","","",288,[[["self"]],["litint"]]],[11,"clone","","",289,[[["self"]],["litfloat"]]],[11,"clone","","",101,[[["self"]],["litbool"]]],[11,"clone","","",169,[[["self"]],["strstyle"]]],[11,"clone","","",102,[[["self"]],["macro"]]],[11,"clone","","",170,[[["self"]],["macrodelimiter"]]],[11,"clone","","",106,[[["self"]],["deriveinput"]]],[11,"clone","","",171,[[["self"]],["data"]]],[11,"clone","","",104,[[["self"]],["datastruct"]]],[11,"clone","","",103,[[["self"]],["dataenum"]]],[11,"clone","","",105,[[["self"]],["dataunion"]]],[11,"clone","","",172,[[["self"]],["binop"]]],[11,"clone","","",173,[[["self"]],["unop"]]],[11,"clone","","",107,[[["self"]],["block"]]],[11,"clone","","",174,[[["self"]],["stmt"]]],[11,"clone","","",108,[[["self"]],["local"]]],[11,"clone","","",176,[[["self"]],["type"]]],[11,"clone","","",111,[[["self"]],["typearray"]]],[11,"clone","","",112,[[["self"]],["typebarefn"]]],[11,"clone","","",113,[[["self"]],["typegroup"]]],[11,"clone","","",114,[[["self"]],["typeimpltrait"]]],[11,"clone","","",115,[[["self"]],["typeinfer"]]],[11,"clone","","",116,[[["self"]],["typemacro"]]],[11,"clone","","",117,[[["self"]],["typenever"]]],[11,"clone","","",118,[[["self"]],["typeparen"]]],[11,"clone","","",119,[[["self"]],["typepath"]]],[11,"clone","","",120,[[["self"]],["typeptr"]]],[11,"clone","","",121,[[["self"]],["typereference"]]],[11,"clone","","",122,[[["self"]],["typeslice"]]],[11,"clone","","",123,[[["self"]],["typetraitobject"]]],[11,"clone","","",124,[[["self"]],["typetuple"]]],[11,"clone","","",109,[[["self"]],["abi"]]],[11,"clone","","",110,[[["self"]],["barefnarg"]]],[11,"clone","","",125,[[["self"]],["variadic"]]],[11,"clone","","",175,[[["self"]],["returntype"]]],[11,"clone","","",177,[[["self"]],["pat"]]],[11,"clone","","",127,[[["self"]],["patbox"]]],[11,"clone","","",128,[[["self"]],["patident"]]],[11,"clone","","",129,[[["self"]],["patlit"]]],[11,"clone","","",130,[[["self"]],["patmacro"]]],[11,"clone","","",131,[[["self"]],["pator"]]],[11,"clone","","",132,[[["self"]],["patpath"]]],[11,"clone","","",133,[[["self"]],["patrange"]]],[11,"clone","","",134,[[["self"]],["patreference"]]],[11,"clone","","",135,[[["self"]],["patrest"]]],[11,"clone","","",136,[[["self"]],["patslice"]]],[11,"clone","","",137,[[["self"]],["patstruct"]]],[11,"clone","","",138,[[["self"]],["pattuple"]]],[11,"clone","","",139,[[["self"]],["pattuplestruct"]]],[11,"clone","","",140,[[["self"]],["pattype"]]],[11,"clone","","",141,[[["self"]],["patwild"]]],[11,"clone","","",126,[[["self"]],["fieldpat"]]],[11,"clone","","",146,[[["self"]],["path"]]],[11,"clone","","",147,[[["self"]],["pathsegment"]]],[11,"clone","","",179,[[["self"]],["patharguments"]]],[11,"clone","","",178,[[["self"]],["genericargument"]]],[11,"clone","","",142,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",143,[[["self"]],["binding"]]],[11,"clone","","",144,[[["self"]],["constraint"]]],[11,"clone","","",145,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",148,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",291,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",294,[[["self"]],["punctuated"]]],[11,"clone","","",306,[[["self"]],["self"]]],[11,"clone","","",308,[[["self"]],["intopairs"]]],[11,"clone","","",309,[[["self"]],["intoiter"]]],[11,"clone","","",310,[[["self"]],["self"]]],[11,"clone","","",293,[[["self"]],["pair"]]],[11,"clone","syn::parse","",300,[[["self"]],["stepcursor"]]],[11,"clone","syn","",302,[[["self"]],["error"]]],[11,"default","syn::token","",180,[[],["self"]]],[11,"default","","",181,[[],["self"]]],[11,"default","","",182,[[],["self"]]],[11,"default","","",183,[[],["self"]]],[11,"default","","",184,[[],["self"]]],[11,"default","","",185,[[],["self"]]],[11,"default","","",186,[[],["self"]]],[11,"default","","",187,[[],["self"]]],[11,"default","","",188,[[],["self"]]],[11,"default","","",189,[[],["self"]]],[11,"default","","",190,[[],["self"]]],[11,"default","","",191,[[],["self"]]],[11,"default","","",192,[[],["self"]]],[11,"default","","",193,[[],["self"]]],[11,"default","","",194,[[],["self"]]],[11,"default","","",195,[[],["self"]]],[11,"default","","",196,[[],["self"]]],[11,"default","","",197,[[],["self"]]],[11,"default","","",198,[[],["self"]]],[11,"default","","",199,[[],["self"]]],[11,"default","","",200,[[],["self"]]],[11,"default","","",201,[[],["self"]]],[11,"default","","",202,[[],["self"]]],[11,"default","","",203,[[],["self"]]],[11,"default","","",204,[[],["self"]]],[11,"default","","",205,[[],["self"]]],[11,"default","","",206,[[],["self"]]],[11,"default","","",207,[[],["self"]]],[11,"default","","",208,[[],["self"]]],[11,"default","","",209,[[],["self"]]],[11,"default","","",210,[[],["self"]]],[11,"default","","",211,[[],["self"]]],[11,"default","","",212,[[],["self"]]],[11,"default","","",213,[[],["self"]]],[11,"default","","",214,[[],["self"]]],[11,"default","","",215,[[],["self"]]],[11,"default","","",216,[[],["self"]]],[11,"default","","",217,[[],["self"]]],[11,"default","","",218,[[],["self"]]],[11,"default","","",219,[[],["self"]]],[11,"default","","",220,[[],["self"]]],[11,"default","","",221,[[],["self"]]],[11,"default","","",222,[[],["self"]]],[11,"default","","",223,[[],["self"]]],[11,"default","","",224,[[],["self"]]],[11,"default","","",225,[[],["self"]]],[11,"default","","",226,[[],["self"]]],[11,"default","","",227,[[],["self"]]],[11,"default","","",228,[[],["self"]]],[11,"default","","",229,[[],["self"]]],[11,"default","","",230,[[],["self"]]],[11,"default","","",231,[[],["self"]]],[11,"default","","",232,[[],["self"]]],[11,"default","","",233,[[],["self"]]],[11,"default","","",234,[[],["self"]]],[11,"default","","",235,[[],["self"]]],[11,"default","","",236,[[],["self"]]],[11,"default","","",237,[[],["self"]]],[11,"default","","",238,[[],["self"]]],[11,"default","","",239,[[],["self"]]],[11,"default","","",240,[[],["self"]]],[11,"default","","",241,[[],["self"]]],[11,"default","","",242,[[],["self"]]],[11,"default","","",243,[[],["self"]]],[11,"default","","",244,[[],["self"]]],[11,"default","","",245,[[],["self"]]],[11,"default","","",246,[[],["self"]]],[11,"default","","",247,[[],["self"]]],[11,"default","","",248,[[],["self"]]],[11,"default","","",249,[[],["self"]]],[11,"default","","",250,[[],["self"]]],[11,"default","","",251,[[],["self"]]],[11,"default","","",252,[[],["self"]]],[11,"default","","",253,[[],["self"]]],[11,"default","","",254,[[],["self"]]],[11,"default","","",255,[[],["self"]]],[11,"default","","",256,[[],["self"]]],[11,"default","","",257,[[],["self"]]],[11,"default","","",258,[[],["self"]]],[11,"default","","",259,[[],["self"]]],[11,"default","","",260,[[],["self"]]],[11,"default","","",261,[[],["self"]]],[11,"default","","",262,[[],["self"]]],[11,"default","","",263,[[],["self"]]],[11,"default","","",264,[[],["self"]]],[11,"default","","",265,[[],["self"]]],[11,"default","","",266,[[],["self"]]],[11,"default","","",267,[[],["self"]]],[11,"default","","",268,[[],["self"]]],[11,"default","","",269,[[],["self"]]],[11,"default","","",270,[[],["self"]]],[11,"default","","",271,[[],["self"]]],[11,"default","","",272,[[],["self"]]],[11,"default","","",273,[[],["self"]]],[11,"default","","",274,[[],["self"]]],[11,"default","","",275,[[],["self"]]],[11,"default","","",276,[[],["self"]]],[11,"default","","",277,[[],["self"]]],[11,"default","","",278,[[],["self"]]],[11,"default","","",279,[[],["self"]]],[11,"default","","",280,[[],["self"]]],[11,"default","","",281,[[],["self"]]],[11,"default","","",282,[[],["self"]]],[11,"default","syn","",56,[[],["generics"]]],[11,"default","","",54,[[],["boundlifetimes"]]],[11,"default","","",179,[[],["self"]]],[11,"default","syn::punctuated","",294,[[],["self"]]],[11,"cmp","syn","",100,[[["lifetime"],["self"]],["ordering"]]],[11,"eq","syn::token","",180,[[["self"],["underscore"]],["bool"]]],[11,"eq","","",181,[[["abstract"],["self"]],["bool"]]],[11,"eq","","",182,[[["self"],["as"]],["bool"]]],[11,"eq","","",183,[[["async"],["self"]],["bool"]]],[11,"eq","","",184,[[["auto"],["self"]],["bool"]]],[11,"eq","","",185,[[["self"],["await"]],["bool"]]],[11,"eq","","",186,[[["self"],["become"]],["bool"]]],[11,"eq","","",187,[[["box"],["self"]],["bool"]]],[11,"eq","","",188,[[["break"],["self"]],["bool"]]],[11,"eq","","",189,[[["self"],["const"]],["bool"]]],[11,"eq","","",190,[[["self"],["continue"]],["bool"]]],[11,"eq","","",191,[[["self"],["crate"]],["bool"]]],[11,"eq","","",192,[[["self"],["default"]],["bool"]]],[11,"eq","","",193,[[["self"],["do"]],["bool"]]],[11,"eq","","",194,[[["self"],["dyn"]],["bool"]]],[11,"eq","","",195,[[["self"],["else"]],["bool"]]],[11,"eq","","",196,[[["self"],["enum"]],["bool"]]],[11,"eq","","",197,[[["self"],["extern"]],["bool"]]],[11,"eq","","",198,[[["final"],["self"]],["bool"]]],[11,"eq","","",199,[[["self"],["fn"]],["bool"]]],[11,"eq","","",200,[[["self"],["for"]],["bool"]]],[11,"eq","","",201,[[["self"],["if"]],["bool"]]],[11,"eq","","",202,[[["impl"],["self"]],["bool"]]],[11,"eq","","",203,[[["in"],["self"]],["bool"]]],[11,"eq","","",204,[[["self"],["let"]],["bool"]]],[11,"eq","","",205,[[["self"],["loop"]],["bool"]]],[11,"eq","","",206,[[["self"],["macro"]],["bool"]]],[11,"eq","","",207,[[["match"],["self"]],["bool"]]],[11,"eq","","",208,[[["self"],["mod"]],["bool"]]],[11,"eq","","",209,[[["self"],["move"]],["bool"]]],[11,"eq","","",210,[[["mut"],["self"]],["bool"]]],[11,"eq","","",211,[[["self"],["override"]],["bool"]]],[11,"eq","","",212,[[["self"],["priv"]],["bool"]]],[11,"eq","","",213,[[["self"],["pub"]],["bool"]]],[11,"eq","","",214,[[["ref"],["self"]],["bool"]]],[11,"eq","","",215,[[["self"],["return"]],["bool"]]],[11,"eq","","",216,[[["self"],["selftype"]],["bool"]]],[11,"eq","","",217,[[["self"],["selfvalue"]],["bool"]]],[11,"eq","","",218,[[["static"],["self"]],["bool"]]],[11,"eq","","",219,[[["struct"],["self"]],["bool"]]],[11,"eq","","",220,[[["super"],["self"]],["bool"]]],[11,"eq","","",221,[[["self"],["trait"]],["bool"]]],[11,"eq","","",222,[[["self"],["try"]],["bool"]]],[11,"eq","","",223,[[["self"],["type"]],["bool"]]],[11,"eq","","",224,[[["typeof"],["self"]],["bool"]]],[11,"eq","","",225,[[["self"],["union"]],["bool"]]],[11,"eq","","",226,[[["self"],["unsafe"]],["bool"]]],[11,"eq","","",227,[[["self"],["unsized"]],["bool"]]],[11,"eq","","",228,[[["use"],["self"]],["bool"]]],[11,"eq","","",229,[[["self"],["virtual"]],["bool"]]],[11,"eq","","",230,[[["self"],["where"]],["bool"]]],[11,"eq","","",231,[[["self"],["while"]],["bool"]]],[11,"eq","","",232,[[["yield"],["self"]],["bool"]]],[11,"eq","","",233,[[["self"],["add"]],["bool"]]],[11,"eq","","",234,[[["addeq"],["self"]],["bool"]]],[11,"eq","","",235,[[["self"],["and"]],["bool"]]],[11,"eq","","",236,[[["andand"],["self"]],["bool"]]],[11,"eq","","",237,[[["self"],["andeq"]],["bool"]]],[11,"eq","","",238,[[["at"],["self"]],["bool"]]],[11,"eq","","",239,[[["bang"],["self"]],["bool"]]],[11,"eq","","",240,[[["caret"],["self"]],["bool"]]],[11,"eq","","",241,[[["careteq"],["self"]],["bool"]]],[11,"eq","","",242,[[["self"],["colon"]],["bool"]]],[11,"eq","","",243,[[["colon2"],["self"]],["bool"]]],[11,"eq","","",244,[[["comma"],["self"]],["bool"]]],[11,"eq","","",245,[[["div"],["self"]],["bool"]]],[11,"eq","","",246,[[["diveq"],["self"]],["bool"]]],[11,"eq","","",247,[[["self"],["dollar"]],["bool"]]],[11,"eq","","",248,[[["self"],["dot"]],["bool"]]],[11,"eq","","",249,[[["self"],["dot2"]],["bool"]]],[11,"eq","","",250,[[["self"],["dot3"]],["bool"]]],[11,"eq","","",251,[[["self"],["dotdoteq"]],["bool"]]],[11,"eq","","",252,[[["eq"],["self"]],["bool"]]],[11,"eq","","",253,[[["self"],["eqeq"]],["bool"]]],[11,"eq","","",254,[[["ge"],["self"]],["bool"]]],[11,"eq","","",255,[[["self"],["gt"]],["bool"]]],[11,"eq","","",256,[[["self"],["le"]],["bool"]]],[11,"eq","","",257,[[["lt"],["self"]],["bool"]]],[11,"eq","","",258,[[["muleq"],["self"]],["bool"]]],[11,"eq","","",259,[[["ne"],["self"]],["bool"]]],[11,"eq","","",260,[[["self"],["or"]],["bool"]]],[11,"eq","","",261,[[["oreq"],["self"]],["bool"]]],[11,"eq","","",262,[[["self"],["oror"]],["bool"]]],[11,"eq","","",263,[[["self"],["pound"]],["bool"]]],[11,"eq","","",264,[[["question"],["self"]],["bool"]]],[11,"eq","","",265,[[["rarrow"],["self"]],["bool"]]],[11,"eq","","",266,[[["larrow"],["self"]],["bool"]]],[11,"eq","","",267,[[["self"],["rem"]],["bool"]]],[11,"eq","","",268,[[["self"],["remeq"]],["bool"]]],[11,"eq","","",269,[[["fatarrow"],["self"]],["bool"]]],[11,"eq","","",270,[[["self"],["semi"]],["bool"]]],[11,"eq","","",271,[[["shl"],["self"]],["bool"]]],[11,"eq","","",272,[[["shleq"],["self"]],["bool"]]],[11,"eq","","",273,[[["self"],["shr"]],["bool"]]],[11,"eq","","",274,[[["shreq"],["self"]],["bool"]]],[11,"eq","","",275,[[["self"],["star"]],["bool"]]],[11,"eq","","",276,[[["self"],["sub"]],["bool"]]],[11,"eq","","",277,[[["self"],["subeq"]],["bool"]]],[11,"eq","","",278,[[["self"],["tilde"]],["bool"]]],[11,"eq","","",279,[[["brace"],["self"]],["bool"]]],[11,"eq","","",280,[[["bracket"],["self"]],["bool"]]],[11,"eq","","",281,[[["self"],["paren"]],["bool"]]],[11,"eq","","",282,[[["self"],["group"]],["bool"]]],[11,"eq","syn","",0,[[["self"]],["bool"]]],[11,"eq","","",149,[[["attrstyle"],["self"]],["bool"]]],[11,"ne","","",149,[[["attrstyle"],["self"]],["bool"]]],[11,"eq","","",150,[[["self"],["meta"]],["bool"]]],[11,"ne","","",150,[[["self"],["meta"]],["bool"]]],[11,"eq","","",1,[[["self"],["metalist"]],["bool"]]],[11,"ne","","",1,[[["self"],["metalist"]],["bool"]]],[11,"eq","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"ne","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"eq","","",151,[[["nestedmeta"],["self"]],["bool"]]],[11,"ne","","",151,[[["nestedmeta"],["self"]],["bool"]]],[11,"eq","","",6,[[["self"],["variant"]],["bool"]]],[11,"ne","","",6,[[["self"],["variant"]],["bool"]]],[11,"eq","","",152,[[["fields"],["self"]],["bool"]]],[11,"ne","","",152,[[["fields"],["self"]],["bool"]]],[11,"eq","","",4,[[["fieldsnamed"],["self"]],["bool"]]],[11,"ne","","",4,[[["fieldsnamed"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"ne","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"eq","","",3,[[["field"],["self"]],["bool"]]],[11,"ne","","",3,[[["field"],["self"]],["bool"]]],[11,"eq","","",153,[[["self"],["visibility"]],["bool"]]],[11,"ne","","",153,[[["self"],["visibility"]],["bool"]]],[11,"eq","","",8,[[["vispublic"],["self"]],["bool"]]],[11,"ne","","",8,[[["vispublic"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"ne","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"eq","","",9,[[["visrestricted"],["self"]],["bool"]]],[11,"ne","","",9,[[["visrestricted"],["self"]],["bool"]]],[11,"eq","","",14,[[["self"],["exprarray"]],["bool"]]],[11,"ne","","",14,[[["self"],["exprarray"]],["bool"]]],[11,"eq","","",15,[[["exprassign"],["self"]],["bool"]]],[11,"ne","","",15,[[["exprassign"],["self"]],["bool"]]],[11,"eq","","",16,[[["exprassignop"],["self"]],["bool"]]],[11,"ne","","",16,[[["exprassignop"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["exprasync"]],["bool"]]],[11,"ne","","",17,[[["self"],["exprasync"]],["bool"]]],[11,"eq","","",18,[[["exprawait"],["self"]],["bool"]]],[11,"ne","","",18,[[["exprawait"],["self"]],["bool"]]],[11,"eq","","",19,[[["self"],["exprbinary"]],["bool"]]],[11,"ne","","",19,[[["self"],["exprbinary"]],["bool"]]],[11,"eq","","",20,[[["exprblock"],["self"]],["bool"]]],[11,"ne","","",20,[[["exprblock"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["exprbox"]],["bool"]]],[11,"ne","","",21,[[["self"],["exprbox"]],["bool"]]],[11,"eq","","",22,[[["self"],["exprbreak"]],["bool"]]],[11,"ne","","",22,[[["self"],["exprbreak"]],["bool"]]],[11,"eq","","",23,[[["self"],["exprcall"]],["bool"]]],[11,"ne","","",23,[[["self"],["exprcall"]],["bool"]]],[11,"eq","","",24,[[["exprcast"],["self"]],["bool"]]],[11,"ne","","",24,[[["exprcast"],["self"]],["bool"]]],[11,"eq","","",25,[[["exprclosure"],["self"]],["bool"]]],[11,"ne","","",25,[[["exprclosure"],["self"]],["bool"]]],[11,"eq","","",26,[[["self"],["exprcontinue"]],["bool"]]],[11,"ne","","",26,[[["self"],["exprcontinue"]],["bool"]]],[11,"eq","","",27,[[["exprfield"],["self"]],["bool"]]],[11,"ne","","",27,[[["exprfield"],["self"]],["bool"]]],[11,"eq","","",28,[[["exprforloop"],["self"]],["bool"]]],[11,"ne","","",28,[[["exprforloop"],["self"]],["bool"]]],[11,"eq","","",29,[[["exprgroup"],["self"]],["bool"]]],[11,"ne","","",29,[[["exprgroup"],["self"]],["bool"]]],[11,"eq","","",30,[[["exprif"],["self"]],["bool"]]],[11,"ne","","",30,[[["exprif"],["self"]],["bool"]]],[11,"eq","","",31,[[["exprindex"],["self"]],["bool"]]],[11,"ne","","",31,[[["exprindex"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["exprlet"]],["bool"]]],[11,"ne","","",32,[[["self"],["exprlet"]],["bool"]]],[11,"eq","","",33,[[["exprlit"],["self"]],["bool"]]],[11,"ne","","",33,[[["exprlit"],["self"]],["bool"]]],[11,"eq","","",34,[[["exprloop"],["self"]],["bool"]]],[11,"ne","","",34,[[["exprloop"],["self"]],["bool"]]],[11,"eq","","",35,[[["exprmacro"],["self"]],["bool"]]],[11,"ne","","",35,[[["exprmacro"],["self"]],["bool"]]],[11,"eq","","",36,[[["exprmatch"],["self"]],["bool"]]],[11,"ne","","",36,[[["exprmatch"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["exprmethodcall"]],["bool"]]],[11,"ne","","",37,[[["self"],["exprmethodcall"]],["bool"]]],[11,"eq","","",38,[[["exprparen"],["self"]],["bool"]]],[11,"ne","","",38,[[["exprparen"],["self"]],["bool"]]],[11,"eq","","",39,[[["self"],["exprpath"]],["bool"]]],[11,"ne","","",39,[[["self"],["exprpath"]],["bool"]]],[11,"eq","","",40,[[["self"],["exprrange"]],["bool"]]],[11,"ne","","",40,[[["self"],["exprrange"]],["bool"]]],[11,"eq","","",41,[[["self"],["exprreference"]],["bool"]]],[11,"ne","","",41,[[["self"],["exprreference"]],["bool"]]],[11,"eq","","",42,[[["self"],["exprrepeat"]],["bool"]]],[11,"ne","","",42,[[["self"],["exprrepeat"]],["bool"]]],[11,"eq","","",43,[[["self"],["exprreturn"]],["bool"]]],[11,"ne","","",43,[[["self"],["exprreturn"]],["bool"]]],[11,"eq","","",44,[[["exprstruct"],["self"]],["bool"]]],[11,"ne","","",44,[[["exprstruct"],["self"]],["bool"]]],[11,"eq","","",45,[[["self"],["exprtry"]],["bool"]]],[11,"ne","","",45,[[["self"],["exprtry"]],["bool"]]],[11,"eq","","",46,[[["exprtryblock"],["self"]],["bool"]]],[11,"ne","","",46,[[["exprtryblock"],["self"]],["bool"]]],[11,"eq","","",47,[[["exprtuple"],["self"]],["bool"]]],[11,"ne","","",47,[[["exprtuple"],["self"]],["bool"]]],[11,"eq","","",48,[[["self"],["exprtype"]],["bool"]]],[11,"ne","","",48,[[["self"],["exprtype"]],["bool"]]],[11,"eq","","",49,[[["exprunary"],["self"]],["bool"]]],[11,"ne","","",49,[[["exprunary"],["self"]],["bool"]]],[11,"eq","","",50,[[["self"],["exprunsafe"]],["bool"]]],[11,"ne","","",50,[[["self"],["exprunsafe"]],["bool"]]],[11,"eq","","",51,[[["self"],["exprwhile"]],["bool"]]],[11,"ne","","",51,[[["self"],["exprwhile"]],["bool"]]],[11,"eq","","",52,[[["self"],["expryield"]],["bool"]]],[11,"ne","","",52,[[["self"],["expryield"]],["bool"]]],[11,"eq","","",156,[[["self"]],["bool"]]],[11,"eq","","",157,[[["self"],["member"]],["bool"]]],[11,"ne","","",157,[[["self"],["member"]],["bool"]]],[11,"eq","","",53,[[["self"]],["bool"]]],[11,"eq","","",13,[[["self"],["methodturbofish"]],["bool"]]],[11,"ne","","",13,[[["self"],["methodturbofish"]],["bool"]]],[11,"eq","","",154,[[["genericmethodargument"],["self"]],["bool"]]],[11,"ne","","",154,[[["genericmethodargument"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["fieldvalue"]],["bool"]]],[11,"ne","","",11,[[["self"],["fieldvalue"]],["bool"]]],[11,"eq","","",12,[[["label"],["self"]],["bool"]]],[11,"ne","","",12,[[["label"],["self"]],["bool"]]],[11,"eq","","",10,[[["arm"],["self"]],["bool"]]],[11,"ne","","",10,[[["arm"],["self"]],["bool"]]],[11,"eq","","",155,[[["rangelimits"],["self"]],["bool"]]],[11,"ne","","",155,[[["rangelimits"],["self"]],["bool"]]],[11,"eq","","",56,[[["self"],["generics"]],["bool"]]],[11,"ne","","",56,[[["self"],["generics"]],["bool"]]],[11,"eq","","",158,[[["genericparam"],["self"]],["bool"]]],[11,"ne","","",158,[[["genericparam"],["self"]],["bool"]]],[11,"eq","","",62,[[["typeparam"],["self"]],["bool"]]],[11,"ne","","",62,[[["typeparam"],["self"]],["bool"]]],[11,"eq","","",57,[[["self"],["lifetimedef"]],["bool"]]],[11,"ne","","",57,[[["self"],["lifetimedef"]],["bool"]]],[11,"eq","","",55,[[["self"],["constparam"]],["bool"]]],[11,"ne","","",55,[[["self"],["constparam"]],["bool"]]],[11,"eq","","",304,[[["implgenerics"],["self"]],["bool"]]],[11,"ne","","",304,[[["implgenerics"],["self"]],["bool"]]],[11,"eq","","",283,[[["self"],["typegenerics"]],["bool"]]],[11,"ne","","",283,[[["self"],["typegenerics"]],["bool"]]],[11,"eq","","",305,[[["turbofish"],["self"]],["bool"]]],[11,"ne","","",305,[[["turbofish"],["self"]],["bool"]]],[11,"eq","","",54,[[["boundlifetimes"],["self"]],["bool"]]],[11,"ne","","",54,[[["boundlifetimes"],["self"]],["bool"]]],[11,"eq","","",160,[[["typeparambound"],["self"]],["bool"]]],[11,"ne","","",160,[[["typeparambound"],["self"]],["bool"]]],[11,"eq","","",61,[[["self"],["traitbound"]],["bool"]]],[11,"ne","","",61,[[["self"],["traitbound"]],["bool"]]],[11,"eq","","",159,[[["traitboundmodifier"],["self"]],["bool"]]],[11,"ne","","",159,[[["traitboundmodifier"],["self"]],["bool"]]],[11,"eq","","",63,[[["whereclause"],["self"]],["bool"]]],[11,"ne","","",63,[[["whereclause"],["self"]],["bool"]]],[11,"eq","","",161,[[["self"],["wherepredicate"]],["bool"]]],[11,"ne","","",161,[[["self"],["wherepredicate"]],["bool"]]],[11,"eq","","",60,[[["predicatetype"],["self"]],["bool"]]],[11,"ne","","",60,[[["predicatetype"],["self"]],["bool"]]],[11,"eq","","",59,[[["self"],["predicatelifetime"]],["bool"]]],[11,"ne","","",59,[[["self"],["predicatelifetime"]],["bool"]]],[11,"eq","","",58,[[["self"],["predicateeq"]],["bool"]]],[11,"ne","","",58,[[["self"],["predicateeq"]],["bool"]]],[11,"eq","","",72,[[["itemconst"],["self"]],["bool"]]],[11,"ne","","",72,[[["itemconst"],["self"]],["bool"]]],[11,"eq","","",73,[[["itemenum"],["self"]],["bool"]]],[11,"ne","","",73,[[["itemenum"],["self"]],["bool"]]],[11,"eq","","",74,[[["self"],["itemexterncrate"]],["bool"]]],[11,"ne","","",74,[[["self"],["itemexterncrate"]],["bool"]]],[11,"eq","","",75,[[["self"],["itemfn"]],["bool"]]],[11,"ne","","",75,[[["self"],["itemfn"]],["bool"]]],[11,"eq","","",76,[[["itemforeignmod"],["self"]],["bool"]]],[11,"ne","","",76,[[["itemforeignmod"],["self"]],["bool"]]],[11,"eq","","",77,[[["itemimpl"],["self"]],["bool"]]],[11,"ne","","",77,[[["itemimpl"],["self"]],["bool"]]],[11,"eq","","",78,[[["self"],["itemmacro"]],["bool"]]],[11,"ne","","",78,[[["self"],["itemmacro"]],["bool"]]],[11,"eq","","",80,[[["self"],["itemmod"]],["bool"]]],[11,"ne","","",80,[[["self"],["itemmod"]],["bool"]]],[11,"eq","","",81,[[["self"],["itemstatic"]],["bool"]]],[11,"ne","","",81,[[["self"],["itemstatic"]],["bool"]]],[11,"eq","","",82,[[["self"],["itemstruct"]],["bool"]]],[11,"ne","","",82,[[["self"],["itemstruct"]],["bool"]]],[11,"eq","","",83,[[["self"],["itemtrait"]],["bool"]]],[11,"ne","","",83,[[["self"],["itemtrait"]],["bool"]]],[11,"eq","","",84,[[["itemtraitalias"],["self"]],["bool"]]],[11,"ne","","",84,[[["itemtraitalias"],["self"]],["bool"]]],[11,"eq","","",85,[[["itemtype"],["self"]],["bool"]]],[11,"ne","","",85,[[["itemtype"],["self"]],["bool"]]],[11,"eq","","",86,[[["self"],["itemunion"]],["bool"]]],[11,"ne","","",86,[[["self"],["itemunion"]],["bool"]]],[11,"eq","","",87,[[["self"],["itemuse"]],["bool"]]],[11,"ne","","",87,[[["self"],["itemuse"]],["bool"]]],[11,"eq","","",165,[[["self"]],["bool"]]],[11,"eq","","",79,[[["self"]],["bool"]]],[11,"eq","","",167,[[["self"],["usetree"]],["bool"]]],[11,"ne","","",167,[[["self"],["usetree"]],["bool"]]],[11,"eq","","",97,[[["usepath"],["self"]],["bool"]]],[11,"ne","","",97,[[["usepath"],["self"]],["bool"]]],[11,"eq","","",96,[[["self"],["usename"]],["bool"]]],[11,"ne","","",96,[[["self"],["usename"]],["bool"]]],[11,"eq","","",98,[[["userename"],["self"]],["bool"]]],[11,"ne","","",98,[[["userename"],["self"]],["bool"]]],[11,"eq","","",94,[[["self"],["useglob"]],["bool"]]],[11,"ne","","",94,[[["self"],["useglob"]],["bool"]]],[11,"eq","","",95,[[["usegroup"],["self"]],["bool"]]],[11,"ne","","",95,[[["usegroup"],["self"]],["bool"]]],[11,"eq","","",64,[[["self"],["foreignitemfn"]],["bool"]]],[11,"ne","","",64,[[["self"],["foreignitemfn"]],["bool"]]],[11,"eq","","",66,[[["foreignitemstatic"],["self"]],["bool"]]],[11,"ne","","",66,[[["foreignitemstatic"],["self"]],["bool"]]],[11,"eq","","",67,[[["self"],["foreignitemtype"]],["bool"]]],[11,"ne","","",67,[[["self"],["foreignitemtype"]],["bool"]]],[11,"eq","","",65,[[["self"],["foreignitemmacro"]],["bool"]]],[11,"ne","","",65,[[["self"],["foreignitemmacro"]],["bool"]]],[11,"eq","","",163,[[["self"]],["bool"]]],[11,"eq","","",90,[[["traititemconst"],["self"]],["bool"]]],[11,"ne","","",90,[[["traititemconst"],["self"]],["bool"]]],[11,"eq","","",92,[[["traititemmethod"],["self"]],["bool"]]],[11,"ne","","",92,[[["traititemmethod"],["self"]],["bool"]]],[11,"eq","","",93,[[["traititemtype"],["self"]],["bool"]]],[11,"ne","","",93,[[["traititemtype"],["self"]],["bool"]]],[11,"eq","","",91,[[["self"],["traititemmacro"]],["bool"]]],[11,"ne","","",91,[[["self"],["traititemmacro"]],["bool"]]],[11,"eq","","",166,[[["self"]],["bool"]]],[11,"eq","","",68,[[["implitemconst"],["self"]],["bool"]]],[11,"ne","","",68,[[["implitemconst"],["self"]],["bool"]]],[11,"eq","","",70,[[["implitemmethod"],["self"]],["bool"]]],[11,"ne","","",70,[[["implitemmethod"],["self"]],["bool"]]],[11,"eq","","",71,[[["self"],["implitemtype"]],["bool"]]],[11,"ne","","",71,[[["self"],["implitemtype"]],["bool"]]],[11,"eq","","",69,[[["self"],["implitemmacro"]],["bool"]]],[11,"ne","","",69,[[["self"],["implitemmacro"]],["bool"]]],[11,"eq","","",164,[[["self"]],["bool"]]],[11,"eq","","",89,[[["signature"],["self"]],["bool"]]],[11,"ne","","",89,[[["signature"],["self"]],["bool"]]],[11,"eq","","",162,[[["fnarg"],["self"]],["bool"]]],[11,"ne","","",162,[[["fnarg"],["self"]],["bool"]]],[11,"eq","","",88,[[["receiver"],["self"]],["bool"]]],[11,"ne","","",88,[[["receiver"],["self"]],["bool"]]],[11,"eq","","",99,[[["file"],["self"]],["bool"]]],[11,"ne","","",99,[[["file"],["self"]],["bool"]]],[11,"eq","","",100,[[["lifetime"],["self"]],["bool"]]],[11,"eq","","",168,[[["self"]],["bool"]]],[11,"eq","","",284,[[["self"]],["bool"]]],[11,"eq","","",285,[[["self"]],["bool"]]],[11,"eq","","",286,[[["self"]],["bool"]]],[11,"eq","","",287,[[["self"]],["bool"]]],[11,"eq","","",288,[[["self"]],["bool"]]],[11,"eq","","",289,[[["self"]],["bool"]]],[11,"eq","","",101,[[["self"]],["bool"]]],[11,"eq","","",169,[[["self"],["strstyle"]],["bool"]]],[11,"ne","","",169,[[["self"],["strstyle"]],["bool"]]],[11,"eq","","",170,[[["self"],["macrodelimiter"]],["bool"]]],[11,"ne","","",170,[[["self"],["macrodelimiter"]],["bool"]]],[11,"eq","","",102,[[["self"]],["bool"]]],[11,"eq","","",106,[[["deriveinput"],["self"]],["bool"]]],[11,"ne","","",106,[[["deriveinput"],["self"]],["bool"]]],[11,"eq","","",171,[[["data"],["self"]],["bool"]]],[11,"ne","","",171,[[["data"],["self"]],["bool"]]],[11,"eq","","",104,[[["self"],["datastruct"]],["bool"]]],[11,"ne","","",104,[[["self"],["datastruct"]],["bool"]]],[11,"eq","","",103,[[["dataenum"],["self"]],["bool"]]],[11,"ne","","",103,[[["dataenum"],["self"]],["bool"]]],[11,"eq","","",105,[[["dataunion"],["self"]],["bool"]]],[11,"ne","","",105,[[["dataunion"],["self"]],["bool"]]],[11,"eq","","",172,[[["binop"],["self"]],["bool"]]],[11,"ne","","",172,[[["binop"],["self"]],["bool"]]],[11,"eq","","",173,[[["self"],["unop"]],["bool"]]],[11,"ne","","",173,[[["self"],["unop"]],["bool"]]],[11,"eq","","",107,[[["block"],["self"]],["bool"]]],[11,"ne","","",107,[[["block"],["self"]],["bool"]]],[11,"eq","","",174,[[["stmt"],["self"]],["bool"]]],[11,"ne","","",174,[[["stmt"],["self"]],["bool"]]],[11,"eq","","",108,[[["local"],["self"]],["bool"]]],[11,"ne","","",108,[[["local"],["self"]],["bool"]]],[11,"eq","","",111,[[["typearray"],["self"]],["bool"]]],[11,"ne","","",111,[[["typearray"],["self"]],["bool"]]],[11,"eq","","",112,[[["typebarefn"],["self"]],["bool"]]],[11,"ne","","",112,[[["typebarefn"],["self"]],["bool"]]],[11,"eq","","",113,[[["self"],["typegroup"]],["bool"]]],[11,"ne","","",113,[[["self"],["typegroup"]],["bool"]]],[11,"eq","","",114,[[["typeimpltrait"],["self"]],["bool"]]],[11,"ne","","",114,[[["typeimpltrait"],["self"]],["bool"]]],[11,"eq","","",115,[[["self"],["typeinfer"]],["bool"]]],[11,"ne","","",115,[[["self"],["typeinfer"]],["bool"]]],[11,"eq","","",116,[[["typemacro"],["self"]],["bool"]]],[11,"ne","","",116,[[["typemacro"],["self"]],["bool"]]],[11,"eq","","",117,[[["typenever"],["self"]],["bool"]]],[11,"ne","","",117,[[["typenever"],["self"]],["bool"]]],[11,"eq","","",118,[[["typeparen"],["self"]],["bool"]]],[11,"ne","","",118,[[["typeparen"],["self"]],["bool"]]],[11,"eq","","",119,[[["self"],["typepath"]],["bool"]]],[11,"ne","","",119,[[["self"],["typepath"]],["bool"]]],[11,"eq","","",120,[[["typeptr"],["self"]],["bool"]]],[11,"ne","","",120,[[["typeptr"],["self"]],["bool"]]],[11,"eq","","",121,[[["self"],["typereference"]],["bool"]]],[11,"ne","","",121,[[["self"],["typereference"]],["bool"]]],[11,"eq","","",122,[[["typeslice"],["self"]],["bool"]]],[11,"ne","","",122,[[["typeslice"],["self"]],["bool"]]],[11,"eq","","",123,[[["typetraitobject"],["self"]],["bool"]]],[11,"ne","","",123,[[["typetraitobject"],["self"]],["bool"]]],[11,"eq","","",124,[[["self"],["typetuple"]],["bool"]]],[11,"ne","","",124,[[["self"],["typetuple"]],["bool"]]],[11,"eq","","",176,[[["self"]],["bool"]]],[11,"eq","","",109,[[["abi"],["self"]],["bool"]]],[11,"ne","","",109,[[["abi"],["self"]],["bool"]]],[11,"eq","","",110,[[["self"],["barefnarg"]],["bool"]]],[11,"ne","","",110,[[["self"],["barefnarg"]],["bool"]]],[11,"eq","","",125,[[["variadic"],["self"]],["bool"]]],[11,"ne","","",125,[[["variadic"],["self"]],["bool"]]],[11,"eq","","",175,[[["returntype"],["self"]],["bool"]]],[11,"ne","","",175,[[["returntype"],["self"]],["bool"]]],[11,"eq","","",127,[[["patbox"],["self"]],["bool"]]],[11,"ne","","",127,[[["patbox"],["self"]],["bool"]]],[11,"eq","","",128,[[["self"],["patident"]],["bool"]]],[11,"ne","","",128,[[["self"],["patident"]],["bool"]]],[11,"eq","","",129,[[["self"],["patlit"]],["bool"]]],[11,"ne","","",129,[[["self"],["patlit"]],["bool"]]],[11,"eq","","",130,[[["self"],["patmacro"]],["bool"]]],[11,"ne","","",130,[[["self"],["patmacro"]],["bool"]]],[11,"eq","","",131,[[["pator"],["self"]],["bool"]]],[11,"ne","","",131,[[["pator"],["self"]],["bool"]]],[11,"eq","","",132,[[["self"],["patpath"]],["bool"]]],[11,"ne","","",132,[[["self"],["patpath"]],["bool"]]],[11,"eq","","",133,[[["patrange"],["self"]],["bool"]]],[11,"ne","","",133,[[["patrange"],["self"]],["bool"]]],[11,"eq","","",134,[[["patreference"],["self"]],["bool"]]],[11,"ne","","",134,[[["patreference"],["self"]],["bool"]]],[11,"eq","","",135,[[["patrest"],["self"]],["bool"]]],[11,"ne","","",135,[[["patrest"],["self"]],["bool"]]],[11,"eq","","",136,[[["self"],["patslice"]],["bool"]]],[11,"ne","","",136,[[["self"],["patslice"]],["bool"]]],[11,"eq","","",137,[[["patstruct"],["self"]],["bool"]]],[11,"ne","","",137,[[["patstruct"],["self"]],["bool"]]],[11,"eq","","",138,[[["pattuple"],["self"]],["bool"]]],[11,"ne","","",138,[[["pattuple"],["self"]],["bool"]]],[11,"eq","","",139,[[["pattuplestruct"],["self"]],["bool"]]],[11,"ne","","",139,[[["pattuplestruct"],["self"]],["bool"]]],[11,"eq","","",140,[[["pattype"],["self"]],["bool"]]],[11,"ne","","",140,[[["pattype"],["self"]],["bool"]]],[11,"eq","","",141,[[["patwild"],["self"]],["bool"]]],[11,"ne","","",141,[[["patwild"],["self"]],["bool"]]],[11,"eq","","",126,[[["fieldpat"],["self"]],["bool"]]],[11,"ne","","",126,[[["fieldpat"],["self"]],["bool"]]],[11,"eq","","",177,[[["self"]],["bool"]]],[11,"eq","","",146,[[["self"],["path"]],["bool"]]],[11,"ne","","",146,[[["self"],["path"]],["bool"]]],[11,"eq","","",147,[[["pathsegment"],["self"]],["bool"]]],[11,"ne","","",147,[[["pathsegment"],["self"]],["bool"]]],[11,"eq","","",179,[[["self"],["patharguments"]],["bool"]]],[11,"ne","","",179,[[["self"],["patharguments"]],["bool"]]],[11,"eq","","",178,[[["genericargument"],["self"]],["bool"]]],[11,"ne","","",178,[[["genericargument"],["self"]],["bool"]]],[11,"eq","","",142,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"ne","","",142,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"eq","","",143,[[["self"],["binding"]],["bool"]]],[11,"ne","","",143,[[["self"],["binding"]],["bool"]]],[11,"eq","","",144,[[["self"],["constraint"]],["bool"]]],[11,"ne","","",144,[[["self"],["constraint"]],["bool"]]],[11,"eq","","",145,[[["parenthesizedgenericarguments"],["self"]],["bool"]]],[11,"ne","","",145,[[["parenthesizedgenericarguments"],["self"]],["bool"]]],[11,"eq","","",148,[[["qself"],["self"]],["bool"]]],[11,"ne","","",148,[[["qself"],["self"]],["bool"]]],[11,"eq","syn::buffer","",291,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",291,[[["self"],["cursor"]],["bool"]]],[11,"eq","syn::punctuated","",294,[[["punctuated"],["self"]],["bool"]]],[11,"ne","","",294,[[["punctuated"],["self"]],["bool"]]],[11,"partial_cmp","syn","",100,[[["lifetime"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","syn::token","",180,[[["self"]]]],[11,"deref","","",233,[[["self"]]]],[11,"deref","","",235,[[["self"]]]],[11,"deref","","",238,[[["self"]]]],[11,"deref","","",239,[[["self"]]]],[11,"deref","","",240,[[["self"]]]],[11,"deref","","",242,[[["self"]]]],[11,"deref","","",244,[[["self"]]]],[11,"deref","","",245,[[["self"]]]],[11,"deref","","",247,[[["self"]]]],[11,"deref","","",248,[[["self"]]]],[11,"deref","","",252,[[["self"]]]],[11,"deref","","",255,[[["self"]]]],[11,"deref","","",257,[[["self"]]]],[11,"deref","","",260,[[["self"]]]],[11,"deref","","",263,[[["self"]]]],[11,"deref","","",264,[[["self"]]]],[11,"deref","","",267,[[["self"]]]],[11,"deref","","",270,[[["self"]]]],[11,"deref","","",275,[[["self"]]]],[11,"deref","","",276,[[["self"]]]],[11,"deref","","",278,[[["self"]]]],[11,"deref","syn::parse","",300,[[["self"]]]],[11,"deref_mut","syn::token","",180,[[["self"]]]],[11,"deref_mut","","",233,[[["self"]]]],[11,"deref_mut","","",235,[[["self"]]]],[11,"deref_mut","","",238,[[["self"]]]],[11,"deref_mut","","",239,[[["self"]]]],[11,"deref_mut","","",240,[[["self"]]]],[11,"deref_mut","","",242,[[["self"]]]],[11,"deref_mut","","",244,[[["self"]]]],[11,"deref_mut","","",245,[[["self"]]]],[11,"deref_mut","","",247,[[["self"]]]],[11,"deref_mut","","",248,[[["self"]]]],[11,"deref_mut","","",252,[[["self"]]]],[11,"deref_mut","","",255,[[["self"]]]],[11,"deref_mut","","",257,[[["self"]]]],[11,"deref_mut","","",260,[[["self"]]]],[11,"deref_mut","","",263,[[["self"]]]],[11,"deref_mut","","",264,[[["self"]]]],[11,"deref_mut","","",267,[[["self"]]]],[11,"deref_mut","","",270,[[["self"]]]],[11,"deref_mut","","",275,[[["self"]]]],[11,"deref_mut","","",276,[[["self"]]]],[11,"deref_mut","","",278,[[["self"]]]],[11,"fmt","","",180,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",181,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",182,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",184,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",185,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",186,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",187,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",188,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",189,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",192,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",193,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",194,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",195,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",196,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",197,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",198,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",199,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",200,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",201,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",202,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",203,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",204,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",205,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",206,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",207,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",208,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",209,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",210,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",211,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",212,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",213,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",214,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",215,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",216,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",217,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",218,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",219,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",220,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",221,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",222,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",223,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",224,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",225,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",226,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",227,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",228,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",229,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",230,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",231,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",232,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",233,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",234,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",235,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",236,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",237,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",238,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",239,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",240,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",241,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",242,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",243,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",244,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",245,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",246,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",247,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",248,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",249,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",250,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",251,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",252,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",253,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",254,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",255,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",256,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",257,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",258,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",259,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",260,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",261,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",262,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",263,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",264,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",265,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",266,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",267,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",268,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",269,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",270,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",271,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",272,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",273,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",274,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",275,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",276,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",277,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",278,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",279,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",280,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",281,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",282,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",149,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",150,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",151,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",156,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",304,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",283,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",305,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",165,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",164,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",284,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",285,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",286,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",287,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",288,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",289,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",170,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",171,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",172,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",173,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",174,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",176,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",123,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",124,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",175,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",177,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",130,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",131,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",132,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",134,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",136,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",137,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",138,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",141,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",146,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",179,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",178,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",142,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",148,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::punctuated","",294,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",301,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",302,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",288,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",289,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",301,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",302,[[["formatter"],["self"]],["result"]]],[11,"index","syn::punctuated","",294,[[["self"],["usize"]]]],[11,"index_mut","","",294,[[["self"],["usize"]]]],[11,"hash","syn::token","",180,[[["self"],["h"]]]],[11,"hash","","",181,[[["self"],["h"]]]],[11,"hash","","",182,[[["self"],["h"]]]],[11,"hash","","",183,[[["self"],["h"]]]],[11,"hash","","",184,[[["self"],["h"]]]],[11,"hash","","",185,[[["self"],["h"]]]],[11,"hash","","",186,[[["self"],["h"]]]],[11,"hash","","",187,[[["self"],["h"]]]],[11,"hash","","",188,[[["self"],["h"]]]],[11,"hash","","",189,[[["self"],["h"]]]],[11,"hash","","",190,[[["self"],["h"]]]],[11,"hash","","",191,[[["self"],["h"]]]],[11,"hash","","",192,[[["self"],["h"]]]],[11,"hash","","",193,[[["self"],["h"]]]],[11,"hash","","",194,[[["self"],["h"]]]],[11,"hash","","",195,[[["self"],["h"]]]],[11,"hash","","",196,[[["self"],["h"]]]],[11,"hash","","",197,[[["self"],["h"]]]],[11,"hash","","",198,[[["self"],["h"]]]],[11,"hash","","",199,[[["self"],["h"]]]],[11,"hash","","",200,[[["self"],["h"]]]],[11,"hash","","",201,[[["self"],["h"]]]],[11,"hash","","",202,[[["self"],["h"]]]],[11,"hash","","",203,[[["self"],["h"]]]],[11,"hash","","",204,[[["self"],["h"]]]],[11,"hash","","",205,[[["self"],["h"]]]],[11,"hash","","",206,[[["self"],["h"]]]],[11,"hash","","",207,[[["self"],["h"]]]],[11,"hash","","",208,[[["self"],["h"]]]],[11,"hash","","",209,[[["self"],["h"]]]],[11,"hash","","",210,[[["self"],["h"]]]],[11,"hash","","",211,[[["self"],["h"]]]],[11,"hash","","",212,[[["self"],["h"]]]],[11,"hash","","",213,[[["self"],["h"]]]],[11,"hash","","",214,[[["self"],["h"]]]],[11,"hash","","",215,[[["self"],["h"]]]],[11,"hash","","",216,[[["self"],["h"]]]],[11,"hash","","",217,[[["self"],["h"]]]],[11,"hash","","",218,[[["self"],["h"]]]],[11,"hash","","",219,[[["self"],["h"]]]],[11,"hash","","",220,[[["self"],["h"]]]],[11,"hash","","",221,[[["self"],["h"]]]],[11,"hash","","",222,[[["self"],["h"]]]],[11,"hash","","",223,[[["self"],["h"]]]],[11,"hash","","",224,[[["self"],["h"]]]],[11,"hash","","",225,[[["self"],["h"]]]],[11,"hash","","",226,[[["self"],["h"]]]],[11,"hash","","",227,[[["self"],["h"]]]],[11,"hash","","",228,[[["self"],["h"]]]],[11,"hash","","",229,[[["self"],["h"]]]],[11,"hash","","",230,[[["self"],["h"]]]],[11,"hash","","",231,[[["self"],["h"]]]],[11,"hash","","",232,[[["self"],["h"]]]],[11,"hash","","",233,[[["self"],["h"]]]],[11,"hash","","",234,[[["self"],["h"]]]],[11,"hash","","",235,[[["self"],["h"]]]],[11,"hash","","",236,[[["self"],["h"]]]],[11,"hash","","",237,[[["self"],["h"]]]],[11,"hash","","",238,[[["self"],["h"]]]],[11,"hash","","",239,[[["self"],["h"]]]],[11,"hash","","",240,[[["self"],["h"]]]],[11,"hash","","",241,[[["self"],["h"]]]],[11,"hash","","",242,[[["self"],["h"]]]],[11,"hash","","",243,[[["self"],["h"]]]],[11,"hash","","",244,[[["self"],["h"]]]],[11,"hash","","",245,[[["self"],["h"]]]],[11,"hash","","",246,[[["self"],["h"]]]],[11,"hash","","",247,[[["self"],["h"]]]],[11,"hash","","",248,[[["self"],["h"]]]],[11,"hash","","",249,[[["self"],["h"]]]],[11,"hash","","",250,[[["self"],["h"]]]],[11,"hash","","",251,[[["self"],["h"]]]],[11,"hash","","",252,[[["self"],["h"]]]],[11,"hash","","",253,[[["self"],["h"]]]],[11,"hash","","",254,[[["self"],["h"]]]],[11,"hash","","",255,[[["self"],["h"]]]],[11,"hash","","",256,[[["self"],["h"]]]],[11,"hash","","",257,[[["self"],["h"]]]],[11,"hash","","",258,[[["self"],["h"]]]],[11,"hash","","",259,[[["self"],["h"]]]],[11,"hash","","",260,[[["self"],["h"]]]],[11,"hash","","",261,[[["self"],["h"]]]],[11,"hash","","",262,[[["self"],["h"]]]],[11,"hash","","",263,[[["self"],["h"]]]],[11,"hash","","",264,[[["self"],["h"]]]],[11,"hash","","",265,[[["self"],["h"]]]],[11,"hash","","",266,[[["self"],["h"]]]],[11,"hash","","",267,[[["self"],["h"]]]],[11,"hash","","",268,[[["self"],["h"]]]],[11,"hash","","",269,[[["self"],["h"]]]],[11,"hash","","",270,[[["self"],["h"]]]],[11,"hash","","",271,[[["self"],["h"]]]],[11,"hash","","",272,[[["self"],["h"]]]],[11,"hash","","",273,[[["self"],["h"]]]],[11,"hash","","",274,[[["self"],["h"]]]],[11,"hash","","",275,[[["self"],["h"]]]],[11,"hash","","",276,[[["self"],["h"]]]],[11,"hash","","",277,[[["self"],["h"]]]],[11,"hash","","",278,[[["self"],["h"]]]],[11,"hash","","",279,[[["self"],["h"]]]],[11,"hash","","",280,[[["self"],["h"]]]],[11,"hash","","",281,[[["self"],["h"]]]],[11,"hash","","",282,[[["self"],["h"]]]],[11,"hash","syn","",0,[[["self"],["h"]]]],[11,"hash","","",149,[[["self"],["__h"]]]],[11,"hash","","",150,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",151,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",152,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",153,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"hash","","",27,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","","",32,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","","",35,[[["self"],["__h"]]]],[11,"hash","","",36,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"hash","","",39,[[["self"],["__h"]]]],[11,"hash","","",40,[[["self"],["__h"]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","","",43,[[["self"],["__h"]]]],[11,"hash","","",44,[[["self"],["__h"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",46,[[["self"],["__h"]]]],[11,"hash","","",47,[[["self"],["__h"]]]],[11,"hash","","",48,[[["self"],["__h"]]]],[11,"hash","","",49,[[["self"],["__h"]]]],[11,"hash","","",50,[[["self"],["__h"]]]],[11,"hash","","",51,[[["self"],["__h"]]]],[11,"hash","","",52,[[["self"],["__h"]]]],[11,"hash","","",156,[[["self"],["h"]]]],[11,"hash","","",157,[[["self"],["__h"]]]],[11,"hash","","",53,[[["self"],["h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",154,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",155,[[["self"],["__h"]]]],[11,"hash","","",56,[[["self"],["__h"]]]],[11,"hash","","",158,[[["self"],["__h"]]]],[11,"hash","","",62,[[["self"],["__h"]]]],[11,"hash","","",57,[[["self"],["__h"]]]],[11,"hash","","",55,[[["self"],["__h"]]]],[11,"hash","","",304,[[["self"],["__h"]]]],[11,"hash","","",283,[[["self"],["__h"]]]],[11,"hash","","",305,[[["self"],["__h"]]]],[11,"hash","","",54,[[["self"],["__h"]]]],[11,"hash","","",160,[[["self"],["__h"]]]],[11,"hash","","",61,[[["self"],["__h"]]]],[11,"hash","","",159,[[["self"],["__h"]]]],[11,"hash","","",63,[[["self"],["__h"]]]],[11,"hash","","",161,[[["self"],["__h"]]]],[11,"hash","","",60,[[["self"],["__h"]]]],[11,"hash","","",59,[[["self"],["__h"]]]],[11,"hash","","",58,[[["self"],["__h"]]]],[11,"hash","","",72,[[["self"],["__h"]]]],[11,"hash","","",73,[[["self"],["__h"]]]],[11,"hash","","",74,[[["self"],["__h"]]]],[11,"hash","","",75,[[["self"],["__h"]]]],[11,"hash","","",76,[[["self"],["__h"]]]],[11,"hash","","",77,[[["self"],["__h"]]]],[11,"hash","","",78,[[["self"],["__h"]]]],[11,"hash","","",80,[[["self"],["__h"]]]],[11,"hash","","",81,[[["self"],["__h"]]]],[11,"hash","","",82,[[["self"],["__h"]]]],[11,"hash","","",83,[[["self"],["__h"]]]],[11,"hash","","",84,[[["self"],["__h"]]]],[11,"hash","","",85,[[["self"],["__h"]]]],[11,"hash","","",86,[[["self"],["__h"]]]],[11,"hash","","",87,[[["self"],["__h"]]]],[11,"hash","","",165,[[["self"],["h"]]]],[11,"hash","","",79,[[["self"],["h"]]]],[11,"hash","","",167,[[["self"],["__h"]]]],[11,"hash","","",97,[[["self"],["__h"]]]],[11,"hash","","",96,[[["self"],["__h"]]]],[11,"hash","","",98,[[["self"],["__h"]]]],[11,"hash","","",94,[[["self"],["__h"]]]],[11,"hash","","",95,[[["self"],["__h"]]]],[11,"hash","","",64,[[["self"],["__h"]]]],[11,"hash","","",66,[[["self"],["__h"]]]],[11,"hash","","",67,[[["self"],["__h"]]]],[11,"hash","","",65,[[["self"],["__h"]]]],[11,"hash","","",163,[[["self"],["h"]]]],[11,"hash","","",90,[[["self"],["__h"]]]],[11,"hash","","",92,[[["self"],["__h"]]]],[11,"hash","","",93,[[["self"],["__h"]]]],[11,"hash","","",91,[[["self"],["__h"]]]],[11,"hash","","",166,[[["self"],["h"]]]],[11,"hash","","",68,[[["self"],["__h"]]]],[11,"hash","","",70,[[["self"],["__h"]]]],[11,"hash","","",71,[[["self"],["__h"]]]],[11,"hash","","",69,[[["self"],["__h"]]]],[11,"hash","","",164,[[["self"],["h"]]]],[11,"hash","","",89,[[["self"],["__h"]]]],[11,"hash","","",162,[[["self"],["__h"]]]],[11,"hash","","",88,[[["self"],["__h"]]]],[11,"hash","","",99,[[["self"],["__h"]]]],[11,"hash","","",100,[[["self"],["h"]]]],[11,"hash","","",168,[[["self"],["h"]]]],[11,"hash","","",284,[[["self"],["h"]]]],[11,"hash","","",285,[[["self"],["h"]]]],[11,"hash","","",286,[[["self"],["h"]]]],[11,"hash","","",287,[[["self"],["h"]]]],[11,"hash","","",288,[[["self"],["h"]]]],[11,"hash","","",289,[[["self"],["h"]]]],[11,"hash","","",101,[[["self"],["h"]]]],[11,"hash","","",169,[[["self"],["__h"]]]],[11,"hash","","",170,[[["self"],["__h"]]]],[11,"hash","","",102,[[["self"],["h"]]]],[11,"hash","","",106,[[["self"],["__h"]]]],[11,"hash","","",171,[[["self"],["__h"]]]],[11,"hash","","",104,[[["self"],["__h"]]]],[11,"hash","","",103,[[["self"],["__h"]]]],[11,"hash","","",105,[[["self"],["__h"]]]],[11,"hash","","",172,[[["self"],["__h"]]]],[11,"hash","","",173,[[["self"],["__h"]]]],[11,"hash","","",107,[[["self"],["__h"]]]],[11,"hash","","",174,[[["self"],["__h"]]]],[11,"hash","","",108,[[["self"],["__h"]]]],[11,"hash","","",111,[[["self"],["__h"]]]],[11,"hash","","",112,[[["self"],["__h"]]]],[11,"hash","","",113,[[["self"],["__h"]]]],[11,"hash","","",114,[[["self"],["__h"]]]],[11,"hash","","",115,[[["self"],["__h"]]]],[11,"hash","","",116,[[["self"],["__h"]]]],[11,"hash","","",117,[[["self"],["__h"]]]],[11,"hash","","",118,[[["self"],["__h"]]]],[11,"hash","","",119,[[["self"],["__h"]]]],[11,"hash","","",120,[[["self"],["__h"]]]],[11,"hash","","",121,[[["self"],["__h"]]]],[11,"hash","","",122,[[["self"],["__h"]]]],[11,"hash","","",123,[[["self"],["__h"]]]],[11,"hash","","",124,[[["self"],["__h"]]]],[11,"hash","","",176,[[["self"],["h"]]]],[11,"hash","","",109,[[["self"],["__h"]]]],[11,"hash","","",110,[[["self"],["__h"]]]],[11,"hash","","",125,[[["self"],["__h"]]]],[11,"hash","","",175,[[["self"],["__h"]]]],[11,"hash","","",127,[[["self"],["__h"]]]],[11,"hash","","",128,[[["self"],["__h"]]]],[11,"hash","","",129,[[["self"],["__h"]]]],[11,"hash","","",130,[[["self"],["__h"]]]],[11,"hash","","",131,[[["self"],["__h"]]]],[11,"hash","","",132,[[["self"],["__h"]]]],[11,"hash","","",133,[[["self"],["__h"]]]],[11,"hash","","",134,[[["self"],["__h"]]]],[11,"hash","","",135,[[["self"],["__h"]]]],[11,"hash","","",136,[[["self"],["__h"]]]],[11,"hash","","",137,[[["self"],["__h"]]]],[11,"hash","","",138,[[["self"],["__h"]]]],[11,"hash","","",139,[[["self"],["__h"]]]],[11,"hash","","",140,[[["self"],["__h"]]]],[11,"hash","","",141,[[["self"],["__h"]]]],[11,"hash","","",126,[[["self"],["__h"]]]],[11,"hash","","",177,[[["self"],["h"]]]],[11,"hash","","",146,[[["self"],["__h"]]]],[11,"hash","","",147,[[["self"],["__h"]]]],[11,"hash","","",179,[[["self"],["__h"]]]],[11,"hash","","",178,[[["self"],["__h"]]]],[11,"hash","","",142,[[["self"],["__h"]]]],[11,"hash","","",143,[[["self"],["__h"]]]],[11,"hash","","",144,[[["self"],["__h"]]]],[11,"hash","","",145,[[["self"],["__h"]]]],[11,"hash","","",148,[[["self"],["__h"]]]],[11,"hash","syn::punctuated","",294,[[["self"],["__h"]]]],[11,"from_iter","","",294,[[["intoiterator"]],["self"]]],[11,"from_iter","","",294,[[["intoiterator"]],["self"]]],[11,"description","syn","",302,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",180,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",181,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",182,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",183,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",184,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",185,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",186,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",187,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",188,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",189,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",190,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",191,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",192,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",193,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",194,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",195,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",196,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",197,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",198,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",199,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",200,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",201,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",202,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",203,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",204,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",205,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",206,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",207,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",208,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",209,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",210,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",211,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",212,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",213,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",214,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",215,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",216,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",217,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",218,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",219,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",220,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",221,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",222,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",223,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",224,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",225,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",226,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",227,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",228,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",229,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",230,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",231,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",232,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",233,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",234,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",235,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",236,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",237,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",238,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",239,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",240,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",241,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",242,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",243,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",244,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",245,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",246,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",247,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",248,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",249,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",250,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",251,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",252,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",253,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",254,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",255,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",256,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",257,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",258,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",259,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",260,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",261,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",262,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",263,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",264,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",265,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",266,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",267,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",268,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",269,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",270,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",271,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",272,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",273,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",274,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",275,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",276,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",277,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",278,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn","",150,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",151,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",0,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",1,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",2,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",152,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",153,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",6,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",4,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",5,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",3,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",8,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",7,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",9,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",156,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",21,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",14,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",23,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",37,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",13,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",154,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",47,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",19,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",49,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",33,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",24,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",48,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",32,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",30,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",51,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",28,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",34,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",36,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",17,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",18,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",46,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",52,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",25,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",50,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",20,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",15,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",16,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",27,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",157,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",53,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",31,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",40,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",39,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",41,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",22,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",26,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",43,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",35,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",44,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",42,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",29,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",38,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",45,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",12,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",11,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",10,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",158,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",160,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",161,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",56,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",304,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",283,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",305,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",54,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",57,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",62,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",61,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",159,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",55,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",63,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",60,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",59,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",58,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",165,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",167,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",163,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",166,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",164,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",162,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",74,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",87,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",81,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",72,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",75,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",80,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",76,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",85,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",73,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",82,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",86,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",83,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",84,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",77,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",78,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",79,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",97,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",96,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",98,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",94,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",95,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",90,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",92,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",93,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",91,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",68,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",70,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",71,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",69,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",64,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",66,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",67,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",65,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",89,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",88,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",99,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",100,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",168,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",284,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",285,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",286,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",287,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",288,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",289,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",101,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",102,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",106,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",172,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",173,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",107,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",174,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",108,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",176,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",122,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",111,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",120,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",121,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",112,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",117,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",124,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",119,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",123,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",114,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",113,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",118,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",115,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",116,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",175,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",110,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",125,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",109,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",177,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",141,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",128,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",137,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",139,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",140,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",132,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",138,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",127,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",134,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",135,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",129,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",133,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",136,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",130,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",131,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",126,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",146,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",147,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",179,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",178,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",142,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",143,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",144,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",145,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn::punctuated","",294,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",293,[[["tokenstream"],["self"]]]],[11,"fmt","syn","",157,[[["formatter"],["self"]],["result"]]],[11,"span","","",157,[[["self"]],[["option",["span"]],["span"]]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"span","","",53,[[["self"]],[["option",["span"]],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",303,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",303,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",303,[[["span"],["self"]]]],[11,"visit_abi","syn::visit","",296,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",296,[[["anglebracketedgenericarguments"],["self"]]]],[11,"visit_arm","","",296,[[["self"],["arm"]]]],[11,"visit_attr_style","","",296,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",296,[[["attribute"],["self"]]]],[11,"visit_bare_fn_arg","","",296,[[["self"],["barefnarg"]]]],[11,"visit_bin_op","","",296,[[["self"],["binop"]]]],[11,"visit_binding","","",296,[[["self"],["binding"]]]],[11,"visit_block","","",296,[[["self"],["block"]]]],[11,"visit_bound_lifetimes","","",296,[[["boundlifetimes"],["self"]]]],[11,"visit_const_param","","",296,[[["constparam"],["self"]]]],[11,"visit_constraint","","",296,[[["self"],["constraint"]]]],[11,"visit_data","","",296,[[["data"],["self"]]]],[11,"visit_data_enum","","",296,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",296,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",296,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",296,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",296,[[["self"],["expr"]]]],[11,"visit_expr_array","","",296,[[["exprarray"],["self"]]]],[11,"visit_expr_assign","","",296,[[["self"],["exprassign"]]]],[11,"visit_expr_assign_op","","",296,[[["self"],["exprassignop"]]]],[11,"visit_expr_async","","",296,[[["self"],["exprasync"]]]],[11,"visit_expr_await","","",296,[[["self"],["exprawait"]]]],[11,"visit_expr_binary","","",296,[[["self"],["exprbinary"]]]],[11,"visit_expr_block","","",296,[[["exprblock"],["self"]]]],[11,"visit_expr_box","","",296,[[["self"],["exprbox"]]]],[11,"visit_expr_break","","",296,[[["self"],["exprbreak"]]]],[11,"visit_expr_call","","",296,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",296,[[["self"],["exprcast"]]]],[11,"visit_expr_closure","","",296,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue","","",296,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field","","",296,[[["self"],["exprfield"]]]],[11,"visit_expr_for_loop","","",296,[[["exprforloop"],["self"]]]],[11,"visit_expr_group","","",296,[[["self"],["exprgroup"]]]],[11,"visit_expr_if","","",296,[[["self"],["exprif"]]]],[11,"visit_expr_index","","",296,[[["self"],["exprindex"]]]],[11,"visit_expr_let","","",296,[[["self"],["exprlet"]]]],[11,"visit_expr_lit","","",296,[[["self"],["exprlit"]]]],[11,"visit_expr_loop","","",296,[[["exprloop"],["self"]]]],[11,"visit_expr_macro","","",296,[[["self"],["exprmacro"]]]],[11,"visit_expr_match","","",296,[[["exprmatch"],["self"]]]],[11,"visit_expr_method_call","","",296,[[["exprmethodcall"],["self"]]]],[11,"visit_expr_paren","","",296,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",296,[[["self"],["exprpath"]]]],[11,"visit_expr_range","","",296,[[["exprrange"],["self"]]]],[11,"visit_expr_reference","","",296,[[["exprreference"],["self"]]]],[11,"visit_expr_repeat","","",296,[[["self"],["exprrepeat"]]]],[11,"visit_expr_return","","",296,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct","","",296,[[["self"],["exprstruct"]]]],[11,"visit_expr_try","","",296,[[["self"],["exprtry"]]]],[11,"visit_expr_try_block","","",296,[[["self"],["exprtryblock"]]]],[11,"visit_expr_tuple","","",296,[[["self"],["exprtuple"]]]],[11,"visit_expr_type","","",296,[[["self"],["exprtype"]]]],[11,"visit_expr_unary","","",296,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe","","",296,[[["self"],["exprunsafe"]]]],[11,"visit_expr_while","","",296,[[["exprwhile"],["self"]]]],[11,"visit_expr_yield","","",296,[[["expryield"],["self"]]]],[11,"visit_field","","",296,[[["self"],["field"]]]],[11,"visit_field_pat","","",296,[[["fieldpat"],["self"]]]],[11,"visit_field_value","","",296,[[["self"],["fieldvalue"]]]],[11,"visit_fields","","",296,[[["self"],["fields"]]]],[11,"visit_fields_named","","",296,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",296,[[["fieldsunnamed"],["self"]]]],[11,"visit_file","","",296,[[["self"],["file"]]]],[11,"visit_fn_arg","","",296,[[["self"],["fnarg"]]]],[11,"visit_foreign_item","","",296,[[["self"],["foreignitem"]]]],[11,"visit_foreign_item_fn","","",296,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro","","",296,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static","","",296,[[["self"],["foreignitemstatic"]]]],[11,"visit_foreign_item_type","","",296,[[["self"],["foreignitemtype"]]]],[11,"visit_generic_argument","","",296,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument","","",296,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param","","",296,[[["self"],["genericparam"]]]],[11,"visit_generics","","",296,[[["self"],["generics"]]]],[11,"visit_ident","","",296,[[["self"],["ident"]]]],[11,"visit_impl_item","","",296,[[["implitem"],["self"]]]],[11,"visit_impl_item_const","","",296,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_macro","","",296,[[["self"],["implitemmacro"]]]],[11,"visit_impl_item_method","","",296,[[["self"],["implitemmethod"]]]],[11,"visit_impl_item_type","","",296,[[["self"],["implitemtype"]]]],[11,"visit_index","","",296,[[["self"],["index"]]]],[11,"visit_item","","",296,[[["self"],["item"]]]],[11,"visit_item_const","","",296,[[["self"],["itemconst"]]]],[11,"visit_item_enum","","",296,[[["self"],["itemenum"]]]],[11,"visit_item_extern_crate","","",296,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn","","",296,[[["self"],["itemfn"]]]],[11,"visit_item_foreign_mod","","",296,[[["self"],["itemforeignmod"]]]],[11,"visit_item_impl","","",296,[[["itemimpl"],["self"]]]],[11,"visit_item_macro","","",296,[[["self"],["itemmacro"]]]],[11,"visit_item_macro2","","",296,[[["self"],["itemmacro2"]]]],[11,"visit_item_mod","","",296,[[["self"],["itemmod"]]]],[11,"visit_item_static","","",296,[[["self"],["itemstatic"]]]],[11,"visit_item_struct","","",296,[[["self"],["itemstruct"]]]],[11,"visit_item_trait","","",296,[[["self"],["itemtrait"]]]],[11,"visit_item_trait_alias","","",296,[[["self"],["itemtraitalias"]]]],[11,"visit_item_type","","",296,[[["self"],["itemtype"]]]],[11,"visit_item_union","","",296,[[["self"],["itemunion"]]]],[11,"visit_item_use","","",296,[[["self"],["itemuse"]]]],[11,"visit_label","","",296,[[["label"],["self"]]]],[11,"visit_lifetime","","",296,[[["lifetime"],["self"]]]],[11,"visit_lifetime_def","","",296,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",296,[[["lit"],["self"]]]],[11,"visit_lit_bool","","",296,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",296,[[["litbyte"],["self"]]]],[11,"visit_lit_byte_str","","",296,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",296,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",296,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",296,[[["self"],["litint"]]]],[11,"visit_lit_str","","",296,[[["self"],["litstr"]]]],[11,"visit_local","","",296,[[["self"],["local"]]]],[11,"visit_macro","","",296,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",296,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",296,[[["member"],["self"]]]],[11,"visit_meta","","",296,[[["meta"],["self"]]]],[11,"visit_meta_list","","",296,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",296,[[["self"],["metanamevalue"]]]],[11,"visit_method_turbofish","","",296,[[["methodturbofish"],["self"]]]],[11,"visit_nested_meta","","",296,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",296,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat","","",296,[[["pat"],["self"]]]],[11,"visit_pat_box","","",296,[[["self"],["patbox"]]]],[11,"visit_pat_ident","","",296,[[["self"],["patident"]]]],[11,"visit_pat_lit","","",296,[[["patlit"],["self"]]]],[11,"visit_pat_macro","","",296,[[["self"],["patmacro"]]]],[11,"visit_pat_or","","",296,[[["self"],["pator"]]]],[11,"visit_pat_path","","",296,[[["self"],["patpath"]]]],[11,"visit_pat_range","","",296,[[["self"],["patrange"]]]],[11,"visit_pat_reference","","",296,[[["self"],["patreference"]]]],[11,"visit_pat_rest","","",296,[[["self"],["patrest"]]]],[11,"visit_pat_slice","","",296,[[["self"],["patslice"]]]],[11,"visit_pat_struct","","",296,[[["self"],["patstruct"]]]],[11,"visit_pat_tuple","","",296,[[["pattuple"],["self"]]]],[11,"visit_pat_tuple_struct","","",296,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_type","","",296,[[["self"],["pattype"]]]],[11,"visit_pat_wild","","",296,[[["self"],["patwild"]]]],[11,"visit_path","","",296,[[["path"],["self"]]]],[11,"visit_path_arguments","","",296,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",296,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",296,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",296,[[["predicatelifetime"],["self"]]]],[11,"visit_predicate_type","","",296,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",296,[[["self"],["qself"]]]],[11,"visit_range_limits","","",296,[[["self"],["rangelimits"]]]],[11,"visit_receiver","","",296,[[["self"],["receiver"]]]],[11,"visit_return_type","","",296,[[["returntype"],["self"]]]],[11,"visit_signature","","",296,[[["signature"],["self"]]]],[11,"visit_span","","",296,[[["self"],["span"]]]],[11,"visit_stmt","","",296,[[["self"],["stmt"]]]],[11,"visit_trait_bound","","",296,[[["traitbound"],["self"]]]],[11,"visit_trait_bound_modifier","","",296,[[["self"],["traitboundmodifier"]]]],[11,"visit_trait_item","","",296,[[["self"],["traititem"]]]],[11,"visit_trait_item_const","","",296,[[["self"],["traititemconst"]]]],[11,"visit_trait_item_macro","","",296,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method","","",296,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type","","",296,[[["traititemtype"],["self"]]]],[11,"visit_type","","",296,[[["self"],["type"]]]],[11,"visit_type_array","","",296,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",296,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",296,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",296,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",296,[[["typeinfer"],["self"]]]],[11,"visit_type_macro","","",296,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",296,[[["self"],["typenever"]]]],[11,"visit_type_param","","",296,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",296,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",296,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",296,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",296,[[["typeptr"],["self"]]]],[11,"visit_type_reference","","",296,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",296,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",296,[[["typetraitobject"],["self"]]]],[11,"visit_type_tuple","","",296,[[["self"],["typetuple"]]]],[11,"visit_un_op","","",296,[[["self"],["unop"]]]],[11,"visit_use_glob","","",296,[[["self"],["useglob"]]]],[11,"visit_use_group","","",296,[[["usegroup"],["self"]]]],[11,"visit_use_name","","",296,[[["self"],["usename"]]]],[11,"visit_use_path","","",296,[[["self"],["usepath"]]]],[11,"visit_use_rename","","",296,[[["self"],["userename"]]]],[11,"visit_use_tree","","",296,[[["self"],["usetree"]]]],[11,"visit_variadic","","",296,[[["self"],["variadic"]]]],[11,"visit_variant","","",296,[[["variant"],["self"]]]],[11,"visit_vis_crate","","",296,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",296,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",296,[[["visrestricted"],["self"]]]],[11,"visit_visibility","","",296,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",296,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",296,[[["self"],["wherepredicate"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",312,[[["self"],["peek"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",312,[[],["error"]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"Arm"],[3,"FieldValue"],[3,"Label"],[3,"MethodTurbofish"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Block"],[3,"Local"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"GenericMethodArgument"],[4,"RangeLimits"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"Stmt"],[4,"ReturnType"],[4,"Type"],[4,"Pat"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]};
searchIndex["toml"] = {"doc":"A [TOML]-parsing library","i":[[3,"Spanned","toml","A spanned value, indicating the range at which it is…",null,null],[0,"map","","A map of String to toml::Value.",null,null],[3,"Map","toml::map","Represents a JSON key/value type.",null,null],[3,"VacantEntry","","A vacant Entry. It is part of the [`Entry`] enum.",null,null],[3,"OccupiedEntry","","An occupied Entry. It is part of the [`Entry`] enum.",null,null],[3,"Iter","","An iterator over a toml::Map's entries.",null,null],[3,"IterMut","","A mutable iterator over a toml::Map's entries.",null,null],[3,"IntoIter","","An owning iterator over a toml::Map's entries.",null,null],[3,"Keys","","An iterator over a toml::Map's keys.",null,null],[3,"Values","","An iterator over a toml::Map's values.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry.",0,null],[13,"Occupied","","An occupied Entry.",0,null],[11,"new","","Makes a new empty Map.",1,[[],["self"]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",1,[[["usize"]],["self"]]],[11,"clear","","Clears the map, removing all values.",1,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[["self"],["q"]],[["value"],["option",["value"]]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",1,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",1,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"insert","","Inserts a key-value pair into the map.",1,[[["value"],["self"],["string"]],[["option",["value"]],["value"]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",1,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["s"]],["entry"]]],[11,"len","","Returns the number of elements in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"iter","","Gets an iterator over the entries of the map.",1,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",1,[[["self"]],["itermut"]]],[11,"keys","","Gets an iterator over the keys of the map.",1,[[["self"]],["keys"]]],[11,"values","","Gets an iterator over the values of the map.",1,[[["self"]],["values"]]],[11,"key","","Returns a reference to this entry's key.",0,[[["self"]],["string"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["value"]],["value"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["f"]],["value"]]],[11,"key","","Gets a reference to the key that would be used when…",2,[[["self"]],["string"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",2,[[["value"]],["value"]]],[11,"key","","Gets a reference to the key in the entry.",3,[[["self"]],["string"]]],[11,"get","","Gets a reference to the value in the entry.",3,[[["self"]],["value"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,[[["self"]],["value"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,[[],["value"]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`'s…",3,[[["self"],["value"]],["value"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,[[],["value"]]],[0,"value","toml","Definition of a TOML value",null,null],[3,"Datetime","toml::value","A parsed TOML datetime value",null,null],[3,"DatetimeParseError","","Error returned from parsing a `Datetime` in the `FromStr`…",null,null],[4,"Value","","Representation of a TOML value.",null,null],[13,"String","","Represents a TOML string",4,null],[13,"Integer","","Represents a TOML integer",4,null],[13,"Float","","Represents a TOML float",4,null],[13,"Boolean","","Represents a TOML boolean",4,null],[13,"Datetime","","Represents a TOML datetime",4,null],[13,"Array","","Represents a TOML array",4,null],[13,"Table","","Represents a TOML table",4,null],[6,"Array","","Type representing a TOML array, payload of the…",null,null],[6,"Table","","Type representing a TOML table, payload of the…",null,null],[8,"Index","","Types that can be used to index a `toml::Value`",null,null],[11,"try_from","","Convert a `T` into `toml::Value` which is an enum that can…",4,[[["t"]],[["error"],["result",["value","error"]],["value"]]]],[11,"try_into","","Interpret a `toml::Value` as an instance of type `T`.",4,[[],[["result",["error"]],["error"]]]],[11,"get","","Index into a TOML array or map. A string index can be used…",4,[[["self"],["index"]],[["value"],["option",["value"]]]]],[11,"get_mut","","Mutably index into a TOML array or map. A string index can…",4,[[["self"],["index"]],[["option",["value"]],["value"]]]],[11,"as_integer","","Extracts the integer value if it is an integer.",4,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"is_integer","","Tests whether this value is an integer.",4,[[["self"]],["bool"]]],[11,"as_float","","Extracts the float value if it is a float.",4,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"is_float","","Tests whether this value is a float.",4,[[["self"]],["bool"]]],[11,"as_bool","","Extracts the boolean value if it is a boolean.",4,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"is_bool","","Tests whether this value is a boolean.",4,[[["self"]],["bool"]]],[11,"as_str","","Extracts the string of this value if it is a string.",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"is_str","","Tests if this value is a string.",4,[[["self"]],["bool"]]],[11,"as_datetime","","Extracts the datetime value if it is a datetime.",4,[[["self"]],[["option",["datetime"]],["datetime"]]]],[11,"is_datetime","","Tests whether this value is a datetime.",4,[[["self"]],["bool"]]],[11,"as_array","","Extracts the array value if it is an array.",4,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"as_array_mut","","Extracts the array value if it is an array.",4,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"is_array","","Tests whether this value is an array.",4,[[["self"]],["bool"]]],[11,"as_table","","Extracts the table value if it is a table.",4,[[["self"]],[["table"],["option",["table"]]]]],[11,"as_table_mut","","Extracts the table value if it is a table.",4,[[["self"]],[["table"],["option",["table"]]]]],[11,"is_table","","Tests whether this value is a table.",4,[[["self"]],["bool"]]],[11,"same_type","","Tests whether this and another value have the same type.",4,[[["self"],["value"]],["bool"]]],[11,"type_str","","Returns a human-readable representation of the type of…",4,[[["self"]],["str"]]],[0,"ser","toml","Serializing Rust structures into TOML.",null,null],[3,"Serializer","toml::ser","Serialization implementation for TOML.",null,null],[4,"Error","","Errors that can occur when serializing a type.",null,null],[13,"UnsupportedType","","Indicates that a Rust type was requested to be serialized…",5,null],[13,"KeyNotString","","The key of all TOML maps must be strings, but…",5,null],[13,"ValueAfterTable","","All values in a TOML table must be emitted before further…",5,null],[13,"DateInvalid","","A serialized date was invalid.",5,null],[13,"NumberInvalid","","A serialized number was invalid.",5,null],[13,"UnsupportedNone","","None was attempted to be serialized, but it's not supported.",5,null],[13,"Custom","","A custom error which could be generated when serializing a…",5,null],[5,"to_vec","","Serialize the given data structure as a TOML byte vector.",null,[[["t"]],[["error"],["vec",["u8"]],["result",["vec","error"]]]]],[5,"to_string","","Serialize the given data structure as a String of TOML.",null,[[["t"]],[["result",["string","error"]],["error"],["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a \"pretty\" String of…",null,[[["t"]],[["result",["string","error"]],["error"],["string"]]]],[5,"tables_last","","Convenience function to serialize items in a map in an…",null,[[["i"],["s"]],["result"]]],[11,"new","","Creates a new serializer which will emit TOML into the…",6,[[["string"]],["serializer"]]],[11,"pretty","","Instantiate a \"pretty\" formatter",6,[[["string"]],["serializer"]]],[11,"pretty_string","","Enable or Disable pretty strings",6,[[["self"],["bool"]],["self"]]],[11,"pretty_string_literal","","Enable or Disable Literal strings for pretty strings",6,[[["self"],["bool"]],["self"]]],[11,"pretty_array","","Enable or Disable pretty arrays",6,[[["self"],["bool"]],["self"]]],[11,"pretty_array_indent","","Set the indent for pretty arrays",6,[[["self"],["usize"]],["self"]]],[11,"pretty_array_trailing_comma","","Specify whether to use a trailing comma when serializing…",6,[[["self"],["bool"]],["self"]]],[0,"de","toml","Deserializing TOML into Rust structures.",null,null],[3,"Error","toml::de","Errors that can occur when deserializing a type.",null,null],[3,"Deserializer","","Deserialization implementation for TOML.",null,null],[5,"from_slice","","Deserializes a byte slice into a type.",null,[[],[["result",["error"]],["error"]]]],[5,"from_str","","Deserializes a string into a type.",null,[[["str"]],[["result",["error"]],["error"]]]],[11,"new","","Creates a new deserializer which will be deserializing the…",7,[[["str"]],["deserializer"]]],[11,"end","","The `Deserializer::end` method should be called after a…",7,[[["self"]],[["error"],["result",["error"]]]]],[11,"set_require_newline_after_table","","Historical versions of toml-rs accidentally allowed a…",7,[[["self"],["bool"]]]],[11,"set_allow_duplicate_after_longer_table","","Historical versions of toml-rs accidentally allowed a…",7,[[["self"],["bool"]]]],[11,"line_col","","Produces a (line, column) pair of the position of the…",8,[[["self"]],["option"]]],[11,"start","toml","Access the start of the span of the contained value.",9,[[["self"]],["usize"]]],[11,"end","","Access the end of the span of the contained value.",9,[[["self"]],["usize"]]],[11,"span","","Get the span of the contained value.",9,[[["self"]]]],[11,"into_inner","","Consumes the spanned value and returns the contained value.",9,[[],["t"]]],[11,"get_ref","","Returns a reference to the contained value.",9,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the contained value.",9,[[["self"]],["t"]]],[14,"toml","","Construct a [`toml::Value`] from TOML syntax.",null,null],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","toml::map","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","toml::value","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","toml::ser","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","toml::de","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","toml::value","",4,[[["str"]],["value"]]],[11,"from","","",4,[[["vec"]],["value"]]],[11,"from","","",4,[[["btreemap"]],["value"]]],[11,"from","","",4,[[["hashmap"]],["value"]]],[11,"from","","",4,[[["string"]],["value"]]],[11,"from","","",4,[[["i64"]],["value"]]],[11,"from","","",4,[[["i32"]],["value"]]],[11,"from","","",4,[[["i8"]],["value"]]],[11,"from","","",4,[[["u8"]],["value"]]],[11,"from","","",4,[[["u32"]],["value"]]],[11,"from","","",4,[[["f64"]],["value"]]],[11,"from","","",4,[[["f32"]],["value"]]],[11,"from","","",4,[[["bool"]],["value"]]],[11,"from","","",4,[[["datetime"]],["value"]]],[11,"from","","",4,[[["table"]],["value"]]],[11,"next_back","toml::map","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"next_back","","",14,[[["self"]],["option"]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"len","","",11,[[["self"]],["usize"]]],[11,"len","","",12,[[["self"]],["usize"]]],[11,"len","","",13,[[["self"]],["usize"]]],[11,"len","","",14,[[["self"]],["usize"]]],[11,"extend","","",1,[[["self"],["t"]]]],[11,"into_iter","","",1,[[]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,[[["self"]]]],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,[[["self"]]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,[[["self"]]]],[11,"next","","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,[[["self"]]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","toml::value","",4,[[["self"]],["value"]]],[11,"clone","","",15,[[["self"]],["datetime"]]],[11,"clone","","",16,[[["self"]],["datetimeparseerror"]]],[11,"clone","toml::ser","",5,[[["self"]],["error"]]],[11,"clone","toml::de","",8,[[["self"]],["error"]]],[11,"clone","toml","",9,[[["self"]],["spanned"]]],[11,"default","toml::map","",1,[[],["self"]]],[11,"cmp","toml","",9,[[["self"]],["ordering"]]],[11,"eq","toml::map","",1,[[["self"]],["bool"]]],[11,"eq","toml::value","",4,[[["self"],["value"]],["bool"]]],[11,"ne","","",4,[[["self"],["value"]],["bool"]]],[11,"eq","","",15,[[["self"],["datetime"]],["bool"]]],[11,"ne","","",15,[[["self"],["datetime"]],["bool"]]],[11,"eq","toml::ser","",5,[[["self"],["error"]],["bool"]]],[11,"ne","","",5,[[["self"],["error"]],["bool"]]],[11,"eq","toml::de","",8,[[["error"],["self"]],["bool"]]],[11,"ne","","",8,[[["error"],["self"]],["bool"]]],[11,"eq","toml","",9,[[["self"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","toml::map","",1,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","toml::value","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","toml::ser","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","toml::de","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","toml","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","toml::value","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","toml::ser","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","toml::de","",8,[[["formatter"],["self"]],["result"]]],[11,"index","toml::map","",1,[[["self"],["q"]],["value"]]],[11,"index","toml::value","",4,[[["i"],["self"]],["value"]]],[11,"index_mut","toml::map","",1,[[["self"],["q"]],["value"]]],[11,"index_mut","toml::value","",4,[[["self"],["i"]],["value"]]],[11,"hash","toml","",9,[[["self"],["h"]]]],[11,"from_iter","toml::map","",1,[[["t"]],["self"]]],[11,"from_str","toml::value","",4,[[["str"]],[["result",["value"]],["value"]]]],[11,"from_str","","",15,[[["str"]],[["datetime"],["result",["datetime","datetimeparseerror"]],["datetimeparseerror"]]]],[11,"borrow","toml","",9,[[["self"]],["str"]]],[11,"deserialize_any","toml::value","",4,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_enum","","",4,[[["str"],["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_option","","",4,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_newtype_struct","","",4,[[["str"],["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_bool","","",4,[[["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["v"]],["result"]]],[11,"deserialize_char","","",4,[[["v"]],["result"]]],[11,"deserialize_str","","",4,[[["v"]],["result"]]],[11,"deserialize_string","","",4,[[["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["v"]],["result"]]],[11,"deserialize_map","","",4,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["usize"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["v"]],["result"]]],[11,"deserialize_identifier","","",4,[[["v"]],["result"]]],[11,"into_deserializer","","",4,[[],["self"]]],[11,"custom","toml::ser","",5,[[["display"]],["error"]]],[11,"serialize","toml::map","",1,[[["s"],["self"]],["result"]]],[11,"serialize","toml::value","",4,[[["s"],["self"]],["result"]]],[11,"serialize","","",15,[[["s"],["self"]],["result"]]],[11,"serialize","toml","",9,[[["s"],["self"]],["result"]]],[11,"deserialize","toml::map","",1,[[["d"]],["result"]]],[11,"deserialize","toml::value","",4,[[["d"]],[["result",["value"]],["value"]]]],[11,"deserialize","","",15,[[["d"]],[["datetime"],["result",["datetime"]]]]],[11,"deserialize","toml","",9,[[["d"]],[["result",["spanned"]],["spanned"]]]],[11,"custom","toml::de","",8,[[["display"]],["error"]]]],"p":[[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[4,"Value"],[4,"Error"],[3,"Serializer"],[3,"Deserializer"],[3,"Error"],[3,"Spanned"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Datetime"],[3,"DatetimeParseError"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,"UnicodeXID"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);